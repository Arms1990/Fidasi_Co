{"version":3,"sources":["components/misc/Filters.jsx","components/misc/functions.js","plugins/datatables.net-buttons-bs4/js/buttons.bootstrap4.js","components/misc/DataTable.jsx","components/misc/DDL.jsx","components/misc/Card.jsx","components/misc/wizard/ValidationWizard.js","components/misc/productCardList/ContextMenuContainer.js","components/misc/productCardList/ListPageHeading.js","components/misc/productCardList/ImageListView.js","components/misc/productCardList/ThumbListView.js","components/misc/productCardList/DataListView.js","components/misc/productCardList/index.js","components/misc/productList/ContextMenuContainer.js","components/misc/productList/ImageListView.js","components/misc/productList/ProductListPagination.js","components/misc/productList/index.js","helpers/ThemeColors.js","components/charts/util.js","components/charts/config.js","components/charts/Area.js","components/charts/Bar.js","components/charts/Doughnut.js","components/charts/Line.js","components/charts/Pie.js","components/charts/PolarArea.js","components/charts/Radar.js","components/charts/Scatter.js","components/charts/SmallLine.js","components/misc/CalendarToolbar.js","components/misc/Calendar.js","components/misc/DatatablePagination.js","components/misc/Table.js","components/misc/RightModal.js","components/cards/ThumbnailImage.js","components/misc/UserCardGroup.js","components/pages/SingleLightbox.js","components/misc/TwoFactorAuthentication.jsx","components/misc/ProfileCard.js","components/carousel/GlideComponentThumbs.js","components/misc/Search.js","components/misc/Tabs.js","components/misc/ProductDescriptionText.js","components/misc/IconCard.js","components/misc/MultiSelect.jsx","components/svg/DataListIcon.js","components/svg/ThumbListIcon.js","components/svg/ImageListIcon.js","components/svg/MenuIcon.js","components/svg/MobileMenuIcon.js","components/misc/wizard/BottomNavigation.js","components/misc/wizard/TopNavigation.js","components/misc/SingleSelect.jsx","containers/navs/Topnav.Notifications.js","containers/navs/Topnav.DarkSwitch.js","containers/navs/Topnav.js","containers/navs/Sidebar.js","layout/AppLayout.js","views/app/index.js","components/common/CustomBootstrap.js","components/common/react-notifications/index.js","components/misc/CustomAceEditor.jsx","components/misc/SearchableMultiSelect.jsx","components/misc/CustomDatePicker.jsx","components/misc/FileLibrary/ListPageHeading.js","components/misc/FileLibrary/Pagination.js","components/misc/FileLibrary/ContextMenuContainer.js","components/misc/FileLibrary/DataListView.js","components/misc/FileLibrary/ImageListView.js","components/misc/FileLibrary/ThumbListView.js","components/misc/FileLibrary/ListPageListing.js","hooks/use-mousetrap.js","components/misc/FileLibrary/ImageViewer.js","components/misc/FileLibrary.jsx","components/misc/wizard/Validation.js","helpers/IntlMessages.js"],"names":["FilterOptions","React","Component","render","options","this","props","content","forEach","filterValue","index","push","key","value","created_at","Filters","constructor","super","renderCheckBox","filter","className","type","onChange","event","setState","id","target","checked","name","state","htmlFor","placeholder","renderDDL","values","renderTextField","preventDefault","slug","token","baseURL","clientID","that","form","filterForm","data","$","serializeArray","dataObject","ajax","url","headers","Authorization","elementType","page_slug","client_id","filters","success","response","onFiltersApplied","details","createRef","componentDidMount","undefined","ref","onSubmit","map","length","withRouter","connect","authUser","menu","containerClassnames","productListPriceCalculator","products","totalPrice","reduce","accumulator","current","parseInt","price","CardBody","exampleRedirect","window","location","DataTable","fn","dataTable","extend","Buttons","defaults","dom","container","button","collection","tag","active","disabled","buttonCreated","config","buttons","append","ext","rightAlignClassName","dataTableExt","oStdClasses","toggle","isOpen","modalContent","refresh","drawTable","renderFunctions","functions","component","functionName","dynamicFunctions","user","JSON","parse","responsive","processing","serverSide","search","regex","smart","caseInsensitive","columns","column","attributes","as","required","readonly","excluded","visible","protected","row","meta","kind","label","pagingType","select","info","action","text","format","filename","Math","random","toString","substring","exportOptions","modifier","page","e","dt","payload","entityName","bootbox","prompt","title","inputType","callback","fetch","method","body","stringify","user_id","password","then","json","matched","csvHtml5","call","NotificationManager","error","message","catch","console","ctrlKey","shiftKey","a","buttonRef","customizedFilters","selectedRows","rows","selected","element","request","ok","statusText","components","componentIndex","Validation","customData","draw","d","elementID","language","searchPlaceholder","sSearch","lengthMenu","legend","identifier","table","charAt","toUpperCase","slice","Modal","size","fade","ModalBody","unique","arr","concat","i","j","splice","DDL","tableRef","rowData","clientSecret","inDrillDown","rel","inModal","customFilters","Object","entries","dataItem","altEditor","onAddRow","Accept","jqXHR","onEditRow","onDeleteRow","isDataTable","document","off","on","closest","tr","togglerFilters","targetContentID","child","isShown","hide","removeClass","filterData","show","addClass","find","autoWidth","rowDataArray","acc","cur","modalFilters","shadow","Card","drawCard","children","description","fullWidth","transparent","image","inCard","dynamicComponent","img","src","alt","ValidationWizard","ContextMenuContainer","onContextMenu","onContextMenuClick","onShow","detail","onClick","ListPageHeading","toggleDisplayOptions","prevState","displayOptionsIsOpen","toggleSplit","dropdownSplitOpen","messages","intl","displayMode","changeDisplayMode","changeOrderBy","changePageSize","selectedPageSize","totalItemCount","selectedOrderOption","startIndex","endIndex","onSearchKey","orderOptions","pageSizes","heading","inWizard","Row","xxs","Button","color","Collapse","href","UncontrolledDropdown","DropdownToggle","caret","IntlMessages","DropdownMenu","order","DropdownItem","onKeyPress","right","injectIntl","memo","product","isSelect","collect","onCheckItem","toggleModal","sm","lg","xl","classnames","CardImg","top","Badge","pill","statusColor","status","CustomInput","to","CardSubtitle","CardText","date","category","ProductCardList","mode","selectedProducts","modalOpen","elements","Array","isArray","match","params","queryParams","URLSearchParams","set","param","renderProducts","RegExp","productItem","includes","productID","getUpdatedProducts","selectedProduct","field","setFieldValue","filteredData","showTitle","opt","renderElements","hidden","class","detailViewSlug","useState","productImage","setProductImage","Image","onload","onerror","dataset","renderProductImage","data-name","ProductListPagination","getSafePage","bind","changePage","applyPage","pageClick","renderPages","renderPageJump","pageSize","defaultPageSize","Number","isNaN","onPageSizeChange","onPageChange","pageIndex","pages","statePage","pageButtons","PaginationItem","PaginationLink","pageNumbers","canPrevious","canNext","pageSizeOptions","showPageSizeOptions","showPageJump","totalResults","direction","Pagination","listClassName","aria-label","max","RangeTooltip","sliderHandle","dragging","offset","restProps","positionStyle","position","left","style","replace","Handle","handle","ProductList","currentPage","perPage","pageList","priceFilter","statusFilter","categoryFilter","nameFilter","tagFilter","isLoading","handleChangeSelectAll","isToggle","x","activeElement","blur","fetchProductsData","status_color","triggerAction","renderFilters","filtersMapped","FormGroup","Label","onAfterChange","min","defaultValue","allowCross","pushable","onInput","persist","option","ddl","SingleSelect","identity","optionLabel","optionValue","MultiSelect","v","showExtendedFeatures","actions","ButtonDropdown","ThemeColors","rootStyle","getComputedStyle","themeColor1","getPropertyValue","trim","themeColor2","themeColor3","themeColor4","themeColor5","themeColor6","themeColor1_10","themeColor2_10","themeColor3_10","themeColor4_10","themeColor5_10","themeColor6_10","primaryColor","foregroundColor","separatorColor","chartTooltip","backgroundColor","titleFontColor","borderColor","borderWidth","bodyFontColor","bodySpacing","xPadding","yPadding","cornerRadius","centerTextPlugin","afterDatasetsUpdate","chart","beforeDraw","width","chartArea","height","bottom","ctx","restore","activeLabel","labels","activeValue","datasets","_meta","keys","total","activePercentage","parseFloat","toFixed","legendItems","pointAvailable","pointIndex","pointDataIndex","font","fillStyle","textBaseline","textX","round","measureText","textY","fillText","text2","textX2","textY2","save","beforeEvent","firstPoint","getElementAtEvent","_index","_datasetIndex","lineChartOptions","display","maintainAspectRatio","tooltips","plugins","datalabels","scales","yAxes","gridLines","lineWidth","drawBorder","ticks","beginAtZero","padding","xAxes","areaChartOptions","barChartOptions","usePointStyle","fontSize","pieChartOptions","layout","doughnutChartOptions","cutoutPercentage","Area","level","colors","handleClick","originalData","chartDataset","chart_instance","chartInstance","moment","xColumn","timeIdentifier","yColumn","update","duration","lazy","easing","modifiedData","Set","realDataItem","flat","colorIndex","pointBackgroundColor","pointBorderColor","pointBorderWidth","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverRadius","pointRadius","Chart","lineWithShadow","line","controllers","ease","prototype","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","stroke","apply","arguments","classNames","Bar","barWithShadow","bar","Doughnut","backgroundColors","borderColors","doughnutWithShadow","doughnut","Line","Pie","pieWithShadow","pie","CalendarToolbar","toolbar","onNavigate","localizer","momentLocalizer","Calendar","events","drilldownView","startAccessor","endAccessor","DataTablePagination","pageCount","SelectTable","selectTableHOC","ReactTable","Table","selectAll","selection","toggleSelection","shift","keyIndex","indexOf","toggleAll","keyField","checkboxTable","getWrappedInstance","getResolvedState","sortedData","item","_original","isSelected","rowFn","rowInfo","instance","handleOriginal","background","original","Header","accessor","r","selectType","getTrProps","PaginationComponent","defaultProps","ThumbnailImage","rounded","small","UserCardGroup","md","icon","redirect","subtitle","SingleLightbox","onThumbClick","photoIndex","thumb","mainSrc","large","onCloseRequest","TwoFactorAuthentication","qrcode","checkTwoFactor","authenticationServer","Error","scanSuccess","cancel","scanned","updatedUser","assign","tfaEnabled","localStorage","setItem","reload","onKeyUp","backdrop","centered","ModalHeader","dangerouslySetInnerHTML","__html","ModalFooter","outline","onBlur","Yup","msg","test","exclusive","path","reference","resolve","editPasswordSchema","shape","old_password","new_password","new_password_confirmation","equalTo","editProfileSchema","first_name","last_name","email_address","email","tfa_enabled","ProfileCard","editProfileModalOpen","editPasswordModalOpen","toggleProfileModal","togglePasswordModal","savePassword","saveProfile","updatedResponse","responseUser","bio","contentClassName","initialValues","validationSchema","errors","touched","resizeTimeOut","mountTimeOut","GlideComponentThumbs","settingsThumbs","bound","rewind","focusAt","startAt","gap","perView","breakpoints","576","420","settingsImages","onResize","thumbsResize","imagesSwipeEnd","renderDots","updateThumbBreakpoints","activeIndex","thumbsPerView","renderArrows","thumbBreakpoints","newBreakpoints","prop","glideCarouselImages","go","glideCarouselThumbs","Glide","carouselImages","getDirection","mount","carouselThumbs","setTimeout","createEvent","initEvent","dispatchEvent","componentWillUnmount","clearTimeout","destroy","dots","data-glide-dir","node","data-glide-el","Search","totalPages","getData","total_pages","renderData","isSmall","aria-current","extractContent","s","span","createElement","innerHTML","textContent","innerText","current_page","per_page","last_page","Tabs","activeTab","toggleTab","tab","tabs","CardHeader","Nav","tabIndex","NavItem","NavLink","TabContent","TabPane","tabId","ProductDescriptionText","IconCard","styles","provided","zIndex","classNamePrefix","isMulti","DataListIcon","xmlns","viewBox","ThumbListIcon","ImageListIcon","MenuIcon","y","MobileMenuIcon","BottomNavigation","next","previous","step","steps","onClickPrev","prevLabel","onClickNext","nextLabel","TopNavigation","getClassName","itemClick","stepItem","isDone","disableNav","topNavClick","hideTopNav","desc","NotificationItem","loginUser","webSocketURL","notificationPayload","data_creation","seen","handleNotificationClick","resourceURI","open","FileSaver","saveAs","componentType","dialog","closeButton","centerVertical","onEscape","scrollable","init","targetContainer","ReactDOM","utc","toDate","local","fromNow","TopnavNotifications","loadingNotifications","notifications","unreadNotificationsCount","nextPageURL","dropdownOpened","getNotifications","markAllNotificationsAsRead","renderNotifications","unseenNotifications","notification","notId","seenNotifications","newNotificationsTitle","earlierNotificationsTitle","io","socket","extraHeaders","transportOptions","polling","err","notificationId","not","otherNotifications","forceUpdate","dropdownToggle","loadMoreNotifications","notificationsContainer","scrollAmount","scrollTop","scrollHeight","sortedNotifications","sort","b","isAfter","actionButtons","bottomActionButtons","history","onScrollDown","suppressScrollX","wheelPropagation","logoutUser","TopnavDarkSwitch","tooltipOpen","getColor","getItem","themeColorStorageKey","defaultColor","changeMode","switchChecked","Tooltip","placement","TopNav","handleChangeLocale","locale","changeLocale","setDirection","isInFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","handleSearchIconClick","innerWidth","menuHiddenBreakpoint","elem","classList","contains","parentElement","remove","removeEventsSearch","add","addEventsSearch","addEventListener","handleDocumentClickSearch","removeEventListener","isSearchClick","input","querySelector","searchKeyword","handleSearchInputChange","handleSearchInputKeyPress","toggleFullScreen","docElm","documentElement","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","requestFullscreen","mozRequestFullScreen","webkitRequestFullScreen","msRequestFullscreen","handleLogout","menuButtonClick","menuClickCount","setContainerClassnames","selectedMenuHasSubItems","mobileMenuButtonClick","clickOnMobileMenu","getInitials","initials","join","localeOptions","l","isDarkSwitchActive","areNotificationEnabled","settings","Sidebar","handleWindowResize","isTrusted","nextClasses","getMenuClassesForResize","handleDocumentClick","getContainer","isMenuClick","viewingParentMenu","classes","subHiddenBreakpoint","split","windowWidth","findDOMNode","hasSubItems","getIsHasSubItem","changeSelectedMenuHasSubItems","currentClasses","clickIndex","handleProps","addEvents","removeEvents","setSelectedLiActive","oldli","oldliSub","selectedSublink","selectedlink","selectedParentMenu","getAttribute","menuItems","selectedParentNoSubItem","setHasSubItemStatus","hasSubmenu","menuItem","openSubMenu","selectedParent","hasSubMenu","addContainerClassname","toggleMenuCollapse","menuKey","collapsedMenus","isMounted","getMenu","isExact","componentDidUpdate","prevProps","pathname","scrollTo","vertical","newWindow","data-flag","data-parent","thirdSub","thirdIndex","changeDefaultClassnames","AppLayout","Page","Notifications","App","fallback","Colxx","widths","Separator","CustomAceEditor","theme","editorProps","$blockScrolling","setOptions","useWorker","showPrintMargin","loadOptions","inputValue","otherParameters","Promise","SearchableMultiSelect","allowCreateWhileLoading","isSearchable","isClearable","cacheOptions","CustomDatePicker","onSelect","dateFormat","placeholderText","selectedItemsLength","itemsLength","setDisplayOptionsIsOpen","totalPage","numberLimit","lastIsActive","firstIsActive","onChangePage","startPoint","endPoint","points","firstPageButtonClassName","lastPageButtonClassName","prevPageButtonClassName","nextPageButtonClassName","thumbnail","items","selectedItems","handlerKey","handlerCallback","actionRef","useRef","useEffect","mousetrap","evt","combo","unbind","getIndex","fileLibraryURL","returnValues","isLoaded","setIsLoaded","setDisplayMode","setCurrentPage","setSelectedPageSize","setSelectedOrderOption","setTotalItemCount","setTotalPage","setSearch","setSelectedItems","setItems","lastChecked","setLastChecked","axios","get","res","totalItem","fetchData","useMousetrap","toLowerCase","tagName","selectedList","newItems","start","end","from","log","clickedProductId","ReactDOMServer","require","mime","dropzoneConfig","thumbnailHeight","previewTemplate","renderToStaticMarkup","data-dz-thumbnail","data-dz-name","data-dz-size","data-dz-uploadprogress","data-dz-errormessage","data-dz-remove","FileLibrary","process","multiple","dictDefaultMessage","fetchingUploads","fetchUploads","handleSelectedItems","dropzone","selectedItem","mockFile","upload","emit","renderLibraryContent","uploads","clear","removeAllFiles","initialImages","externalCloseBtn","postUrl","djsConfig","paramName","renameFile","file","extension","Date","now","uploadMultiple","maxFilesize","maxFileSize","maxFiles","acceptedFiles","allowedExtensions","eventHandlers","newFiles","files","contentLengthRequest","removalRequest","modalClassName","external","currentStepData","fields","valid","bottomNavHidden","topNavDisabled","loading","initialization","initialAction","outcome","validate","elementName","validationRules","rule","splittedRule","hideNavigation","asyncLoading","goToNext","currentStepFormFields","submitForm","currentField","validateField","errorMessage","setFieldTouched","trace","fromEntries","hasOwnProperty","warning","redirectIsExternal","goToPrev","updatedFields","getSteps","isHidden","hideShadow","for","componentTitle","CardTitle","hideSteps","hideBottomNavigation","activeData","withRef"],"mappings":"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","file":"static/js/views-app.3e7679fe.chunk.js","sourcesContent":["import React from 'react';\nimport $ from 'jquery';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nclass FilterOptions extends React.Component {\n\n    render() {\n        const { options } = this.props;\n        let content = [];\n        options.forEach(function (filterValue, index) {\n            content.push(<option key={index} value={filterValue.created_at}>{filterValue.created_at}</option>);\n        });\n        return content;\n    }\n\n}\n\nclass Filters extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            content: []\n        };\n        this.filterForm = React.createRef();\n    }\n\n    componentDidMount() {\n        return this.props.filters.forEach( (filter, index) => {\n            if(this.state[filter.id] === undefined) {\n                this.setState({\n                    [filter.id]: filter.value\n                });\n            }\n        });\n    }\n\n    renderCheckBox = (filter, index) => {\n        return (\n            <div key={index} className=\"form-check form-check-inline\">\n                <input className=\"form-check-input\" type=\"checkbox\" onChange={ (event) => this.setState({ [filter.id]: event.target.checked }) } name={filter.id} id={filter.id} checked={!!this.state[filter.id]} value={this.state[filter.id]} />\n                <label className=\"form-check-label\" htmlFor={filter.id}>\n                    <span>{filter.placeholder}</span>\n                </label>\n            </div>\n        );\n    }\n\n\n    renderDDL = (filter, index) => {\n        return (\n            <select key={index} onChange={ (event) => this.setState({ [filter.id]: event.target.value }) } name={filter.id} id={filter.id} value={this.state[filter.id]} className=\"form-control mr-sm-2 filter-input\">\n                <option value=\"\">{filter.placeholder}</option>\n                <FilterOptions options={filter.values} />\n            </select>\n        );\n    }\n\n    renderTextField = (filter, index) => {\n        let type = \"text\";\n        if (filter.type === \"number\") {\n            type = \"number\";\n        }\n        if (filter.type === \"time_picker\") {\n            type = \"time\"\n        }\n        if (filter.type === \"date_picker\") {\n            type = \"date\"\n        }\n        return (\n            <input key={index} type={type} onChange={ (event) => this.setState({ [filter.id]: event.target.value }) } className=\"form-control mr-sm-2 filter-input\" id={filter.id} name={filter.id} value={this.state[filter.id] || ''} placeholder={filter.placeholder} />\n        );\n    }\n\n    filter = (event) => {\n\n\n        event.preventDefault();\n\n\n        const { slug, token, baseURL, clientID } = this.props;\n\n        let that = this;\n        \n        let form = this.filterForm;\n        let data = $(form).serializeArray().filter(function (dataObject) {\n            return dataObject.value != null && dataObject.value !== \"\";\n        });\n\n        $.ajax({\n            url: `${baseURL}/details`,\n            headers: {\n                Authorization: `Bearer ${token}`\n            },\n            data: {\n                elementType: \"filters\",\n                page_slug: slug,\n                client_id: clientID,\n                filters: data\n            },\n            success: function (response) {\n                return that.props.onFiltersApplied(response.details);\n            }\n        });\n\n\n    }\n\n\n    render() {\n        return (\n            <form className=\"form-inline mb-5\" ref={ ref => this.filterForm = ref } onSubmit={ (event) => this.filter(event) }>\n                <div className=\"w-100 d-flex align-items-center justify-content-center\">\n                    { this.props.filters.map( (filter, index) => {\n                        if (filter.type === \"ddl\") {\n                            return (this.renderDDL(filter, index));\n                        } else if (filter.type === \"boolean\") {\n                            return (this.renderCheckBox(filter, index));\n                        } else {\n                            return (this.renderTextField(filter, index));\n                        }\n                    }) }\n                    { this.props.filters.length > 0 ? <button type=\"submit\" className=\"btn btn-primary btn-lg mb-2\">Filter</button> : null }\n                </div>\n            </form>\n        );\n    }\n}\n\nconst mapStateToProps = ({ authUser, menu }) => {\n    const { containerClassnames } = menu;\n    const { baseURL, token, clientID } = authUser;\n    return { baseURL, token, clientID, containerClassnames };\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        {}\n    )(Filters)\n);","import React from 'react';\nimport { Card, CardBody } from 'reactstrap';\n\nconst productListPriceCalculator = ({ products }) => {\n    let totalPrice = products.reduce( (accumulator, current) => accumulator + parseInt(current.price, 10), 0 );\n    return (\n        <div className=\"col-sm-6 col-lg-4 col-xl-3 mt-1 mb-3\">\n            <Card className=\"\">\n                <CardBody className=\"text-center\">\n                <i className=\"h1 text-primary iconsminds-shopping-cart\" />\n                <p className=\"h3 font-weight-light card-text mb-3\">Total Price</p>\n                <p className=\"lead text-primary text-center\">${totalPrice}</p>\n                </CardBody>\n            </Card>\n        </div>\n    );\n}\n\n\nconst exampleRedirect = () => {\n    //some calculations here\n    //let's say an extrnal web service called\n    //based on that we redirect\n    return window.location = '/app/profilo';\n}\n\nexport default {\n    productListPriceCalculator,\n    exampleRedirect\n}","/*! Bootstrap integration for DataTables' Buttons\n * ©2016 SpryMedia Ltd - datatables.net/license\n */\n\n// (function( factory ){\n// \tif ( typeof define === 'function' && define.amd ) {\n// \t\t// AMD\n// \t\tdefine( ['jquery', 'datatables.net-bs4', 'datatables.net-buttons'], function ( $ ) {\n// \t\t\treturn factory( $, window, document );\n// \t\t} );\n// \t}\n// \telse if ( typeof exports === 'object' ) {\n// \t\t// CommonJS\n// \t\tmodule.exports = function (root, $) {\n// \t\t\tif ( ! root ) {\n// \t\t\t\troot = window;\n// \t\t\t}\n\n// \t\t\tif ( ! $ || ! $.fn.dataTable ) {\n// \t\t\t\t$ = require('datatables.net-bs4')(root, $).$;\n// \t\t\t}\n\n// \t\t\tif ( ! $.fn.dataTable.Buttons ) {\n// \t\t\t\trequire('datatables.net-buttons')(root, $);\n// \t\t\t}\n\n// \t\t\treturn factory( $, root, root.document );\n// \t\t};\n// \t}\n// \telse {\n// \t\t// Browser\n// \t\tfactory( jQuery, window, document );\n// \t}\n// }(function( $, window, document, undefined ) {\n// 'use strict';\nimport $ from 'jquery';\nvar DataTable = $.fn.dataTable;\n\n$.extend( true, DataTable.Buttons.defaults, {\n\tdom: {\n\t\tcontainer: {\n\t\t\tclassName: 'dt-buttons btn-group flex-wrap'\n\t\t},\n\t\tbutton: {\n\t\t\tclassName: 'btn btn-primary btn-sm'\n\t\t},\n\t\tcollection: {\n\t\t\ttag: 'div',\n\t\t\tclassName: 'dropdown-menu',\n\t\t\tbutton: {\n\t\t\t\ttag: 'a',\n\t\t\t\tclassName: 'dt-button dropdown-item',\n\t\t\t\tactive: 'active',\n\t\t\t\tdisabled: 'disabled'\n\t\t\t}\n\t\t}\n\t},\n\tbuttonCreated: function ( config, button ) {\n\t\treturn config.buttons ?\n\t\t\t$('<div class=\"btn-group\"/>').append(button) :\n\t\t\tbutton;\n\t}\n} );\n\nDataTable.ext.buttons.collection.className += ' dropdown-toggle';\nDataTable.ext.buttons.collection.rightAlignClassName = 'dropdown-menu-right';\n\n// return DataTable.Buttons;\n// }));\n","import React from 'react';\n\nimport { NotificationManager } from \"../common/react-notifications\";\nimport Validation from './wizard/Validation';\n\n\nimport $ from 'jquery';\nimport 'bootstrap';\nimport bootbox from 'bootbox';\n\n\nimport 'datatables.net-bs4';\nimport 'datatables.net-responsive';\nimport 'datatables.net-responsive-bs4';\nimport 'datatables.net-select';\nimport 'datatables.net-select-bs4';\nimport 'datatables.net-buttons/js/buttons.html5';\nimport 'datatables.net-buttons/js/buttons.print';\nimport dynamicFunctions from './functions';\n\n\nimport '../../plugins/datatables.net-buttons-bs4/js/buttons.bootstrap4';\nimport { Modal, ModalBody } from 'reactstrap';\nimport { fetch } from '../../helpers/Utils';\n// import '../../plugins/datatables.net-editor-free';\n\n\n\n\n\n\n\n\n\n\n\n\n$.fn.dataTableExt.oStdClasses[\"sFilterInput\"] = \"form-control\";\n$.fn.dataTableExt.oStdClasses[\"sLengthSelect\"] = \"w-auto mx-2\";\n\n\nclass DataTable extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false,\n            modalContent: []\n        }\n    }\n\n    toggle = () => this.setState({ isOpen: !this.state.isOpen });\n\n    refresh() {\n        return this.setState({\n            isOpen: false,\n            modalContent: []\n        });\n    }\n\n    async componentDidMount() {\n        return await this.drawTable();\n    }\n\n    renderFunctions() {\n        let { component: { functions } } = this.props;\n        if(functions) {\n            functions = functions.map( functionName => {\n                if(functionName in dynamicFunctions) {\n                    return dynamicFunctions[functionName]();\n                }\n                return null;\n            }).filter( functionName => functionName !== null );\n        } else {\n            functions = [];\n        }\n        return functions;\n    }\n\n    async drawTable() {\n        let { slug, token, user, baseURL, clientID, component, filters } = this.props;\n        user = (typeof(user) === \"string\") ? JSON.parse(user) : user;\n        let that = this;\n        let options = {\n            responsive: true,\n            processing: true,\n            serverSide: true,\n            search: {\n                regex: false,\n                smart: true,\n                caseInsensitive: true\n            },\n            columns: component.columns.map(function (column, index) {\n                return {\n                    type: column.attributes.type,\n                    name: [column.as],\n                    required: (column.as.search(\"password\") !== -1) ? false : column.attributes.required,\n                    readonly: column.attributes.readonly,\n                    excluded: column.attributes.excluded,\n                    visible: (column.as.search(\"password\") !== -1) ? false : column.attributes.visible,\n                    protected: column.attributes.protected,\n                    data: [column.as],\n                    render: function (data, type, row, meta) {\n                        if(column.attributes.kind) {\n                            if(column.attributes.kind === \"file\") {\n\n\n                                const { as, content } = column.attributes.label;\n\n                                if(as === \"icon\") {\n                                    return `<a href=\"${baseURL}/download?file=${data}\" download class=\"btn btn-link text-decoration-none p-0\"><i class=\"${content}\"></i></a>`;\n                                } else {\n                                    return `<a href=\"${baseURL}/download?file=${data}\" download class=\"btn btn-link p-0\">${content}</a>`;\n                                }\n\n                                \n                            }\n                        }\n                        return data;\n                    }\n                };\n            }),\n            pagingType: \"full_numbers\",\n            dom: \"<'row no-gutters align-items-center justify-content-around mx-0'<'col-sm-12 col-md-3'l><'col-sm-12 col-md-9 text-right d-sm-flex justify-content-end align-items-center'<'mb-2 mr-2'B>f>>\" +\n            \"<'row no-gutters align-items-center justify-content-around mx-0'<'col-sm-12'tr>>\" +\n            \"<'row no-gutters align-items-center justify-content-around mx-0'<'col-sm-12 col-md-6'i><'col-sm-12 col-md-6 text-right'p>>\",\n            select: {\n                info: false\n            },\n            buttons: !component.buttons ? [] : { \n                dom: {\n                    container: {\n                        className: 'dt-buttons btn-group'\n                    }\n                },\n                buttons: component.buttons.map( (button) => {\n\n                let action = {\n                    text: button.label,\n                    name: button.action\n                };\n\n\n                if(button.action !== \"export\" && button.action !== \"add\") {\n                    action.extend = \"selected\";\n                }\n\n                if(button.action === \"export\") {\n                    action.extend = button.format;\n                    action.filename = Math.random().toString(36).substring(7);\n                    action.exportOptions = {\n                        modifier: {\n                            page: 'current'\n                        }\n                    };\n                    action.action = function(e, dt, button, config) {\n\n                        let payload = dt.page.info();\n                        payload['entityName'] = component.entityName;\n\n                        return bootbox.prompt({\n                            title: \"Please re-enter your password to continue...\",\n                            inputType: \"password\",\n                            callback: function(response) {\n                                if(response) {\n                                    return fetch(`${baseURL}/api/user/authorize`, {\n                                        method: 'POST',\n                                        headers: {\n                                            'Accept': 'application/json',\n                                            'Content-Type': 'application/json'\n                                        },\n                                        body: JSON.stringify({\n                                            user_id: user.user_id,\n                                            password: response,\n                                            action: 'csv_export',\n                                            payload: JSON.stringify(payload)\n                                        })\n                                    })\n                                    .then( response => response.json() )\n                                    .then( response => {\n                                        if(response.matched) {\n                                            return $.fn.dataTable.ext.buttons.csvHtml5.action.call(dt.button(button), e, dt, button, config);\n                                        }\n                                        return NotificationManager.error(response.message, \"Authorization Failed\", 3000, null, null, '');\n                                    })\n                                    .catch( error => console.error(error) );\n                                }\n                            }\n                        });\n                    }\n                    action.key = {\n                        key: 'e',\n                        ctrlKey: true,\n                        shiftKey: true\n                    };\n                } else {\n                    action.action = async function(e, dt, buttonRef, config) {\n                        let customizedFilters = {};\n                        let selectedRows = dt.rows({ selected: true }).data()[0];\n                        if(filters) {\n                            filters.forEach( filter => customizedFilters[filter.name] = filter.value );\n                            selectedRows = {\n                                ...selectedRows,\n                                ...customizedFilters\n                            };\n                        }\n                        try {\n                            const request = await fetch(`${baseURL}/details?elementID=${button.element}&elementType=modal&page_slug=${slug}&client_id=${clientID}`, {\n                                headers: {\n                                    'Accept': 'application/json',\n                                    'Authorization': `Bearer ${token}`\n                                }\n                            });\n                            if(!request.ok) return request.statusText;\n                            const response = await request.json();\n\n                            const { components } = response;\n\n\n                            let details = components.map( (component, componentIndex) => {\n                                const { type } = component;\n                                if(type === \"wizard\") {\n                                    return (\n                                        <Validation key={componentIndex} customData={selectedRows} callback={ () => { dt.draw(); that.refresh(); } } token={token} baseURL={baseURL} clientID={clientID} user={user} component={component} />\n                                    );\n                                }\n                                return null;\n                            });\n\n\n                            that.setState({\n                                isOpen: true,\n                                modalContent: details\n                            });\n\n\n                        } catch(error) {\n                            return NotificationManager.error(error.message, \"Oops! We got a problem.\", 3000, null, null, '');\n                        }\n\n                        \n                        \n\n                        // return bootbox.prompt({\n                        //     title: \"Please re-enter your password to continue...\",\n                        //     inputType: \"password\"\n                        // });\n                    }\n                }\n\n                if(button.action === \"add\") {\n                    action.key = {\n                        key: 'a',\n                        ctrlKey: true,\n                        shiftKey: true\n                    };\n                }\n\n                if(button.action === \"edit\") {\n                    action.key = {\n                        key: 'e',\n                        ctrlKey: true,\n                        shiftKey: false\n                    };\n                }\n\n                if(button.action === \"delete\") {\n                    action.key = {\n                        key: 'd',\n                        ctrlKey: true,\n                        shiftKey: true\n                    };\n                }\n                return action;\n            }) },\n            ajax: {\n                url: `${baseURL}/details`,\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                },\n                data: function (d) {\n                    d.elementID = component.id;\n                    d.elementType = \"dataTable\";\n                    d.page_slug = slug;\n                    d.client_id = clientID;\n                    d.filters = filters;\n                    return d;\n                }\n            },\n            language: {\n                searchPlaceholder: 'Search...',\n                sSearch: '',\n                lengthMenu: '_MENU_ items/page'\n            }\n        }\n        \n        $(`.${component.id}`).DataTable(options);\n    }\n\n\n    render() {\n        const { component: { legend }, identifier } = this.props;\n        const { isOpen, modalContent } = this.state;\n        return (\n            <div className=\"card table-wrapper my-5\" ref={this.table}>\n                <div className=\"card-body\">\n                    <div className=\"card-title\">\n                        <span>{legend.charAt(0).toUpperCase() + legend.slice(1)}</span>\n                    </div>\n                    <table className={`table table-hover w-100 ${identifier}`}>\n                        <thead>\n                            <tr>\n                                { this.props.component.columns.map( (column, index) => <th key={index}>{column.label}</th> ) }\n                            </tr>\n                        </thead>\n                    </table>\n                    <div className=\"row justify-content-end mt-5 mx-5\">\n                        { this.renderFunctions() }\n                    </div>\n                </div>\n\n                <Modal isOpen={isOpen} size=\"xl\" fade={true} toggle={ () => this.toggle() }>\n                    <ModalBody className=\"p-0\">\n                        { modalContent }\n                    </ModalBody>\n                </Modal>\n\n\n            </div>\n        );\n      }\n  \n  \n\n}\n\n\nexport default DataTable;","import React from 'react';\n// import ReactDOM from 'react-dom';\n\nimport { NotificationManager } from \"../common/react-notifications\";\n\nimport { DataTable, AreaChart, BarChart, PieChart } from \"./index\";\nimport Validation from './wizard/Validation';\nimport { Modal, ModalBody } from 'reactstrap';\n\nimport $ from 'jquery';\nimport 'bootstrap';\nimport bootbox from 'bootbox';\n\n\nimport 'datatables.net-bs4';\nimport 'datatables.net-responsive';\nimport 'datatables.net-responsive-bs4';\nimport 'datatables.net-select';\nimport 'datatables.net-select-bs4';\nimport 'datatables.net-buttons/js/buttons.html5';\nimport 'datatables.net-buttons/js/buttons.print';\nimport dynamicFunctions from './functions';\n\n\nimport '../../plugins/datatables.net-buttons-bs4';\nimport { fetch } from '../../helpers/Utils';\n// import '../../plugins/datatables.net-editor-free';\n\nconst unique = function (arr) {\n    var a = arr.concat();\n    for (var i = 0; i < a.length; ++i) {\n        for (var j = i + 1; j < a.length; ++j) {\n            if (a[i] === a[j])\n                a.splice(j--, 1);\n        }\n    }\n\n    return a;\n};\n\n\n$.fn.dataTableExt.oStdClasses[\"sFilterInput\"] = \"form-control\";\n$.fn.dataTableExt.oStdClasses[\"sLengthSelect\"] = \"w-auto mx-2\";\n\nclass DDL extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.tableRef = React.createRef();\n        this.state = {\n            isOpen: false,\n            modalContent: []\n        }\n    }\n\n    componentDidMount() {\n        this.drawTable();\n    }\n\n    toggle = () => this.setState({ isOpen: !this.state.isOpen });\n\n    refresh() {\n        return this.setState({\n            isOpen: false,\n            modalContent: []\n        });\n    }\n\n    renderFunctions() {\n        let { component: { functions } } = this.props;\n        \n        if(functions) {\n            functions = functions.map( functionName => {\n                if(functionName in dynamicFunctions) {\n                    return dynamicFunctions[functionName]();\n                }\n                return null;\n            }).filter( functionName => functionName !== null );\n        } else {\n            functions = [];\n        }\n        return functions;\n    }\n\n    format(rowData) {\n        let content = `<table class=\"table table-layout-fixed table-striped w-100\" data-table-id=\"${rowData.id}\">` +\n                '<thead>' +\n                    '<tr>';\n                        rowData.columns.forEach( (column) => content += `<th>${column.label}</th>` );\n                    content += '</tr>' +\n                '</thead>' +\n            '</table>';\n        return content;\n    }\n\n\n    drawTable() {\n        let { slug, token, user, baseURL, clientID, clientSecret, component, filters } = this.props;\n        user = (typeof(user) === \"string\") ? JSON.parse(user) : user;\n\n        let options = {\n            responsive: {\n                details: false\n            },\n            processing: true,\n            serverSide: true,\n            search: {\n                regex: true,\n                smart: true,\n                caseInsensitive: true\n            },\n            pagingType: \"full_numbers\",\n            dom: \"<'row no-gutters align-items-center justify-content-around mx-0'<'col-sm-12 col-md-3'l><'col-sm-12 col-md-9 text-right d-sm-flex justify-content-end align-items-center'<'mb-2 mr-2'B>f>>\" +\n            \"<'row no-gutters align-items-center justify-content-around mx-0'<'col-sm-12 table-responsive'tr>>\" +\n            \"<'row no-gutters align-items-center justify-content-around mx-0'<'col-sm-12 col-md-6'i><'col-sm-12 col-md-6 text-right'p>>\",\n            columns: component.columns.map(function (column, index) {\n                return {\n                    data: null,\n                    name: column.identifier,\n                    type: column.attributes.type,\n                    readonly: column.attributes.readonly,\n                    excluded: column.attributes.excluded,\n                    protected: column.attributes.protected,\n                    required: column.identifier === \"password\" ? false : column.attributes.required,\n                    visible: column.identifier === \"password\" ? false : true,\n                    render: function (data, type, row, meta) {\n                        if (column.inDrillDown && column.inDrillDown === true) {\n                            return `<span class=\"details-control\" data-filters='[{ \"name\": \"${column.as}\", \"value\": \"${data.data[column.as]}\" }]' data-rel=\"${column.rel}\"></span><span class=\"d-table-cell pl-3\">${data.data[column.as]}</span>`;\n                        }\n                        if (column.inModal && column.inModal === true) {\n                            if(data.data[column.key]) {\n                                let customFilters = JSON.stringify(Object.entries(data.data[column.key]).map( dataItem => ({ name: dataItem[0], value: dataItem[1] }) ));\n                                return `<a href=\"#\" class=\"dynamic-modal text-primary\" data-filters='${customFilters}' data-rel=\"${column.rel}\"><div class=\"simple-icon-magnifier\"></div></a>`;\n                            }\n                            return `<a href=\"#\" class=\"dynamic-modal text-primary\" data-filters='[]' data-rel=\"${column.rel}\"><div class=\"simple-icon-magnifier\"></div></a>`;\n                        }\n                        return data.data[column.as];\n                    }\n                };\n            }),\n            // createdRow: function ( row, data ) {\n            //     if(!data.permissible) {\n            //         $(row).addClass('unselectable');\n            //     }\n            // },\n            select: {\n                info: false\n            },\n            altEditor: true,\n            onAddRow: (altEditor, rowData, success, error) => {\n                rowData.push({ name: 'client_secret', value: clientSecret });\n                return $.ajax({\n                    url: `${baseURL}/details`,\n                    type: 'POST',\n                    headers: {\n                        Accept: 'application/json',\n                        Authorization: `Bearer ${token}`\n                    },\n                    data: {\n                        page_slug: slug,\n                        entityName: component.entityName,\n                        client_id: clientID,\n                        data: Object.values(rowData)\n                    },\n                    error: (jqXHR) => error(jqXHR),\n                    success: (response) => success(response.data)\n                });\n            },\n            onEditRow: (altEditor, rowData, success, error) => {\n                rowData.push({ name: 'client_secret', value: clientSecret });\n                return $.ajax({\n                    url: `${baseURL}/details`,\n                    type: 'PUT',\n                    headers: {\n                        Accept: 'application/json',\n                        Authorization: `Bearer ${token}`\n                    },\n                    data: {\n                        page_slug: slug,\n                        entityName: component.entityName,\n                        client_id: clientID,\n                        data: Object.values(rowData)\n                    },\n                    error: (jqXHR) => error(jqXHR),\n                    success: (response) => success(response.data)\n                });\n            },\n            onDeleteRow: (altEditor, rowData, success, error) => {\n                rowData.push({ name: 'client_secret', value: clientSecret });\n                return $.ajax({\n                    url: `${baseURL}/details`,\n                    type: 'DELETE',\n                    headers: {\n                        Accept: 'application/json',\n                        Authorization: `Bearer ${token}`\n                    },\n                    data: {\n                        page_slug: slug,\n                        entityName: component.entityName,\n                        client_id: clientID,\n                        data: Object.values(rowData)\n                    },\n                    error: (jqXHR) => error(jqXHR),\n                    success: (response) => success(response.message)\n                });\n            },\n            buttons: !component.buttons ? [] : { \n                dom: {\n                    container: {\n                        className: 'dt-buttons btn-group'\n                    }\n                },\n                buttons: component.buttons.map( (button) => {\n\n                let action = {\n                    text: button.label,\n                    name: button.action\n                };\n\n                if(button.action !== \"export\" && button.action !== \"add\") {\n                    action.extend = \"selected\";\n                }\n\n                if(button.action === \"export\") {\n                    action.extend = button.format;\n                    action.filename = Math.random().toString(36).substring(7);\n                    action.exportOptions = {\n                        modifier: {\n                            page: 'current'\n                        }\n                    };\n                    action.action = function(e, dt, button, config) {\n\n                        let payload = dt.page.info();\n                        payload['entityName'] = component.entityName;\n\n                        return bootbox.prompt({\n                            title: \"Please re-enter your password to continue...\",\n                            inputType: \"password\",\n                            callback: function(response) {\n                                if(response) {\n                                    return fetch(`${baseURL}/api/user/authorize`, {\n                                        method: 'POST',\n                                        headers: {\n                                            'Accept': 'application/json',\n                                            'Content-Type': 'application/json'\n                                        },\n                                        body: JSON.stringify({\n                                            user_id: user.user_id,\n                                            password: response,\n                                            action: 'csv_export',\n                                            payload: JSON.stringify(payload)\n                                        })\n                                    })\n                                    .then( response => response.json() )\n                                    .then( response => {\n                                        if(response.matched) {\n                                            return $.fn.dataTable.ext.buttons.csvHtml5.action.call(dt.button(button), e, dt, button, config);\n                                        }\n                                        return NotificationManager.error(response.message, \"Authorization Failed\", 3000, null, null, '');\n                                    })\n                                    .catch( error => console.error(error) );\n                                }\n                            }\n                        });\n                    }\n                    action.key = {\n                        key: 'e',\n                        ctrlKey: true,\n                        shiftKey: true\n                    };\n                } else {\n                    action.action = async function(e, dt, buttonRef, config) {\n\n                        let selectedRows = dt.rows({ selected: true }).data()[0] ? dt.rows({ selected: true }).data()[0].data : [];\n\n\n                        try {\n\n\n                            const request = await fetch(`${baseURL}/details?elementID=${button.element}&elementType=modal&page_slug=${slug}&client_id=${clientID}`, {\n                                headers: {\n                                    'Accept': 'application/json',\n                                    'Authorization': `Bearer ${token}`\n                                }\n                            });\n                            if(!request.ok) return request.statusText;\n                            const response = await request.json();\n\n                            const { components } = response;\n\n\n                            let details = components.map( (component, componentIndex) => {\n                                const { type } = component;\n                                if(type === \"wizard\") {\n                                    return (\n                                        <Validation key={componentIndex} customData={selectedRows} callback={ () => { dt.draw(); that.refresh(); } } token={token} baseURL={baseURL} clientID={clientID} user={user} component={component} />\n                                    );\n                                }\n                                return null;\n                            });\n\n                            that.setState({\n                                isOpen: true,\n                                modalContent: details\n                            });\n\n\n                        } catch(error) {\n                            return NotificationManager.error(error.message, \"Oops! We got a problem.\", 3000, null, null, '');\n                        }\n\n                        \n                        \n\n                        // return bootbox.prompt({\n                        //     title: \"Please re-enter your password to continue...\",\n                        //     inputType: \"password\"\n                        // });\n                    }\n                }\n\n                if(button.action === \"add\") {\n                    action.key = {\n                        key: 'a',\n                        ctrlKey: true,\n                        shiftKey: true\n                    };\n                }\n\n                if(button.action === \"edit\") {\n                    action.key = {\n                        key: 'e',\n                        ctrlKey: true,\n                        shiftKey: false\n                    };\n                }\n\n                if(button.action === \"delete\") {\n                    action.key = {\n                        key: 'd',\n                        ctrlKey: true,\n                        shiftKey: true\n                    };\n                }\n                return action;\n            }) },\n            ajax: {\n                url: `${baseURL}/details`,\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                },\n                data: function (d) {\n                    d.elementID = component.id;\n                    d.elementType = \"ddl\";\n                    d.page_slug = slug;\n                    d.client_id = clientID;\n                    d.filters = filters;\n                    return d;\n                }\n            },\n            language: {\n                searchPlaceholder: 'Search...',\n                sSearch: '',\n                lengthMenu: '_MENU_ items/page',\n            }\n        }\n\n\n        let table = this.tableRef.current; //$(`.${component.id}`);\n        let isDataTable = $.fn.dataTable.isDataTable(table);\n        if(!isDataTable) {\n            $(table).dataTable(options);\n        }\n\n\n\n        let that = this;\n        $(document).off('click', '.details-control');\n        $(document).on('click', '.details-control', function () {\n            table = $(this).closest('table');\n            let tr = $(this).closest('tr'), row = $(table).DataTable().row(tr);\n            let togglerFilters = $(this).data('filters'), targetContentID = $(this).data('rel');\n            if (row.child.isShown()) {\n                row.child.hide();\n                tr.removeClass('shown');\n            } else {\n                let filterData = $(\".filter-form\").serializeArray();\n                $.ajax({\n                    url: `${baseURL}/details`,\n                    headers: {\n                        'Authorization': `Bearer ${token}`\n                    },\n                    data: {\n                        elementType: \"ddl\",\n                        elementID: targetContentID, //rowData.id;\n                        page_slug: slug,\n                        client_id: clientID,\n                        filters: unique([ ...filterData, ...togglerFilters])\n                    },\n                    success: async function (response) {\n                        // let rowData = row.data();\n                        \n                        let rowData = response.rowData;\n\n\n\n                        row.child(that.format(rowData)).show();\n                        tr.addClass('shown');\n        \n                        // let extendedFilters = rowData.extendedFilters.map(function (item) {\n                        //     return {\n                        //         \"name\": item.label,\n                        //         \"value\": item.value\n                        //     };\n                        // });                        \n                        $(row.child()).find(`table[data-table-id=\"${rowData.id}\"]`).DataTable({\n                            responsive: true,\n                            processing: true,\n                            serverSide: true,\n                            autoWidth: false,\n                            search: {\n                                regex: false,\n                                smart: true,\n                                caseInsensitive: true\n                            },\n                            columns: rowData.columns.map(function (column, index) {\n                                return {\n                                    data: null,\n                                    name: column.identifier,\n                                    type: column.attributes.type,\n                                    readonly: column.attributes.readonly,\n                                    excluded: column.attributes.excluded,\n                                    protected: column.attributes.protected,\n                                    required: column.identifier === \"password\" ? false : column.attributes.required,\n                                    visible: column.identifier === \"password\" ? false : true,\n                                    render: function (data, type, row, meta) {\n                                        if (column.inDrillDown && column.inDrillDown === true) {\n                                            return `<span class=\"details-control\" data-filters='[{ \"name\": \"${column.identifier}\", \"value\": \"${data.data[column.identifier]}\" }]' data-rel=\"${column.rel}\"></span><span class=\"d-table-cell pl-3\">${data.data[column.identifier]}</span>`;\n                                        }\n                                        if (column.inModal && column.inModal === true) {\n                                            let customFilters = JSON.stringify(Object.entries(data.data[column.key]).map( dataItem => ({ name: dataItem[0], value: dataItem[1] }) ));\n                                            return `<a href=\"#\" class=\"dynamic-modal text-primary\" data-filters='${customFilters}' data-rel=\"${column.rel}\"><div class=\"simple-icon-magnifier\"></div></a>`;\n                                        }\n                                        return data.data[column.identifier];\n                                    }\n                                };\n                            }),\n                            pagingType: \"full_numbers\",\n                            dom: \"<'row no-gutters align-items-center justify-content-around mx-0'<'col-sm-12 col-md-3'l><'col-sm-12 col-md-9 text-right d-sm-flex justify-content-end align-items-center'<'mb-2 mr-2'B>f>>\" +\n                                \"<'row no-gutters align-items-center justify-content-around mx-0'<'col-sm-12 table-responsive'tr>>\" +\n                                \"<'row no-gutters align-items-center justify-content-around mx-0'<'col-sm-12 col-md-6'i><'col-sm-12 col-md-6 text-right'p>>\",\n                            select: {\n                                info: false\n                            },\n                            altEditor: true,\n                            onAddRow: (altEditor, rowDataArray, success, error) => {\n                                return $.ajax({\n                                    url: `${baseURL}/details`,\n                                    type: 'POST',\n                                    headers: {\n                                        Accept: 'application/json',\n                                        Authorization: `Bearer ${token}`\n                                    },\n                                    data: {\n                                        page_slug: rowData.entityName,\n                                        client_id: clientID,\n                                        data: Object.values(rowDataArray)\n                                    },\n                                    error: (jqXHR) => error(jqXHR),\n                                    success: (response) => success(response.data)\n                                });\n                            },\n                            onEditRow: (altEditor, rowDataArray, success, error) => {\n                                return $.ajax({\n                                    url: `${baseURL}/details`,\n                                    type: 'PUT',\n                                    headers: {\n                                        Accept: 'application/json',\n                                        Authorization: `Bearer ${token}`\n                                    },\n                                    data: {\n                                        page_slug: rowData.entityName,\n                                        client_id: clientID,\n                                        data: Object.values(rowDataArray)\n                                    },\n                                    error: (jqXHR) => error(jqXHR),\n                                    success: (response) => success(response.data)\n                                });\n                            },\n                            onDeleteRow: (altEditor, rowDataArray, success, error) => {\n                                return $.ajax({\n                                    url: `${baseURL}/details`,\n                                    type: 'DELETE',\n                                    headers: {\n                                        Accept: 'application/json',\n                                        Authorization: `Bearer ${token}`\n                                    },\n                                    data: {\n                                        page_slug: rowData.entityName,\n                                        client_id: clientID,\n                                        data: Object.values(rowDataArray)\n                                    },\n                                    error: (jqXHR) => error(jqXHR),\n                                    success: (response) => success(response.message)\n                                });\n                            },\n                            buttons: !rowData.buttons ? [] : { \n                                dom: {\n                                    container: {\n                                        className: 'dt-buttons btn-group'\n                                    }\n                                },\n                                buttons: rowData.buttons.map( (button) => {\n\n                                let action = {\n                                    text: button.label,\n                                    name: button.action\n                                };\n                \n                \n                                if(button.action !== \"export\" && button.action !== \"add\") {\n                                    action.extend = \"selected\";\n                                }\n                \n                                if(button.action === \"export\") {\n                                    action.extend = button.format;\n                                    action.filename = Math.random().toString(36).substring(7);\n                                    action.exportOptions = {\n                                        modifier: {\n                                            page: 'current'\n                                        }\n                                    };\n                                    action.action = function(e, dt, button, config) {\n                                        let payload = dt.page.info();\n                                        payload['entityName'] = rowData.entityName;\n                                        return bootbox.prompt({\n                                            title: \"Please re-enter your password to continue...\",\n                                            inputType: \"password\",\n                                            callback: function(response) {\n                                                if(response) {\n                                                    return fetch(`${baseURL}/api/user/authorize`, {\n                                                        method: 'POST',\n                                                        headers: {\n                                                            'Accept': 'application/json',\n                                                            'Content-Type': 'application/json'\n                                                        },\n                                                        body: JSON.stringify({\n                                                            user_id: user.user_id,\n                                                            password: response\n                                                        })\n                                                    })\n                                                    .then( response => response.json() )\n                                                    .then( response => {\n                                                        if(response.matched) {\n                                                            return $.fn.dataTable.ext.buttons.csvHtml5.action.call(dt.button(button), e, dt, button, config);\n                                                        }\n                                                        return NotificationManager.error(response.message, \"Authorization Failed\", 3000, null, null, '');\n                                                    })\n                                                    .catch( error => console.error(error) );\n                                                }\n                                            }\n                                        });\n                                    }\n                                    action.key = {\n                                        key: 'e',\n                                        ctrlKey: true,\n                                        shiftKey: true\n                                    };\n                                } else {\n                                    action.action = async function(e, dt, buttonRef, config) {\n                \n                                        let selectedRows = dt.rows({ selected: true }).data()[0] ? dt.rows({ selected: true }).data()[0].data : [];\n                                \n                                        try {\n                \n                \n                                            const request = await fetch(`${baseURL}/details?elementID=${button.element}&elementType=modal&page_slug=${slug}&client_id=${clientID}`, {\n                                                headers: {\n                                                    'Accept': 'application/json',\n                                                    'Authorization': `Bearer ${token}`\n                                                }\n                                            });\n                                            if(!request.ok) return request.statusText;\n                                            const response = await request.json();\n                \n                                            const { components } = response;\n                \n                \n                                            let details = components.map( (component, componentIndex) => {\n                                                const { type } = component;\n                                                if(type === \"wizard\") {\n                                                    return (\n                                                        <Validation key={componentIndex} customData={{ ...togglerFilters.reduce((acc, cur) => ({ ...acc, [cur.name]: cur.value }), {}), ...selectedRows }} callback={ () => { dt.draw(); that.refresh(); } } token={token} baseURL={baseURL} clientID={clientID} user={user} component={component} />\n                                                    );\n                                                }\n                                                return null;\n                                            });\n                \n                                            that.setState({\n                                                isOpen: true,\n                                                modalContent: details\n                                            });\n                \n                \n                                        } catch(error) {\n                                            return NotificationManager.error(error.message, \"Oops! We got a problem.\", 3000, null, null, '');\n                                        }\n                \n                                        \n                                        \n                \n                                        // return bootbox.prompt({\n                                        //     title: \"Please re-enter your password to continue...\",\n                                        //     inputType: \"password\"\n                                        // });\n                                    }\n                                }\n                \n                                if(button.action === \"add\") {\n                                    action.key = {\n                                        key: 'a',\n                                        ctrlKey: true,\n                                        shiftKey: true\n                                    };\n                                }\n                \n                                if(button.action === \"edit\") {\n                                    action.key = {\n                                        key: 'e',\n                                        ctrlKey: true,\n                                        shiftKey: false\n                                    };\n                                }\n                \n                                if(button.action === \"delete\") {\n                                    action.key = {\n                                        key: 'd',\n                                        ctrlKey: true,\n                                        shiftKey: true\n                                    };\n                                }\n                                return action;\n                            }) },\n                            ajax: {\n                                url: `${baseURL}/details`,\n                                headers: {\n                                    Authorization: `Bearer ${token}`\n                                },\n                                data: function (d) {\n                                    d.elementID = targetContentID; //rowData.id;\n                                    d.elementType = \"ddl\";\n                                    d.page_slug = slug;\n                                    d.client_id = clientID;\n                                    // let extendedFilters = rowData.extendedFilters.map(function (item) {\n                                    //     return {\n                                    //         \"name\": item.label,\n                                    //         \"value\": item.value\n                                    //     };\n                                    // });\n                                    d.filters = unique([ ...filterData, ...togglerFilters]);\n                                    return d;\n                                }\n                            },\n                            language: {\n                                searchPlaceholder: 'Search...',\n                                sSearch: '',\n                                lengthMenu: '_MENU_ items/page',\n                            }\n                        });\n                    }\n                });\n\n\n            }\n        });\n\n\n        $(document).off('click', '.dynamic-modal');\n        $(document).on(\"click\", \".dynamic-modal\", function (e) {\n            e.preventDefault();\n\n            let modalToggler = this, rel = $(modalToggler).data('rel'),\n            \n            modalFilters = $(modalToggler).data('filters'),\n                filterData = $(\".filter-form\").serializeArray();\n                \n                // dialog = bootbox.dialog({\n                //     message: `<div class=\"loading\" />`,\n                //     closeButton: false,\n                //     backdrop: true,\n                //     centerVertical: true,\n                //     onEscape: true,\n                //     scrollable: true,\n                //     size: 'extra-large'\n                // });\n\n\n            let filters = unique([...filterData, ...modalFilters]);\n\n            // filters = [ ...filters, ...modalFilters ];\n\n\n\n            $.ajax({\n                url: `${baseURL}/details`,\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                },\n                data: {\n                    elementType: \"modal\",\n                    elementID: rel,\n                    page_slug: slug,\n                    client_id: clientID,\n                    filters\n                },\n                success: function (response) {\n\n                    let pageDetails = response;\n\n                    let content = pageDetails.components.map( function(component, index) {\n\n    \n                        if(component.type === \"datatable\") {\n                            return (\n                                <DataTable slug={slug} token={token} user={user} clientSecret={clientSecret} baseURL={baseURL} clientID={clientID} identifier={component.id} key={index} filters={ filters } component={component} />\n                            );\n                        }\n            \n                        if(component.type === \"ddl\") {\n                            return (\n                                <DDL slug={slug} token={token} user={user} clientSecret={clientSecret} baseURL={baseURL} clientID={clientID} identifier={component.id} key={index} filters={ filters } component={component} />\n                            );\n                        }\n\n                        if(component.type === \"chart\") {\n                            const { kind } = component;\n                            if(kind === \"pie\") {\n                                return (\n                                <div key={index}>\n                                    <PieChart shadow component={component} />\n                                </div>\n                                );\n                            }\n\n                            if(kind === \"bar\") {\n                                return (\n                                <div key={index}>\n                                    <BarChart shadow component={component} />\n                                </div>\n                                );\n                            }\n\n                            if(kind === \"area\") {\n                                return (\n                                <div key={index}>\n                                    <AreaChart shadow component={component} />\n                                </div>\n                                );\n                            }\n\n                            return (\n                                <div key={index}>\n                                <AreaChart shadow component={component} />\n                                </div>\n                            );\n                        }\n\n                        return (\n                            <div key={index}></div>\n                        );\n                    \n                    });\n\n\n                    that.setState({\n                        isOpen: true,\n                        modalContent: content\n                    });\n\n\n                    // return ReactDOM.render(content, targetContainer[0]);\n\n\n\n                    // $(targetContainer).html(ReactDOMServer.renderToString(content));\n                    // that.getDetails(response);\n                    // loadPage(response, targetContainer, filters);\n                }\n            });\n\n\n            // dialog.init(function () {\n                // let targetContainer = dialog.find('.modal-content').addClass('modal-dialog-centered modal-dialog-scrollable').find('.modal-body').addClass('w-100').find('.bootbox-body');\n                // $.ajax({\n                //     url: `${baseURL}/details`,\n                //     headers: {\n                //         'Authorization': `Bearer ${token}`\n                //     },\n                //     data: {\n                //         elementType: \"modal\",\n                //         elementID: rel,\n                //         page_slug: slug,\n                //         client_id: clientID,\n                //         filters\n                //     },\n                //     success: function (response) {\n\n                //         let pageDetails = response;\n\n                //         let content = pageDetails.components.map( function(component, index) {\n\n        \n                //             if(component.type === \"datatable\") {\n                //                 return (\n                //                     <DataTable slug={slug} token={token} user={user} clientSecret={clientSecret} baseURL={baseURL} clientID={clientID} identifier={component.id} key={index} filters={ filters } component={component} />\n                //                 );\n                //             }\n                \n                //             if(component.type === \"ddl\") {\n                //                 return (\n                //                     <DDL slug={slug} token={token} user={user} clientSecret={clientSecret} baseURL={baseURL} clientID={clientID} identifier={component.id} key={index} filters={ filters } component={component} />\n                //                 );\n                //             }\n\n                //             if(component.type === \"chart\") {\n                //                 const { kind } = component;\n                //                 if(kind === \"pie\") {\n                //                     return (\n                //                     <div key={index}>\n                //                         <PieChart shadow component={component} />\n                //                     </div>\n                //                     );\n                //                 }\n\n                //                 if(kind === \"bar\") {\n                //                     return (\n                //                     <div key={index}>\n                //                         <BarChart shadow component={component} />\n                //                     </div>\n                //                     );\n                //                 }\n\n                //                 if(kind === \"area\") {\n                //                     return (\n                //                     <div key={index}>\n                //                         <AreaChart shadow component={component} />\n                //                     </div>\n                //                     );\n                //                 }\n\n                //                 return (\n                //                     <div key={index}>\n                //                     <AreaChart shadow component={component} />\n                //                     </div>\n                //                 );\n                //             }\n\n                //             return (\n                //                 <div key={index}></div>\n                //             );\n                        \n                //         })\n\n\n                //         return ReactDOM.render(content, targetContainer[0]);\n\n\n\n                //         // $(targetContainer).html(ReactDOMServer.renderToString(content));\n                //         // that.getDetails(response);\n                //         // loadPage(response, targetContainer, filters);\n                //     }\n                // });\n\n            // });\n\n\n        });\n        \n\n    }\n\n\n    render() {\n        const { component: { legend }, identifier } = this.props;\n        const { isOpen, modalContent } = this.state;\n        return (\n            <div className=\"card table-wrapper my-5\">\n                <div className=\"card-body\">\n                    <div className=\"card-title\">\n                        <span>{legend.charAt(0).toUpperCase() + legend.slice(1)}</span>\n                    </div>\n                    <div className=\"table-wrapper\">\n                        <table ref={this.tableRef} className={`table table-hover w-100 ${identifier}`}>\n                            <thead>\n                                <tr>\n                                    { this.props.component.columns.map( (column, index) => <th key={index}>{column.label}</th> ) }\n                                </tr>\n                            </thead>\n                        </table>\n                    </div>\n                    <div className=\"row justify-content-end mt-5 mx-5\">\n                        { this.renderFunctions() }\n                    </div>\n                </div>\n\n                <Modal isOpen={isOpen} size=\"xl\" fade={true} toggle={ () => this.toggle() }>\n                    <ModalBody className=\"py-0 px-4\">\n                        { modalContent }\n                    </ModalBody>\n                </Modal>\n\n            </div>\n        );\n      }\n  \n  \n\n}\n\n\n\n\nexport default DDL;","import React from 'react';\n\nimport {\n    AreaChart,\n    LineChart,\n    BarChart,\n    PieChart,\n    IconCard,\n    DoughnutChart,\n    Table,\n    ProductCardList,\n    ProductList,\n    UserCardGroup,\n    ProfileCard,\n    Calendar,\n    ThumbsCarousel,\n    Search,\n    Tabs,\n    ProductDescriptionText\n} from './index';\nimport Validation from './wizard/Validation';\nimport dynamicFunctions from './functions';\n\nclass Card extends React.Component {\n\n\n    componentDidMount() {\n        this.drawCard();\n    }    \n\n    drawCard() {\n        // let { slug, token, user, baseURL, clientID, clientSecret, component, filters } = this.props;\n        // user = (typeof(user) === \"string\") ? JSON.parse(user) : user;\n    }\n\n    renderFunctions() {\n        let { component: { functions } } = this.props;\n        \n        if(functions) {\n            functions = functions.map( functionName => {\n                if(functionName in dynamicFunctions) {\n                    return dynamicFunctions[functionName]();\n                }\n                return null;\n            }).filter( functionName => functionName !== null );\n        } else {\n            functions = [];\n        }\n        return functions;\n    }\n\n\n    render() {\n        const { component: { children, title, description, fullWidth, transparent, image } } = this.props;\n\n        const components = children.map( (child, index) => {\n            const { type } = child;\n            if(type === \"chart\") {\n                const { kind } = child;\n                if(kind === \"pie\") {\n                    return (\n                        <div className={ fullWidth ? \"w-100\" : (children.length === 1 ? \"col\" : (index === 0 ? \"col-md-7\" : \"col-md-5\")) } key={index}>\n                            <PieChart className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={child} />\n                        </div>\n                    );\n                }\n    \n                if(kind === \"bar\") {\n                    return (\n                        <div className={ fullWidth ? \"w-100\" : (children.length === 1 ? \"col\" : (index === 0 ? \"col-md-7\" : \"col-md-5\")) } key={index}>\n                            <BarChart className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={child} />\n                        </div>\n                    );\n                }\n    \n                if(kind === \"area\") {\n                    return (\n                        <div className={ fullWidth ? \"w-100\" : (children.length === 1 ? \"col\" : (index === 0 ? \"col-md-7\" : \"col-md-5\")) } key={index}>\n                            <AreaChart className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={child} />\n                        </div>\n                    );\n                }\n\n                if(kind === \"line\") {\n                    return (\n                        <div className={ fullWidth ? \"w-100\" : (children.length === 1 ? \"col\" : (index === 0 ? \"col-md-7\" : \"col-md-5\")) } key={index}>\n                            <LineChart className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={child} />\n                        </div>\n                    );\n                }\n\n                if(kind === \"doughnut\") {\n                    return (\n                        <div className={ fullWidth ? \"w-100\" : (children.length === 1 ? \"col\" : (index === 0 ? \"col-md-7\" : \"col-md-5\")) } key={index}>\n                            <DoughnutChart className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={child} />\n                        </div>\n                    );\n                }\n            }\n\n            if(type === \"calendar\") {\n                return (\n                    <div className={ fullWidth ? \"w-100\" : (children.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\")) } key={index}>\n                        <Calendar component={child} />\n                    </div>\n                );\n            }\n\n            if(type === \"table\") {\n                return (\n                    <div className={ fullWidth ? \"w-100\" : (children.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\")) } key={index}>\n                        <Table component={child} />\n                    </div>\n                );\n            }\n\n            if(type === \"card\") {\n                return (\n                    <div className={ fullWidth ? \"w-100\" : (children.length === 1 ? \"col\" : (index === 1 ? \"col-md-7\" : \"col-md-7\")) } key={index}>\n                        <Card {...this.props} component={child} />\n                    </div>\n                );\n              }\n\n              \n\t\t  if(type === \"productDescriptionText\") {\n\t\t\treturn (\n                <div className={ fullWidth ? \"w-100\" : (children.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\")) } key={index}>\n                    <ProductDescriptionText {...this.props} component={child} />\n                </div>\n\t\t\t);\n          }\n          \n          if(type === \"iconCard\") {\n\t\t\treturn (\n                <div className={ fullWidth ? \"w-100\" : (children.length === 1 ? \"col\" : (index === 1 ? \"col-md-7\" : \"col-md-7\")) } key={index}>\n                    <IconCard {...this.props} component={child} />\n                </div>\n\t\t\t);\n\t\t  }\n    \n              if(type === \"wizard\") {\n                return (\n                    <div className={ fullWidth ? \"w-100\" : (children.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\")) } key={index}>\n                        <Validation {...this.props} component={child} />\n                    </div>\n                );\n              }\n    \n              if(type === \"productCardList\") {\n                return (\n                    <div className={ fullWidth ? \"w-100\" : (children.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\")) } key={index}>\n                        <ProductCardList inCard={true} {...this.props} component={child} />\n                    </div>\n                );\n              }\n    \n              if(type === \"productList\") {\n                return (\n                    <div className={ fullWidth ? \"w-100\" : (children.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\")) } key={index}>\n                        <ProductList inCard={true} {...this.props} dynamicComponent={child} />\n                    </div>\n                );\n              }\n    \n              if(type === \"userCard\") {\n                return (\n                    <div className={ fullWidth ? \"w-100\" : (children.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\")) } key={index}>\n                        <UserCardGroup inCard={true} {...this.props} component={child} />\n                    </div>\n                );\n              }\n    \n              if(type === \"profileCard\") {\n                return (\n                    <div className={ fullWidth ? \"w-100\" : (children.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\")) } key={index}>\n                        <ProfileCard {...this.props} component={child} />\n                    </div>\n                );\n              }\n              \n              if(type === \"thumbCarousel\") {\n                const data = child.data.map( dataItem => ({ id: dataItem.id, img: dataItem.img }) );\n                  return (\n                    <div className={ fullWidth ? \"w-100\" : (children.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\")) } key={index}>\n                        <ThumbsCarousel {...this.props} data={data} transparent={transparent} component={child} />\n                    </div>\n                );\n            }\n\n            if(type === \"search\") {\n                return (\n                    <div className={ fullWidth ? \"w-100\" : (children.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\")) } key={index}>\n                        <Search {...this.props} component={child} />\n                    </div>\n                );\n          }\n\n          \n\t\tif(type === \"tabs\") {\n\t\t\treturn (\n                <div className={ fullWidth ? \"w-100\" : (children.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\")) } key={index}>\n                    <Tabs {...this.props} component={child} />\n                </div>\n\t\t\t);\n\t  }\n  \n  \n\n\n            return null;\n        });\n\n        if(transparent) {\n            return (\n                <div className=\"card bg-transparent shadow-none my-0\">\n                    <div className=\"card-body py-0\">\n                        <div className=\"row align-items-stretch justify-content-center\">\n                            { components }\n                        </div>\n                        {/* <div className=\"row justify-content-end mt-5 mx-5\">\n                            { this.renderFunctions() }\n                        </div> */}\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"card rounded-lg my-5\">\n                <div className=\"card-body\">\n                    <div className=\"card-title text-muted mb-0\">\n                        <img className=\"img-fluid list-thumbnail small mr-3\" src={image} alt={title} />\n                        <span>{title ? title.charAt(0).toUpperCase() + title.slice(1) : null}</span>\n                        { description ? <div className=\"d-inline\"><span> &mdash; </span><span className=\"opacity-50\">{description ? description.charAt(0).toUpperCase() + description.slice(1) : null}</span></div> : null }\n                    </div>\n                    {\n                    fullWidth\n                    ?\n                    <div>\n                        { components }\n                    </div>\n                    :\n                    <div className=\"row align-items-stretch justify-content-center\">\n                        { components }\n                    </div>\n                    }\n                    {/* <div className=\"row justify-content-end mt-5 mx-5\">\n                        { this.renderFunctions() }\n                    </div>                   */}\n                </div>\n            </div>\n        );\n      }\n  \n  \n\n}\n\n\nexport default Card;","\nimport React, { Component } from \"react\";\n\nimport { Wizard, Steps, Step } from 'react-albus';\nimport { TopNavigation } from \"./TopNavigation\";\nimport { BottomNavigation } from \"./BottomNavigation\";\nimport MultiSelect from \"../MultiSelect\";\n\nimport { Formik, Form, Field } from 'formik';\n\nimport classNames from 'classnames';\nimport { fetch } from \"../../../helpers/Utils\";\n\nclass ValidationWizard extends Component {\n\n    wizard = null;\n\n    state = {\n        valid: false,\n        processing: false,\n        hasError: false,\n        errorMessage: \"\"\n    };\n    \n    validate(value, validationRules) {\n        if(validationRules.includes(\"required\")) {\n            let error = false;\n            if(Array.isArray(value) && value.length === 0) {\n                error = true;\n                this.setState({\n                    valid: false\n                });\n            } else {\n                if (value === null || value === \"\") {\n                    error = true;\n                    this.setState({\n                        valid: false\n                    });\n                } else {\n                    this.setState({\n                        valid: true\n                    });\n                }\n            }\n            return error;\n        }\n    }\n\n    next(next, steps, step) {\n        const { valid } = this.state;\n        if(valid) {\n            return next();\n        }\n    }\n\n    previous(previous, steps, step) {\n        return previous();\n    }\n\n    topNavClick(step, push) {\n        const { valid } = this.state;\n        if(valid) {\n            return push(step.id);\n        }\n    }\n\n    async handleSubmit(values, action) {\n        const { baseURL, token } = this.props;\n        this.setState({\n            processing: true\n        });\n        return await fetch(`${baseURL}${action.endpoint}`, {\n            method: action.method,\n            headers: {\n                'Accept': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify(values)\n        })\n        .then( (response) => {\n            if(!response.ok) {\n                response.json()\n                .then( response => {\n                    this.setState({\n                        processing: false\n                    });\n                    throw new Error(response.message);\n                } )\n                .catch( error => this.setState({\n                    processing: false,\n                    hasError: true,\n                    errorMessage: error.message\n                }) );\n            } else {\n                this.setState({\n                    processing: false\n                });\n            }\n        });\n    }\n\n    handleEnterPress(event) {\n        const { valid } = this.state;\n        if(event.keyCode === 13) {\n            if(valid) {\n                return this.wizard.next();\n            }\n        }\n    }\n\n    getWizardField(step, errors, touched) {\n        const { type } = step;\n        if(type === \"text\") {\n            return (\n                <div className=\"form-group\">\n                    <label className=\"\">{step.label}</label>\n                    <Field className=\"form-control\" onKeyUp={ (event) => this.handleEnterPress(event) } name={step.name} validate={ (value) => this.validate(value, step.validationRules) } />\n                    {errors[step.name] && touched[step.name] && <div className=\"invalid-feedback d-block\">Please enter your {step.name}.</div>}\n                </div>\n            );\n        }\n\n        if(type === \"ddl\") {\n            const { data, ddl } = step;\n            let options = data.map( (option, index) => ({ key: index, label: option[ddl.label], value: option[ddl.value] }) );\n            return (\n                <div>\n                    <Field load={ (values) => this.validate(values, step.validationRules) } onChange={ (values) => this.validate(values, step.validationRules) } name={step.name} onKeyUp={ (event) => this.handleEnterPress(event) } component={MultiSelect} options={options} />\n                    {errors[step.name] && touched[step.name] && <div className=\"invalid-feedback d-block\">Please enter your {step.name}.</div>}\n                </div>\n            );\n        }\n        \n    }\n\n    getSteps(steps, errors, touched) {\n        const { processing, hasError, errorMessage } = this.state;\n        steps = steps.map( step => {\n            if(step.last) {\n                return (\n                    <Step hideTopNav key={step.id} id={step.id} render={ () => {\n                        return (\n                            <div className=\"wizard-basic-step text-center position-relative\">\n                                { processing ? (<div className=\"loading\" />) : hasError ? \n                                (\n                                    <div>\n                                        <h2>Oops! We got a problem!</h2>\n                                        <p>{errorMessage}</p>\n                                    </div>\n                                ) : (\n                                    <div>\n                                        <h2>{step.finishing.title}</h2>\n                                        <p>{step.finishing.description}</p>\n                                    </div>\n                                ) }\n                            </div>\n                        );\n                    }} />\n                );\n            }\n            return (\n                <Step key={step.id} id={step.id} name={step.title} desc={step.description} render={ () => {\n                    return (\n                        <div className=\"wizard-basic-step\">\n                            { this.getWizardField(step, errors, touched) }\n                        </div>\n                    );\n                }} />\n            );\n        });\n        return (\n            <Steps>\n                {steps}\n            </Steps>\n        );\n        \n    }\n\n    render() {\n        const { component: { action, steps } } = this.props;\n        const initialValues = steps.filter( step => !step.last ).map( step => ([ [step.name], step.type === \"ddl\" ? [] : '' ]) );\n        return (\n            <div className={classNames('card', this.props.className)}>\n                <div className=\"card-body\">\n                    <div className=\"wizard wizard-default\">\n                        <Formik\n                            initialValues={{ ...Object.fromEntries(initialValues) }}\n                            onSubmit={ (values) => this.handleSubmit(values, action) }\n                            >\n                            {({ errors, touched, isValidating }) => (\n                                <Form onKeyDown={ (event) => (event.keyCode === 13 ? event.preventDefault() : null) } className=\"av-tooltip tooltip-label-right\">\n                                    <Wizard ref={ ref => this.wizard = ref }>\n                                        <TopNavigation topNavClick={ (step, push) => this.topNavClick(step, push) } className=\"justify-content-center\" />\n                                            { this.getSteps(steps, errors, touched) }\n                                        <BottomNavigation onClickPrev={ (previous, steps, step) => this.previous(previous, steps, step) } onClickNext={ (next, steps, step) => this.next(next, steps, step) } className=\"justify-content-center\" prevLabel=\"Back\" nextLabel=\"Next\" />\n                                    </Wizard>\n                                </Form>\n                            )}\n                        </Formik>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ValidationWizard;\n  ","import React from \"react\";\nimport { ContextMenu, MenuItem } from \"react-contextmenu\";\n\nconst ContextMenuContainer = ({onContextMenu,onContextMenuClick}) => {\n  return (\n    <ContextMenu\n      id=\"menu_id\"\n      onShow={e => onContextMenu(e, e.detail.data)}\n    >\n      <MenuItem onClick={onContextMenuClick} data={{ action: \"copy\" }}>\n        <i className=\"simple-icon-docs\" /> <span>Copy</span>\n      </MenuItem>\n      <MenuItem onClick={onContextMenuClick} data={{ action: \"move\" }}>\n        <i className=\"simple-icon-drawer\" /> <span>Move to archive</span>\n      </MenuItem>\n      <MenuItem onClick={onContextMenuClick} data={{ action: \"delete\" }}>\n        <i className=\"simple-icon-trash\" /> <span>Delete</span>\n      </MenuItem>\n    </ContextMenu>\n  );\n};\n\nexport default ContextMenuContainer;\n","import React, { Component } from \"react\";\nimport {\n  Row,\n  Button,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  Collapse\n} from \"reactstrap\";\nimport { injectIntl } from \"react-intl\";\n\nimport { Colxx, Separator } from \"../../common/CustomBootstrap\";\nimport IntlMessages from \"../../../helpers/IntlMessages\";\n\nimport { DataListIcon, ThumbListIcon, ImageListIcon } from \"../../svg\";\n\nclass ListPageHeading extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      dropdownSplitOpen: false,\n      displayOptionsIsOpen: false\n    };\n  }\n\n  toggleDisplayOptions = () => {\n    this.setState(prevState => ({\n      displayOptionsIsOpen: !prevState.displayOptionsIsOpen\n    }));\n  };\n  toggleSplit =()=> {\n    this.setState(prevState => ({\n      dropdownSplitOpen: !prevState.dropdownSplitOpen\n    }));\n  }\n\n  render() {\n    const { messages } = this.props.intl;\n    const {\n      displayMode,\n      changeDisplayMode,\n      changeOrderBy,\n      changePageSize,\n      selectedPageSize,\n      totalItemCount,\n      selectedOrderOption,\n      startIndex,\n      endIndex,\n      onSearchKey,\n      orderOptions,\n      pageSizes,\n      heading,\n      inWizard,\n      inCard\n    } = this.props;\n\n    const { displayOptionsIsOpen } = this.state;\n    return (\n      <Row>\n        <Colxx xxs=\"12\">\n\n          {\n            !inWizard && !inCard ? \n            <div className=\"mb-2\">\n              <h1>{heading}</h1>\n            </div>\n            : null\n          }\n          \n\n          <div className=\"mb-2\">\n            <Button\n              color=\"empty\"\n              className=\"pt-0 pl-0 d-inline-block d-md-none\"\n              onClick={this.toggleDisplayOptions}\n            >\n              {\"Display Options\"}\n              <i className=\"simple-icon-arrow-down align-middle\" />\n            </Button>\n            <Collapse\n              isOpen={displayOptionsIsOpen}\n              className=\"d-md-block\"\n              id=\"displayOptions\">\n              <span className=\"mr-3 d-inline-block float-md-left\">\n                <a\n                  href=\"#/\"\n                  className={`mr-2 view-icon ${\n                    displayMode === \"list\" ? \"active\" : \"\"\n                  }`}\n                  onClick={() => changeDisplayMode(\"list\")}>\n                  <DataListIcon />\n                </a>\n                <a\n                  href=\"#/\"\n                  className={`mr-2 view-icon ${\n                    displayMode === \"thumblist\" ? \"active\" : \"\"\n                  }`}\n                  onClick={() => changeDisplayMode(\"thumblist\")}>\n                  <ThumbListIcon />\n                </a>\n                <a\n                  href=\"#/\"\n                  className={`mr-2 view-icon ${\n                    displayMode === \"imagelist\" ? \"active\" : \"\"\n                  }`}\n                  onClick={() => changeDisplayMode(\"imagelist\")}>\n                  <ImageListIcon />\n                </a>\n              </span>\n\n              <div className=\"d-block d-md-inline-block pt-1\">\n                <UncontrolledDropdown className=\"mr-1 float-md-left btn-group mb-1\">\n                  <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\n                    <IntlMessages id=\"pages.orderby\" />\n                    {selectedOrderOption.label}\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    {orderOptions.map((order, index) => {\n                      return (\n                        <DropdownItem\n                          key={index}\n                          onClick={() => changeOrderBy(order.column)}\n                        >\n                          {order.label}\n                        </DropdownItem>\n                      );\n                    })}\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n                <div className=\"search-sm d-inline-block float-md-left mr-1 mb-1 align-top\">\n                  <input\n                    type=\"text\"\n                    name=\"keyword\"\n                    id=\"search\"\n                    placeholder={messages[\"menu.search\"]}\n                    onKeyPress={e => onSearchKey(e)}\n                  />\n                </div>\n              </div>\n              <div className=\"float-md-right pt-1\">\n                <span className=\"text-muted text-small mr-1\">{`${startIndex}-${endIndex} of ${totalItemCount} `}</span>\n                <UncontrolledDropdown className=\"d-inline-block\">\n                  <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\n                    {selectedPageSize}\n                  </DropdownToggle>\n                  <DropdownMenu right>\n                    {pageSizes.map((size, index) => {\n                      return (\n                        <DropdownItem\n                          key={index}\n                          onClick={() => changePageSize(size)}\n                        >\n                          {size}\n                        </DropdownItem>\n                      );\n                    })}\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n              </div>\n            </Collapse>\n          </div>\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n    );\n  }\n}\n\nexport default injectIntl(ListPageHeading);\n","import React from \"react\";\nimport {\n  Row,\n  Card,\n  CardBody,\n  CardSubtitle,\n  CardImg,\n  CardText,\n  CustomInput,\n  Badge\n} from \"reactstrap\";\nimport classnames from \"classnames\";\nimport { ContextMenuTrigger } from \"react-contextmenu\";\nimport { Colxx } from \"../../common/CustomBootstrap\";\nimport { NavLink } from \"react-router-dom\";\n\nconst ImageListView = ({id, product, isSelect, collect, onCheckItem, toggleModal }) => {\n  return (\n    <Colxx sm=\"6\" lg=\"4\" xl=\"3\" className=\"mb-3\" key={product.id}>\n      <ContextMenuTrigger id=\"menu_id\" data={product.id} collect={collect}>\n        <Card\n          onClick={event => onCheckItem(event, product.id)}\n          className={classnames({\n            active: isSelect\n          })}\n        >\n          <div className=\"position-relative\">\n            <CardImg top alt={product.title} src={product.img} />\n            {\n              product.price ? <Badge\n              color={'primary'}\n              pill\n              className=\"position-absolute badge-top-left\"\n            >\n              ${product.price}\n            </Badge> : null\n            }\n            <Badge\n              color={product.statusColor}\n              pill\n              className=\"position-absolute badge-top-left\"\n            >\n              {product.status}\n            </Badge>\n          </div>\n          <CardBody>\n            <Row>\n              <Colxx xxs=\"2\">\n                <CustomInput\n                  className=\"item-check mb-0\"\n                  type=\"checkbox\"\n                  id={`check_${product.id}`}\n                  checked={isSelect}\n                  onChange={() => {}}\n                  label=\"\"/>\n              </Colxx>\n              <Colxx xxs=\"10\" className=\"mb-3\">\n                <NavLink to={`?p=${product.id}`} onClick={ (e) => toggleModal(e, id) }>\n                  <CardSubtitle className=\"mb-2 truncate\">{product.title}</CardSubtitle>\n                </NavLink>\n                <CardText className=\"text-muted text-small mb-0 font-weight-light\">\n                  {product.date}\n                </CardText>\n              </Colxx>\n            </Row>\n          </CardBody>\n        </Card>\n      </ContextMenuTrigger>\n    </Colxx>\n  );\n};\n\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\nexport default React.memo(ImageListView);\n","import React from \"react\";\nimport { Card, CustomInput, Badge } from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport { ContextMenuTrigger } from \"react-contextmenu\";\nimport { Colxx } from \"../../common/CustomBootstrap\";\n\nconst ThumbListView = ({ id, product, isSelect, collect, onCheckItem, toggleModal }) => {\n  return (\n    <Colxx xxs=\"12\" key={product.id} className=\"mb-3\">\n      <ContextMenuTrigger id=\"menu_id\" data={product.id} collect={collect}>\n        <Card\n          onClick={event => onCheckItem(event, product.id)}\n          className={classnames(\"d-flex flex-row\", {\n            active: isSelect\n          })}\n        >\n          <div className=\"d-flex\">\n            <img\n              alt={product.title}\n              src={product.img}\n              className=\"list-thumbnail responsive border-0 card-img-left\"\n            />\n          </div>\n          <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\n            <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\n              <NavLink to={`?p=${product.id}`} onClick={ (e) => toggleModal(e, id) } className=\"w-40 w-sm-100\">\n                <p className=\"list-item-heading mb-1 truncate\">\n                  {product.title}\n                </p>\n              </NavLink>\n              <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\n                {product.category}\n              </p>\n              <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\n                {product.date}\n              </p>\n              <div className=\"w-15 w-sm-100\">\n                <Badge color={product.statusColor} pill>\n                  {product.status}\n                </Badge>\n              </div>\n            </div>\n            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n              <CustomInput\n                className=\"item-check mb-0\"\n                type=\"checkbox\"\n                id={`check_${product.id}`}\n                checked={isSelect}\n                onChange={()=>{}}\n                label=\"\"\n              />\n            </div>\n          </div>\n        </Card>\n      </ContextMenuTrigger>\n\n      \n\n    </Colxx>\n  );\n};\n\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\nexport default React.memo(ThumbListView);\n","import React from \"react\";\nimport { Card, CustomInput, Badge } from \"reactstrap\";\nimport classnames from \"classnames\";\nimport { ContextMenuTrigger } from \"react-contextmenu\";\nimport { Colxx } from \"../../common/CustomBootstrap\";\nimport { NavLink } from \"react-router-dom\";\n\nconst DataListView = ({ id, product, isSelect, collect, onCheckItem, toggleModal }) => {\n  return (\n    <Colxx xxs=\"12\" className=\"mb-3\">\n      <ContextMenuTrigger id=\"menu_id\" data={product.id} collect={collect}>\n        <Card\n          onClick={event => onCheckItem(event, product.id)}\n          className={classnames(\"d-flex flex-row\", {\n            active: isSelect\n          })}\n        >\n          <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\n            <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\n              \n              <NavLink to={`?p=${product.id}`} onClick={ (e) => toggleModal(e, id) }>\n                <p className=\"list-item-heading mb-0 truncate\">\n                  {product.title}\n                </p>\n              </NavLink>\n              <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\n                {product.category}\n              </p>\n              <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\n                {product.date}\n              </p>\n              <div className=\"w-15 w-sm-100\">\n                <Badge color={product.statusColor} pill>\n                  {product.status}\n                </Badge>\n              </div>\n            </div>\n            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n              <CustomInput\n                className=\"item-check mb-0\"\n                type=\"checkbox\"\n                id={`check_${product.id}`}\n                checked={isSelect}\n                onChange={() => {}}\n                label=\"\"\n              />\n            </div>\n          </div>\n        </Card>\n      </ContextMenuTrigger>\n    </Colxx>\n  );\n};\n\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\nexport default React.memo(DataListView);\n","\nimport React, { Component } from \"react\";\n\nimport ContextMenuContainer from \"./ContextMenuContainer\";\nimport ListPageHeading from \"./ListPageHeading\";\nimport ImageListView from \"./ImageListView\";\nimport ThumbListView from \"./ThumbListView\";\nimport DataListView from \"./DataListView\";\nimport dynamicFunctions from '../functions';\nimport { NotificationManager } from \"../../common/react-notifications\";\nimport { withRouter } from \"react-router-dom\";\nimport classnames from 'classnames';\nimport { Modal, ModalBody } from \"reactstrap\";\n\nimport {\n    AreaChart,\n    LineChart,\n    BarChart,\n    PieChart,\n    DoughnutChart,\n    Table,\n    ProductList,\n    ProfileCard,\n    Calendar,\n    ThumbsCarousel,\n    Search,\n    Tabs,\n    UserCardGroup,\n    Card\n} from '../index';\nimport Validation from '../wizard/Validation';\nimport { fetch } from \"../../../helpers/Utils\";\n\nclass ProductCardList extends Component {\n\n    state = {\n        mode: 'thumblist',\n        search: '',\n        selectedPageSize: 8,\n        selectedOrderOption: {\n            label: 'Product Name',\n            column: 'name'\n        },\n        selectedProducts: [],\n        data: [],\n        modalOpen: false,\n        elements: []\n    }\n\n    toggle(index = null) {\n        const { modalOpen, data } = this.state;\n        if(index !== null && Array.isArray(data[index].elements)) {\n            return this.setState({\n                modalOpen: !modalOpen,\n                elements: data[index].elements\n            });\n        }\n\n        return this.setState({\n            modalOpen: false\n        });\n\n    }\n\n    componentDidMount() {\n        const { baseURL, data, token, clientID, dynamicComponent: { id } } = this.props;\n        const { slug } = this.props.match.params;\n        const { search } = this.props.location;\n        const queryParams = new URLSearchParams(search).entries();\n        let params = new URLSearchParams();\n        params.set('page_slug', slug);\n        params.set('elementID', id);\n        params.set('elementType', 'productCardList');\n        params.set('client_id', clientID);\n        for(let param of queryParams) {\n            params.set(`queryString[${param[0]}]`, param[1]);\n        }        \n        if(data !== undefined) {\n            data.forEach( (dataItem, index) => params.set(`data[${index}]`, dataItem) );\n        } else {\n            params.set(`data`, false);\n        }\n        params = params.toString();\n        return fetch(`${baseURL}/details?${params}`, {\n            type: 'GET',\n            headers: {\n                Accept: 'application/json',\n                Authorization: `Bearer ${token}`\n            }\n        })\n        .then( response => response.json() )\n        .then( response => this.setState({ data: response.data }) )\n        .catch( error => NotificationManager.error(error.message, \"Oops! We got a problem.\", 3000, null, null, '') );\n    }\n\n    renderProducts() {\n        let { mode, search, selectedProducts, data } = this.state;\n        if(search !== \"\") {\n            data = data.filter( dataItem => dataItem.title.match(new RegExp(search, 'gi')) );\n        }\n        let products = data.map( (productItem, index) => {\n            let product = {\n                id: productItem.id,\n                title: productItem.title,\n                date: productItem.date,\n                price: productItem.price,\n                img: productItem.img ? productItem.img : \"https://gogo-react.coloredstrategies.com/assets/img/marble-cake-thumb.jpg\"\n            };\n            if(mode === \"imagelist\") {\n                return (\n                    <ImageListView id={index} key={index} product={product} isSelect={selectedProducts.includes(product.id)} onCheckItem={ (event, productID) => this.onCheckItem(event, productID) } toggleModal={ (e, key) => this.toggle(key) } />\n                );\n            } else if(mode === \"thumblist\") {\n                return (\n                    <ThumbListView id={index} key={index} product={product} isSelect={selectedProducts.includes(product.id)} onCheckItem={ (event, productID) => this.onCheckItem(event, productID) } toggleModal={ (e, key) => this.toggle(key) } />\n                );\n            } else {\n                return (\n                    <DataListView id={index} key={index} product={product} isSelect={selectedProducts.includes(product.id)} onCheckItem={ (event, productID) => this.onCheckItem(event, productID) } toggleModal={ (e, key) => this.toggle(key) } />\n                );\n            }         \n        });\n        if(products.length > 0) {\n            return products;\n        }\n        return (\n            <div className=\"text-center w-100\">\n                <span className=\"font-italic\">No product found...</span>\n            </div>\n        );\n    }\n\n    async getUpdatedProducts(productID) {\n        const { selectedProducts } = this.state;\n        let products = [];\n        if(selectedProducts.includes(productID)) {\n            products = [\n                ...selectedProducts.filter( selectedProduct => selectedProduct !== productID )\n            ];\n        } else {\n            products = [\n                ...selectedProducts,\n                productID\n            ];\n        }\n        return products;\n    }\n\n    async onCheckItem(event, productID) {\n        const { form, field, onChange } = this.props;\n        let products = await this.getUpdatedProducts(productID);\n        await form.setFieldValue(field.name, products);\n        await onChange(products);\n        return this.setState({\n            selectedProducts: products\n        });\n    }\n\n    changePageSize(size) {\n        return this.setState({\n            selectedPageSize: size\n        });\n    }\n\n    changeDisplayMode(mode) {\n        return this.setState({\n            mode\n        });\n    }\n\n    onSearchKey(event) {\n        return this.setState({\n            search: event.target.value\n        });\n    }\n\n    renderFunctions() {\n        const { selectedProducts, data } = this.state;\n        let { functions } = this.props;\n        if(functions) {\n            functions = functions.map( functionName => {\n                if(functionName in dynamicFunctions) {\n                    return dynamicFunctions[functionName];\n                }\n                return null;\n            }).filter( functionName => functionName !== null );\n            functions = functions.map( (functionName, index) => {\n                const Component = functionName;\n                const filteredData = data.filter( (productItem) => selectedProducts.includes(productItem.id) );\n                return <Component key={index} products={filteredData} />;\n            })\n        } else {\n            functions = [];\n        }\n        return functions;\n    }\n\n    showTitle() {\n        const { inCard, inWizard, dynamicComponent: { title, data } } = this.props;\n        const { selectedOrderOption, selectedPageSize } = this.state;\n        const orderOptions = [\n            {\n                label: 'Name',\n                column: 'name'\n            },\n            {\n                label: 'Date',\n                column: 'date'\n            }\n        ];\n        const pageSizes = [8, 12, 24];\n        return (\n            <ListPageHeading inWizard={inWizard} inCard={inCard} heading={title.charAt(0).toUpperCase() + title.slice(1)} changeOrderBy={ (column) => this.setState({ selectedOrderOption: orderOptions.find(opt => opt.column === column) }) } changeDisplayMode={ (mode) => this.changeDisplayMode(mode) } changePageSize={ (size) => this.changePageSize(size) } onSearchKey={ (event) => this.onSearchKey(event) } startIndex={0} endIndex={selectedPageSize} totalItemCount={data.length} pageSizes={pageSizes} selectedPageSize={selectedPageSize} orderOptions={orderOptions} selectedOrderOption={selectedOrderOption} />\n        );\n    }\n\n    \n    renderElements() {\n\n        const { elements } = this.state;\n        const transparent = false;\n\n        const components = elements.map( (element, index) => {\n            const { type } = element;\n            if(type === \"chart\") {\n                const { kind } = element;\n                if(kind === \"pie\") {\n                    return (\n                        <div className={ elements.length === 1 ? \"col\" : (index === 0 ? \"col-md-7\" : \"col-md-5\") } key={index}>\n                            <PieChart className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={element} />\n                        </div>\n                    );\n                }\n    \n                if(kind === \"bar\") {\n                    return (\n                        <div className={ elements.length === 1 ? \"col\" : (index === 0 ? \"col-md-7\" : \"col-md-5\") } key={index}>\n                            <BarChart className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={element} />\n                        </div>\n                    );\n                }\n    \n                if(kind === \"area\") {\n                    return (\n                        <div className={ elements.length === 1 ? \"col\" : (index === 0 ? \"col-md-7\" : \"col-md-5\") } key={index}>\n                            <AreaChart className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={element} />\n                        </div>\n                    );\n                }\n\n                if(kind === \"line\") {\n                    return (\n                        <div className={ elements.length === 1 ? \"col\" : (index === 0 ? \"col-md-7\" : \"col-md-5\") } key={index}>\n                            <LineChart className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={element} />\n                        </div>\n                    );\n                }\n\n                if(kind === \"doughnut\") {\n                    return (\n                        <div className={ elements.length === 1 ? \"col\" : (index === 0 ? \"col-md-7\" : \"col-md-5\") } key={index}>\n                            <DoughnutChart className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={element} />\n                        </div>\n                    );\n                }\n            }\n\n            if(type === \"calendar\") {\n                return (\n                    <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                        <Calendar component={element} />\n                    </div>\n                );\n            }\n\n            if(type === \"table\") {\n                return (\n                    <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                        <Table component={element} />\n                    </div>\n                );\n            }\n\n            if(type === \"card\") {\n                return (\n                    <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                        <Card {...this.props} component={element} />\n                    </div>\n                );\n              }\n    \n              if(type === \"wizard\") {\n                return (\n                    <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                        <Validation {...this.props} component={element} />\n                    </div>\n                );\n              }\n    \n              if(type === \"productCardList\") {\n                return (\n                    <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                        <ProductCardList inCard={true} {...this.props} component={element} />\n                    </div>\n                );\n              }\n    \n              if(type === \"productList\") {\n                return (\n                    <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                        <ProductList inCard={true} {...this.props} dynamicComponent={element} />\n                    </div>\n                );\n              }\n    \n              if(type === \"userCard\") {\n                return (\n                    <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                        <UserCardGroup inCard={true} {...this.props} component={element} />\n                    </div>\n                );\n              }\n    \n              if(type === \"profileCard\") {\n                return (\n                    <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                        <ProfileCard {...this.props} component={element} />\n                    </div>\n                );\n              }\n              \n              if(type === \"thumbCarousel\") {\n                const data = element.data.map( dataItem => ({ id: dataItem.id, img: dataItem.img }) );\n                  return (\n                    <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                        <ThumbsCarousel {...this.props} data={data} component={element} />\n                    </div>\n                );\n            }\n\n            if(type === \"search\") {\n                return (\n                    <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                        <Search {...this.props} component={element} />\n                    </div>\n                );\n            }\n\n            \n            if(type === \"tabs\") {\n                return (\n                    <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                        <Tabs {...this.props} component={element} />\n                    </div>\n                );\n            }\n  \n            return null;\n        });\n\n        return components;\n    }\n\n    render() {\n        const { hidden, inCard } = this.props;\n        const { modalOpen, elements } = this.state;\n        return (\n            <div className={classnames({ 'card': inCard })}>\n                <div className={classnames({ 'card-body': inCard })}>\n                    { this.showTitle() }\n                    <div className={classnames('row', 'align-items-stretch', 'mt-5', 'mx-5')}>\n                        <ContextMenuContainer onContextMenu={ (e, data) => null } />\n                        { !hidden ? this.renderProducts() : null }\n                        \n                        <Modal isOpen={modalOpen} size=\"lg\" toggle={ () => this.toggle() }>\n                            <ModalBody className=\"p-4\">\n                                { elements.length === 0 ? <div class=\"loading d-block mx-auto position-static\" /> : null }\n                                { this.renderElements() }\n                            </ModalBody>\n                        </Modal>\n\n                    </div>\n                    <div className=\"row justify-content-end mt-5 mx-5\">\n                        { !hidden ? this.renderFunctions() : null }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(ProductCardList);","import React from \"react\";\nimport { ContextMenu, MenuItem } from \"react-contextmenu\";\n\nconst ContextMenuContainer = ({onContextMenu,onContextMenuClick}) => {\n  return (\n    <ContextMenu\n      id=\"menu_id\"\n      onShow={e => onContextMenu(e, e.detail.data)}\n    >\n      <MenuItem onClick={onContextMenuClick} data={{ action: \"copy\" }}>\n        <i className=\"simple-icon-docs\" /> <span>Copy</span>\n      </MenuItem>\n      <MenuItem onClick={onContextMenuClick} data={{ action: \"move\" }}>\n        <i className=\"simple-icon-drawer\" /> <span>Move to archive</span>\n      </MenuItem>\n      <MenuItem onClick={onContextMenuClick} data={{ action: \"delete\" }}>\n        <i className=\"simple-icon-trash\" /> <span>Delete</span>\n      </MenuItem>\n    </ContextMenu>\n  );\n};\n\nexport default ContextMenuContainer;\n","import React, { useState } from \"react\";\nimport {\n  Row,\n  Card,\n  CardBody,\n  CardSubtitle,\n  CardImg,\n  CardText,\n  CustomInput,\n  Badge\n} from \"reactstrap\";\nimport classnames from \"classnames\";\nimport { ContextMenuTrigger } from \"react-contextmenu\";\nimport { Colxx } from \"../../common/CustomBootstrap\";\nimport { NavLink } from \"react-router-dom\";\n\nconst ImageListView = ({ detailViewSlug, entityName, product, isSelect, collect, onCheckItem }) => {\n\n\n  const [productImage, setProductImage] = useState(product.img);\n\n  const image = new Image();\n  image.src = product.img;\n\n  image.onload = (e) => {\n    setProductImage(product.img);\n  }\n\n  image.onerror = (e) => {\n    setProductImage('/assets/img/missing.png');\n  }\n\n  const renderDefaultImage = () => {\n    return (\n      <div className=\"text-center py-5\">\n        <div className=\"loading position-static\" />\n      </div>\n    );\n  }\n\n\n  const renderProductImage = (product) => {\n    return (\n      <CardImg className=\"img-fluid\" top alt={product.title} src={productImage} />\n    );\n  }\n\n  return (\n    <Colxx sm=\"6\" lg=\"4\" xl=\"3\" className=\"mb-3\" key={product.id}>\n      <ContextMenuTrigger id=\"menu_id\" data={product.id} collect={collect}>\n        <Card\n          onClick={ event => {\n            const dataName = event.target.dataset.name;\n            if(!dataName) {\n              return onCheckItem(event, product.id);\n            }\n          }}\n          className={classnames({\n            active: isSelect\n          })}\n        >\n          <div className=\"position-relative\">\n\n\n\n            <div className=\"position-absolute product-badges d-flex flex-column\">\n            {\n            product.price ? <Badge\n            color={'primary'}\n            pill\n            className=\"badge-top-left\"\n          >\n            € {product.price}\n          </Badge> : null\n          }\n            \n            <Badge\n              color={product.statusColor}\n              pill\n              className=\"badge-top-left my-1\"\n            >\n              {product.status}\n            </Badge>\n            </div>\n            { !productImage ? renderDefaultImage() : renderProductImage(product) }\n\n   \n          </div>\n          <CardBody>\n            <Row>\n              <Colxx xxs=\"2\">\n                <CustomInput\n                  className=\"item-check mb-0\"\n                  type=\"checkbox\"\n                  id={`check_${product.id}`}\n                  checked={isSelect}\n                  onChange={() => {}}\n                  label=\"\"/>\n              </Colxx>\n              <Colxx xxs=\"10\" className=\"mb-3\">\n                <NavLink to={`${detailViewSlug}?p=${product.id}&e=${entityName}`}>\n                  <CardSubtitle data-name=\"details-link\" className=\"mb-2 text-truncate\">{product.title}</CardSubtitle>\n                </NavLink>\n                <CardText className=\"text-muted text-small mb-0 font-weight-light\">\n                  {product.date}\n                </CardText>\n              </Colxx>\n            </Row>\n          </CardBody>\n        </Card>\n      </ContextMenuTrigger>\n    </Colxx>\n  );\n};\n\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\nexport default React.memo(ImageListView);\n","import React, { Component, Fragment } from \"react\";\nimport {\n  Pagination, PaginationItem, PaginationLink,\n  UncontrolledDropdown, DropdownMenu, DropdownToggle, DropdownItem\n} from \"reactstrap\";\n\nexport default class ProductListPagination extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getSafePage = this.getSafePage.bind(this);\n    this.changePage = this.changePage.bind(this);\n    this.applyPage = this.applyPage.bind(this);\n    this.pageClick = this.pageClick.bind(this);\n    this.renderPages = this.renderPages.bind(this);\n    this.changePageSize = this.changePageSize.bind(this);\n    this.renderPageJump = this.renderPageJump.bind(this);\n\n    this.state = {\n      page: props.page,\n      pageSize: this.props.defaultPageSize\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {page: props.page};\n  }\n\n  getSafePage(page) {\n    if (Number.isNaN(page)) {\n      page = this.props.page;\n    }\n    return page;\n    // return Math.min(Math.max(page, 0), this.props.pages - 1);\n  }\n\n  changePageSize(size) {\n    this.props.onPageSizeChange(size);\n    this.setState({ pageSize: size });\n  }\n\n  changePage(page) {\n    page = this.getSafePage(page);\n    this.setState({ page });\n    if (this.props.page !== page) {\n      this.props.onPageChange(page);\n    }\n  }\n\n  applyPage(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    const page = this.state.page;\n    this.changePage(page === \"\" ? this.props.page : page);\n  }\n\n  pageClick(pageIndex) {\n    this.changePage(pageIndex);\n  }\n\n  renderPages() {\n    // let pageCount = this.props.pages;\n    const { pages } = this.props;\n    const { page: statePage } = this.state;\n    let pageButtons = [];\n    pages.forEach( (page) => {\n      if(page !== 0) {\n        let active = statePage === page ? true : false;\n        pageButtons.push(\n          <PaginationItem key={page} active={active}>\n            <PaginationLink\n              onClick={() => this.pageClick(page)}\n            >{page}</PaginationLink>\n          </PaginationItem>\n        );\n      } else {\n        pageButtons.push(\n          <PaginationItem className=\"pointer-events-none\" key={Math.random().toString(36).substring(7)}>\n            <PaginationLink>...</PaginationLink>\n          </PaginationItem>\n        );\n      }\n    });\n    // for (let i = 0; i < pageCount.length; i++) {\n    //   let active = this.state.page === i ? true : false;\n    //   pageButtons.push(\n    //     <PaginationItem key={i} active={active}>\n    //       <PaginationLink\n    //         onClick={() => this.pageClick(i)}\n    //       >{i + 1}</PaginationLink>\n    //     </PaginationItem>\n    //   );\n    // }\n    return pageButtons;\n  }\n\n  renderPageJump() {\n    let pages = this.props.pages;\n    let pageNumbers = [];\n    for (let i = 0; i < pages; i++) {\n      pageNumbers.push(\n        <DropdownItem\n          key={i}\n          onClick={() => this.changePage(i)}\n        >\n          {i + 1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  }\n\n  render() {\n    const {\n      page,\n      pages,\n      canPrevious,\n      canNext,\n      pageSizeOptions,\n      showPageSizeOptions,\n      showPageJump,\n      totalResults\n    } = this.props;\n\n    return (\n      <Fragment>\n        <div className=\"text-center mt-5\">\n          {\n            showPageJump &&\n            <div className=\"float-left pt-2\"><span>Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\">\n                  {this.state.page}\n                </DropdownToggle>\n                <DropdownMenu direction=\"left\" >\n                  {this.renderPageJump()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>{pages}</div>\n          }\n\n          <Pagination className=\"d-inline-block\" size=\"sm\" listClassName=\"justify-content-center\" aria-label=\"Page navigation example\">\n            <PaginationItem className={`${ (!canPrevious || (page < 2)) && \"disabled\"}`}>\n              <PaginationLink\n                className={\"prev\"}\n                onClick={() => {\n                  if (!canPrevious) return;\n                  this.changePage(1);\n                }}\n                disabled={!canPrevious}>\n                <i className=\"simple-icon-control-start\" />\n              </PaginationLink>\n            </PaginationItem>\n\n            <PaginationItem className={`${ (!canPrevious || (page < 2)) && \"disabled\"}`}>\n              <PaginationLink\n                className={\"prev\"}\n                onClick={() => {\n                  if (!canPrevious) return;\n                  this.changePage(page - 1);\n                }}\n                disabled={!canPrevious}>\n                <i className=\"simple-icon-arrow-left\" />\n              </PaginationLink>\n            </PaginationItem>\n\n            {this.renderPages()}\n\n            <PaginationItem className={`${ (!canNext || (totalResults === 0) || (page === Math.max(...pages))) && \"disabled\"}`}>\n              <PaginationLink\n                className=\"next\"\n                onClick={() => {\n                  if (!canNext) return;\n                  this.changePage(page);\n                }}\n                disabled={!canNext}>\n                <i className=\"simple-icon-arrow-right\" />\n              </PaginationLink>\n            </PaginationItem>\n\n\n            <PaginationItem className={`${ (!canNext || (totalResults === 0) || (page === Math.max(...pages))) && \"disabled\"}`}>\n              <PaginationLink\n                className=\"next\"\n                onClick={() => {\n                  if (!canNext) return;\n                  this.changePage(Math.max(...pages));\n                }}\n                disabled={!canNext}>\n                <i className=\"simple-icon-control-end\" />\n              </PaginationLink>\n            </PaginationItem>\n\n\n          </Pagination>\n          {\n            showPageSizeOptions &&\n            <div className=\"float-right pt-2\">\n              <span className=\"text-muted text-small mr-1\">Items </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\">\n                  {this.state.pageSize}\n                </DropdownToggle>\n                <DropdownMenu right>\n                  {pageSizeOptions.map((size, index) => {\n                    return (\n                      <DropdownItem\n                        key={index}\n                        onClick={() => this.changePageSize(size)}\n                      >\n                        {size}\n                      </DropdownItem>\n                    );\n                  })}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </div>\n          }\n        </div>\n      </Fragment>\n    );\n  }\n}\n","\nimport React, { Component, Fragment } from \"react\";\nimport { Modal, ModalBody, ButtonDropdown, DropdownItem, DropdownMenu, DropdownToggle, CustomInput, FormGroup, Label } from \"reactstrap\";\nimport ContextMenuContainer from \"./ContextMenuContainer\";\nimport ImageListView from \"./ImageListView\";\nimport ProductListPagination from \"./ProductListPagination\";\nimport { NotificationManager } from \"../../common/react-notifications\";\nimport { withRouter } from \"react-router-dom\";\nimport classnames from 'classnames';\nimport dynamicFunctions from '../functions';\nimport { fetch } from \"../../../helpers/Utils\";\nimport Validation from '../wizard/Validation';\nimport Slider, { Range } from \"rc-slider\";\nimport SingleSelect from \"../SingleSelect\";\nimport {\n    // Formik,\n    // Form,\n    Field\n} from \"formik\";\n// import SearchableMultiSelect from \"../SearchableMultiSelect\";\nimport MultiSelect from \"../MultiSelect\";\n\nfunction numberWithCommas(x) {\n    return x.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nclass RangeTooltip extends Component {\n    \n    sliderHandle = (props) => {\n        const { value, dragging, index, offset, ...restProps } = props;\n        const positionStyle = {\n            position: \"absolute\",\n            left: `${offset}%`\n        };\n        return (\n            <Fragment key={index}>\n                <div className=\"rc-slider-tooltip\" style={positionStyle}>{\"€\"+numberWithCommas(value)}</div>\n                <Slider.Handle value={value} offset={offset} {...restProps} />\n            </Fragment>\n        );\n    }\n\n    render() {\n        return (\n          <Range handle={this.sliderHandle} {...this.props} />\n        );\n    }\n}\n\nclass ProductList extends Component {\n\n    state = {\n        selectedProducts: [],\n        data: [],\n        currentPage: 1,\n        perPage: 12,\n        pageList: [],\n        dropdownSplitOpen: false,\n        isOpen: false,\n        modalContent: [],\n        priceFilter: null,\n        statusFilter: null,\n        categoryFilter: null,\n        nameFilter: null,\n        tagFilter: null,\n        isLoading: false\n    }\n\n    toggle = () => this.setState({ isOpen: !this.state.isOpen });\n\n    toggleSplit() {\n        return this.setState( prevState => ({ dropdownSplitOpen: !prevState.dropdownSplitOpen }) );\n    }\n\n    handleChangeSelectAll = isToggle => {\n        const { selectedProducts, data } = this.state;\n        if (selectedProducts.length >= data.length) {\n            if (isToggle) {\n                this.setState({\n                    selectedProducts: []\n                });\n            }\n        } else {\n            this.setState({\n                selectedProducts: data.map(x => x.id)\n            });\n        }\n        document.activeElement.blur();\n        return false;\n    };\n\n    fetchProductsData(priceFilter = null, statusFilter = null, categoryFilter = null, tagFilter = null, nameFilter = null) {\n        const { baseURL, data, token, clientID, dynamicComponent: { id } } = this.props;\n        const { slug } = this.props.match.params;\n        const { search } = this.props.location;\n        const { currentPage, perPage } = this.state;\n        const queryParams = new URLSearchParams(search).entries();\n        let params = new URLSearchParams();\n        params.set('page_slug', slug);\n        params.set('elementID', id);\n        params.set('elementType', 'productList');\n        params.set('client_id', clientID);\n        params.set('currentPage', currentPage);\n        params.set('perPage', perPage);\n\n        if(priceFilter) {\n            params.set('filters[price]', priceFilter);\n        }\n\n        if(statusFilter) {\n            params.set('filters[status]', statusFilter);\n        }\n\n        if(nameFilter) {\n            params.set('filters[name]', nameFilter);\n        }\n\n        if(categoryFilter && categoryFilter.length > 0) {\n            params.set('filters[category]', categoryFilter);\n        }\n\n        if(tagFilter && tagFilter.length > 0) {\n            params.set('filters[tag]', tagFilter);\n        }\n\n        \n        for(let param of queryParams) {\n            params.set(`queryString[${param[0]}]`, param[1]);\n        }        \n        if(data !== undefined) {\n            data.forEach( (dataItem, index) => params.set(`data[${index}]`, dataItem) );\n        } else {\n            params.set(`data`, false);\n        }\n        params = params.toString();\n\n        this.setState({\n            isLoading: true\n        });\n\n        return fetch(`${baseURL}/details?${params}`, {\n            type: 'GET',\n            headers: {\n                Accept: 'application/json',\n                Authorization: `Bearer ${token}`\n            }\n        })\n        .then( response => response.json() )\n        .then( response => {\n            return this.setState({ \n                currentPage: response.data.currentPage,\n                data: response.data.data,\n                perPage: response.data.perPage,\n                pageList: response.data.pageList,\n                isLoading: false\n            });\n        })\n        .catch( error => NotificationManager.error(error.message, \"Oops! We got a problem.\", 3000, null, null, '') );\n    }\n\n    componentDidMount() {\n        return this.fetchProductsData();\n    }\n\n    renderFunctions() {\n        const { selectedProducts, data } = this.state;\n        let { functions } = this.props;\n        if(functions) {\n            functions = functions.map( functionName => {\n                if(functionName in dynamicFunctions) {\n                    return dynamicFunctions[functionName];\n                }\n                return null;\n            }).filter( functionName => functionName !== null );\n            functions = functions.map( functionName => {\n                const Component = functionName;\n                const filteredData = data.filter( (productItem) => selectedProducts.includes(productItem.id) );\n                return <Component products={filteredData} />;\n            })\n        } else {\n            functions = [];\n        }\n        return functions;\n    }\n\n    callback(error) {\n        this.setState({\n            isOpen: false,\n            modalContent: [],\n            selectedProducts: []\n        });\n        if(!error) {\n            return this.fetchProductsData(this.state.priceFilter, this.state.statusFilter, this.state.categoryFilter, this.state.tagFilter, this.state.nameFilter);\n        }\n    }\n\n    renderProducts() {\n        const { selectedProducts, data, isLoading } = this.state;\n        const { dynamicComponent: { detailViewSlug, entityName } } = this.props;\n        if(isLoading) {\n            return (\n                <div className=\"text-center w-100\">\n                    <div className=\"loading position-static\" />\n                </div>\n            );\n        }\n        let products = data.map( (productItem, index) => {\n            let product = {\n                id: productItem.id,\n                title: productItem.title,\n                date: productItem.date,\n                price: productItem.price,\n                status: productItem.status,\n                statusColor: productItem.status_color,\n                img: productItem.img ? productItem.img : \"https://gogo-react.coloredstrategies.com/assets/img/marble-cake-thumb.jpg\"\n            };\n            return (\n                <ImageListView key={index} entityName={entityName} detailViewSlug={detailViewSlug} product={product} isSelect={selectedProducts.includes(product.id)} onCheckItem={ (event, productID) => this.onCheckItem(event, productID) } />\n            );            \n        });\n        if(products.length > 0) {\n            return products;\n        }\n        return (\n            <p className=\"w-100 mb-0 font-italic text-center\">No data found with the specified criteria.</p>\n        );\n    }\n\n    async getUpdatedProducts(productID) {\n        const { selectedProducts } = this.state;\n        let products = [];\n        if(selectedProducts.includes(productID)) {\n            products = [\n                ...selectedProducts.filter( selectedProduct => selectedProduct !== productID )\n            ];\n        } else {\n            products = [\n                ...selectedProducts,\n                productID\n            ];\n        }\n        return products;\n    }\n\n    async onCheckItem(event, productID) {\n        const { form, field, onChange } = this.props;\n        let products = await this.getUpdatedProducts(productID);\n        await form.setFieldValue(field.name, products);\n        await onChange(products);\n        return this.setState({\n            selectedProducts: products\n        });\n    }\n\n    showTitle() {\n        const { inCard, dynamicComponent: { title } } = this.props;\n        if(inCard) {\n            return (\n                <div className=\"card-title\">\n                    <span>{title.charAt(0).toUpperCase() + title.slice(1)}</span>\n                </div>\n            );\n        }\n    }\n\n    async onPageChange(page) {\n        const { baseURL, token, clientID, dynamicComponent: { id } } = this.props;\n        const { slug } = this.props.match.params;\n        const { perPage } = this.state;\n        this.setState({\n            isLoading: true\n        });\n        return await fetch(`${baseURL}/details?page_slug=${slug}&elementID=${id}&elementType=productList&client_id=${clientID}&currentPage=${page}&perPage=${perPage}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            })\n            .then( response => response.json() )\n            .then( response => {\n                return this.setState({ \n                    currentPage: response.data.currentPage,\n                    data: response.data.data,\n                    perPage: response.data.perPage,\n                    pageList: response.data.pageList,\n                    isLoading: false\n                });\n            })\n            .catch( error => console.error(error) );\n    }\n\n    async triggerAction(e, action) {\n\n        const { baseURL, token, clientID, user } = this.props;\n        const { slug } = this.props.match.params;\n        const { selectedProducts } = this.state;\n\n        const request = await fetch(`${baseURL}/details?elementID=${action.component}&elementType=modal&page_slug=${slug}&client_id=${clientID}`, {\n            headers: {\n                'Accept': 'application/json',\n                'Authorization': `Bearer ${token}`\n            }\n        });\n        if(!request.ok) return request.statusText;\n        const response = await request.json();\n\n\n        const { components } = response;\n\n\n        const details = components.map( (component, componentIndex) => {\n            const { type } = component;\n            if(type === \"wizard\") {\n                return (\n                    <Validation key={componentIndex} customData={selectedProducts} callback={ (error = false) => this.callback(error) } token={token} baseURL={baseURL} clientID={clientID} user={user} component={component} />\n                );\n            }\n            return null;\n        });\n\n        return this.setState({\n            isOpen: true,\n            modalContent: details\n        });\n    }\n\n    renderFilters() {\n        const { filters } = this.props.dynamicComponent;\n        const filtersMapped = filters.map( (filter, index) => {\n            const { type } = filter;\n\n            if(type === \"range\") {\n                return (\n                    <div className=\"col-md-2\" key={index}>\n                        <FormGroup className=\"mx-3\">\n                            <Label>{filter.label}</Label>\n                            <RangeTooltip\n                                onAfterChange={ (value) => {\n                                    this.setState({\n                                        priceFilter: value\n                                    });\n                                    return this.fetchProductsData(value, this.state.statusFilter, this.state.categoryFilter, this.state.tagFilter, this.state.nameFilter);\n                                } }\n                                min={filter.attributes.min}\n                                max={filter.attributes.max}\n                                className=\"mb-5\"\n                                defaultValue={[filter.attributes.min, filter.attributes.max]}\n                                allowCross={false}\n                                pushable={0}\n                            />\n                        </FormGroup>\n                    </div>\n                );\n            }\n\n            if(type === \"text\") {\n                return (\n                    <div className=\"col-md-3\" key={index}>\n                        <FormGroup className=\"mx-3\">\n                            <Label>{filter.label}</Label>\n                            <Field\n                                className=\"form-control\"\n                                name={filter.name}\n                                id={filter.name}\n                                placeholder={filter.placeholder}\n                                onInput={ (event) => {\n                                    event.persist();\n                                    this.setState({\n                                        nameFilter: event.target.value\n                                    });\n                                    return this.fetchProductsData(this.state.priceFilter, this.state.statusFilter, this.state.categoryFilter, this.state.tagFilter, event.target.value);\n                                } }\n                            />\n                        </FormGroup>\n                    </div>\n                );\n            }\n\n            if(type === \"predefinedDDL\") {\n                const options = filter.attributes.options.map( (option, index) => ({ key: index, label: option[filter.attributes.ddl.label], value: option[filter.attributes.ddl.value] }) );\n                return (\n                    <div className=\"col-md-2\" key={index}>\n                        <FormGroup>\n                            <Label>{filter.label}</Label>\n                            <Field\n                                className=\"form-control\"\n                                name={filter.name}\n                                id={filter.name}\n                                component={SingleSelect}\n                                options={options}\n                                onChange={ (value) => {\n                                    this.setState({\n                                        statusFilter: value.value\n                                    });\n                                    return this.fetchProductsData(this.state.priceFilter, value.value, this.state.categoryFilter, this.state.tagFilter, this.state.nameFilter);\n                                } }\n                            />\n                        </FormGroup>\n                    </div>\n                );\n            }\n\n\n            \n\n            if(type === \"staticDDL\") {\n\n                if(filter.identity === \"category\") {\n                    let optionLabel = filter.attributes.ddl.label;\n                    let optionValue = filter.attributes.ddl.value;\n                    let options = filter.data.map( (dataItem, index) => ({ key: index, label: dataItem[optionLabel], value: dataItem[optionValue] }) );\n                    return (\n                        <div className=\"col-md-2\" key={index}>\n                            <FormGroup>\n                                <Label>{filter.label}</Label>\n                                <Field\n                                    className=\"form-control\"\n                                    name={filter.name}\n                                    id={filter.name}\n                                    component={MultiSelect}\n                                    options={options}\n                                    onChange={ (value) => {\n                                        const values = value.map( v => v.value );\n                                        this.setState({\n                                            categoryFilter: values\n                                        });\n                                        return this.fetchProductsData(this.state.priceFilter, this.state.statusFilter, values, this.state.tagFilter, this.state.nameFilter);\n                                    } }\n                                />\n                            </FormGroup>\n                        </div>\n                    );\n                }\n\n                if(filter.identity === \"tag\") {\n                    let optionLabel = filter.attributes.ddl.label;\n                    let optionValue = filter.attributes.ddl.value;\n                    let options = filter.data.map( (dataItem, index) => ({ key: index, label: dataItem[optionLabel], value: dataItem[optionValue] }) );\n                    return (\n                        <div className=\"col-md-2\" key={index}>\n                            <FormGroup>\n                                <Label>{filter.label}</Label>\n                                <Field\n                                    className=\"form-control\"\n                                    name={filter.name}\n                                    id={filter.name}\n                                    component={MultiSelect}\n                                    options={options}\n                                    onChange={ (value) => {\n                                        const values = value.map( v => v.value );\n                                        this.setState({\n                                            tagFilter: values\n                                        });\n                                        return this.fetchProductsData(this.state.priceFilter, this.state.statusFilter, this.state.categoryFilter, values, this.state.nameFilter);\n                                    } }\n                                />\n                            </FormGroup>\n                        </div>\n                    );\n                }\n\n            }\n\n\n\n            return (\n                <div className=\"col-md-3\" key={index}>\n                    <FormGroup className=\"mx-3\">\n                        <Label>{filter.label}</Label>\n                        <Field\n                            className=\"form-control\"\n                            name={filter.name}\n                            id={filter.name}\n                            placeholder={filter.placeholder}\n                            onInput={ (event) => {\n                                event.persist();\n                                this.setState({\n                                    nameFilter: event.target.value\n                                });\n                                return this.fetchProductsData(this.state.priceFilter, this.state.statusFilter, this.state.categoryFilter, this.state.tagFilter, event.target.value);\n                            } }\n                        />\n                    </FormGroup>\n                </div>\n            );\n               \n\n        });\n        return (\n            <div className=\"row mx-0 justify-content-center align-items-center\">{ filtersMapped }</div>\n        );\n    }\n\n    showExtendedFeatures() {\n        const { selectedProducts, data, dropdownSplitOpen } = this.state;\n        const { showExtendedFeatures, actions } = this.props.dynamicComponent;\n        if(!showExtendedFeatures) {\n            return null;\n        }\n        return (\n            <div className=\"row mx-0 justify-content-between align-items-center\">\n                <div className=\"col-md-11 text-center\">\n                    { this.renderFilters() }\n                </div>\n                <div className=\"col-md-1 text-right\">\n                    <ButtonDropdown isOpen={dropdownSplitOpen} toggle={ () => this.toggleSplit() }>\n                        <div className=\"btn btn-primary btn-lg pl-4 pr-0 check-button check-all\">\n                            <CustomInput\n                                className=\"custom-checkbox mb-0 d-inline-block\"\n                                type=\"checkbox\"\n                                id=\"checkAll\"\n                                checked={selectedProducts.length >= data.length}\n                                onChange={ () => this.handleChangeSelectAll(true) }\n                                label={\n                                    <span\n                                        className={`custom-control-label ${\n                                            selectedProducts.length > 0 &&\n                                            selectedProducts.length < data.length\n                                            ? \"indeterminate\"\n                                            : \"\"\n                                        }`}\n                                    />\n                                }\n                            />\n                        </div>\n                        <DropdownToggle\n                            disabled={selectedProducts.length === 0}\n                            caret\n                            color=\"primary\"\n                            className=\"dropdown-toggle-split btn-lg\"\n                        />\n                        <DropdownMenu right>\n                            {\n                                actions.map( (action, index) => {\n                                    return (\n                                        <DropdownItem\n                                            key={index}\n                                            onClick={ (e) => this.triggerAction(e, action) }>\n                                            {action.label}\n                                        </DropdownItem>\n                                    );\n                                })\n                            }\n                        </DropdownMenu>\n                    </ButtonDropdown>\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        const { hidden, inCard } = this.props;\n        const { currentPage, pageList, data, isOpen, modalContent } = this.state;\n        return (\n            <div>\n                <div className={classnames({ 'card': inCard })}>\n                    <div className={classnames({ 'card-body': inCard })}>\n                        { this.showTitle() }\n                        { this.showExtendedFeatures() }\n                        <div className={classnames('row', 'align-items-stretch', 'mt-5', 'mx-5')}>\n                            <ContextMenuContainer onContextMenu={ (e, data) => null } />\n                            { !hidden ? this.renderProducts() : null }\n                        </div>\n                        <ProductListPagination canNext canPrevious onPageChange={ async (page) => await this.onPageChange(page) } page={currentPage} totalResults={data.length} pages={pageList} />\n                        <div className=\"row justify-content-end mt-5 mx-5\">\n                            { !hidden ? this.renderFunctions() : null }\n                        </div>\n                    </div>\n                </div>\n                <Modal isOpen={isOpen} size=\"xl\" fade={false} toggle={ () => this.toggle() }>\n                    <ModalBody className=\"p-0\">\n                        { modalContent }\n                    </ModalBody>\n                </Modal>\n            </div>\n          \n        );\n    }\n}\n\n\nexport default withRouter(ProductList);"," export const ThemeColors = () => {\n     let rootStyle = getComputedStyle(document.body);\n     return {\n        themeColor1 : rootStyle.getPropertyValue(\"--theme-color-1\").trim(),\n        themeColor2 : rootStyle.getPropertyValue(\"--theme-color-2\").trim(),\n        themeColor3 : rootStyle.getPropertyValue(\"--theme-color-3\").trim(),\n        themeColor4 : rootStyle.getPropertyValue(\"--theme-color-4\").trim(),\n        themeColor5 : rootStyle.getPropertyValue(\"--theme-color-5\").trim(),\n        themeColor6 : rootStyle.getPropertyValue(\"--theme-color-6\").trim(),\n        themeColor1_10 : rootStyle.getPropertyValue(\"--theme-color-1-10\").trim(),\n        themeColor2_10 : rootStyle.getPropertyValue(\"--theme-color-2-10\").trim(),\n        themeColor3_10 : rootStyle.getPropertyValue(\"--theme-color-3-10\").trim(),\n        themeColor4_10 : rootStyle.getPropertyValue(\"--theme-color-3-10\").trim(),\n        themeColor5_10 : rootStyle.getPropertyValue(\"--theme-color-3-10\").trim(),\n        themeColor6_10 : rootStyle.getPropertyValue(\"--theme-color-3-10\").trim(),\n        primaryColor: rootStyle.getPropertyValue(\"--primary-color\").trim(),\n        foregroundColor: rootStyle.getPropertyValue(\"--foreground-color\").trim(),\n        separatorColor: rootStyle.getPropertyValue(\"--separator-color\").trim()\n    }\n}","\nimport { ThemeColors } from \"../../helpers/ThemeColors\";\n\nexport const chartTooltip = {\n    backgroundColor: ThemeColors().foregroundColor,\n    titleFontColor: ThemeColors().primaryColor,\n    borderColor: ThemeColors().separatorColor,\n    borderWidth: 0.5,\n    bodyFontColor: ThemeColors().primaryColor,\n    bodySpacing: 10,\n    xPadding: 15,\n    yPadding: 15,\n    cornerRadius: 0.15,\n  }\n  \n  export const centerTextPlugin = {\n    afterDatasetsUpdate: function (chart) {},\n    beforeDraw: function (chart) {\n      var width = chart.chartArea.right\n      var height = chart.chartArea.bottom\n      var ctx = chart.chart.ctx\n      ctx.restore()\n  \n      var activeLabel = chart.data.labels[0]\n      var activeValue = chart.data.datasets[0].data[0]\n      var dataset = chart.data.datasets[0]\n      var meta = dataset._meta[Object.keys(dataset._meta)[0]]\n      var total = meta.total\n  \n      var activePercentage = parseFloat(((activeValue / total) * 100).toFixed(1))\n      activePercentage = chart.legend.legendItems[0].hidden\n        ? 0\n        : activePercentage\n  \n      if (chart.pointAvailable) {\n        activeLabel = chart.data.labels[chart.pointIndex]\n        activeValue =\n          chart.data.datasets[chart.pointDataIndex].data[chart.pointIndex]\n  \n        dataset = chart.data.datasets[chart.pointDataIndex]\n        meta = dataset._meta[Object.keys(dataset._meta)[0]]\n        total = meta.total\n        activePercentage = parseFloat(((activeValue / total) * 100).toFixed(1))\n        activePercentage = chart.legend.legendItems[chart.pointIndex].hidden\n          ? 0\n          : activePercentage\n      }\n  \n      ctx.font = '36px Nunito, sans-serif'\n      ctx.fillStyle = ThemeColors().primaryColor\n      ctx.textBaseline = 'middle'\n  \n      var text = activePercentage + '%'\n      var textX = Math.round((width - ctx.measureText(text).width) / 2)\n      var textY = height / 2\n      ctx.fillText(text, textX, textY)\n  \n      ctx.font = '14px Nunito, sans-serif'\n      ctx.textBaseline = 'middle'\n  \n      var text2 = activeLabel\n      var textX2 = Math.round((width - ctx.measureText(text2).width) / 2)\n      var textY2 = height / 2 - 30\n      ctx.fillText(text2, textX2, textY2)\n  \n      ctx.save()\n    },\n    beforeEvent: function (chart, event, options) {\n      var firstPoint = chart.getElementAtEvent(event)[0]\n  \n      if (firstPoint) {\n        chart.pointIndex = firstPoint._index\n        chart.pointDataIndex = firstPoint._datasetIndex\n        chart.pointAvailable = true\n      }\n    }\n  }\n  ","import { chartTooltip } from './util'\n\nexport const lineChartOptions = {\n  legend: {\n    display: false\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  tooltips: chartTooltip,\n  plugins: {\n    datalabels: {\n      display: false\n    }\n  },\n  scales: {\n    yAxes: [\n      {\n        gridLines: {\n          display: true,\n          lineWidth: 1,\n          color: 'rgba(0,0,0,0.1)',\n          drawBorder: false\n        },\n        ticks: {\n          beginAtZero: true,\n          // stepSize: 5,\n          // min: 50,\n          // max: 70,\n          padding: 20\n        }\n      }\n    ],\n    xAxes: [\n      {\n        gridLines: {\n          display: false\n        }\n      }\n    ]\n  }\n}\nexport const polarAreaChartOptions = {\n  legend: {\n    position: 'bottom',\n    labels: {\n      padding: 30,\n      usePointStyle: true,\n      fontSize: 12\n    }\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  scale: {\n    ticks: {\n      display: false\n    }\n  },\n  plugins: {\n    datalabels: {\n      display: false\n    }\n  },\n  tooltips: chartTooltip\n}\n\nexport const areaChartOptions = {\n  legend: {\n    display: false\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  tooltips: chartTooltip,\n  scales: {\n    yAxes: [\n      {\n        gridLines: {\n          display: true,\n          lineWidth: 1,\n          color: 'rgba(0,0,0,0.1)',\n          drawBorder: false\n        },\n        ticks: {\n          beginAtZero: true,\n          // stepSize: 5,\n          // min: 50,\n          // max: 70,\n          padding: 20\n        }\n      }\n    ],\n    xAxes: [\n      {\n        gridLines: {\n          display: false\n        }\n      }\n    ]\n  }\n}\n\nexport const scatterChartOptions = {\n  legend: {\n    position: 'bottom',\n    labels: {\n      padding: 30,\n      usePointStyle: true,\n      fontSize: 12\n    }\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  scales: {\n    yAxes: [\n      {\n        gridLines: {\n          display: true,\n          lineWidth: 1,\n          color: 'rgba(0,0,0,0.1)',\n          drawBorder: false\n        },\n        ticks: {\n          beginAtZero: true,\n          stepSize: 20,\n          min: -80,\n          max: 80,\n          padding: 20\n        }\n      }\n    ],\n    xAxes: [\n      {\n        gridLines: {\n          display: true,\n          lineWidth: 1,\n          color: 'rgba(0,0,0,0.1)'\n        }\n      }\n    ]\n  },\n  tooltips: chartTooltip\n}\n\nexport const barChartOptions = {\n  legend: {\n    position: 'bottom',\n    labels: {\n      padding: 30,\n      usePointStyle: true,\n      fontSize: 12\n    }\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  scales: {\n    yAxes: [\n      {\n        gridLines: {\n          display: true,\n          lineWidth: 1,\n          color: 'rgba(0,0,0,0.1)',\n          drawBorder: false\n        },\n        ticks: {\n          beginAtZero: true,\n          // stepSize: 100,\n          // min: 300,\n          // max: 800,\n          padding: 20\n        }\n      }\n    ],\n    xAxes: [\n      {\n        gridLines: {\n          display: false\n        }\n      }\n    ]\n  },\n  tooltips: chartTooltip\n}\n\nexport const radarChartOptions = {\n  legend: {\n    position: 'bottom',\n    labels: {\n      padding: 30,\n      usePointStyle: true,\n      fontSize: 12\n    }\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  scale: {\n    ticks: {\n      display: false\n    }\n  },\n  tooltips: chartTooltip\n}\n\nexport const pieChartOptions = {\n  legend: {\n    position: 'bottom',\n    labels: {\n      padding: 20,\n      usePointStyle: true,\n      fontSize: 12\n    }\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  title: {\n    display: false\n  },\n  layout: {\n    padding: {\n      bottom: 20\n    }\n  },\n  tooltips: chartTooltip\n}\n\nexport const doughnutChartOptions = {\n  legend: {\n    position: 'bottom',\n    labels: {\n      padding: 30,\n      usePointStyle: true,\n      fontSize: 12\n    }\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  title: {\n    display: false\n  },\n  cutoutPercentage: 80,\n  layout: {\n    padding: {\n      bottom: 20\n    }\n  },\n  tooltips: chartTooltip\n}\n\nexport const smallLineChartOptions = {\n  layout: {\n    padding: {\n      left: 5,\n      right: 5,\n      top: 10,\n      bottom: 10\n    }\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  legend: {\n    display: false\n  },\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true\n        },\n        display: false\n      }\n    ],\n    xAxes: [\n      {\n        display: false\n      }\n    ]\n  }\n}\n","import React from \"react\";\nimport ChartComponent, { Chart } from \"react-chartjs-2\";\nimport moment from 'moment';\nimport classNames from 'classnames';\nimport { areaChartOptions } from \"./config\";\n\n\n\nimport { Modal, ModalBody } from 'reactstrap';\nimport {\n  AreaChart,\n  LineChart,\n  BarChart,\n  PieChart,\n  DoughnutChart,\n  Table,\n  Card,\n  UserCardGroup,\n  ProductCardList,\n  ProductList,\n  ProfileCard,\n  Calendar,\n  ThumbsCarousel,\n  Search,\n  Tabs\n} from '../misc/index';\nimport Validation from '../misc/wizard/Validation';\n\n\n\nexport default class Area extends React.Component {\n\n  level = 0\n\n  \n  \n  state = {\n    modalOpen: false,\n    elements: []    \n  }\n\n  colors = [\n    {\n      \"backgroundColor\": \"rgba(136, 10, 31, 0.1)\",\n      \"borderColor\": \"rgb(136, 10, 31)\",\n    },\n    {\n      backgroundColor: \"rgb(69, 86, 172, 0.1)\",\n      borderColor: \"rgb(69, 86, 172)\"\n    }\n  ];\n\n  \n  toggle() {\n    const { modalOpen } = this.state;\n    const { elements } = this.props.component;\n    if(Array.isArray(elements)) {\n        return this.setState({\n            modalOpen: !modalOpen,\n            elements\n        });\n    }\n}\n\n\nrenderElements() {\n\n  const { elements } = this.state;\n  const transparent = false;\n\n  const components = elements.map( (element, index) => {\n      const { type } = element;\n      if(type === \"chart\") {\n          const { kind } = element;\n          if(kind === \"pie\") {\n              return (\n                  <div className={ elements.length === 1 ? \"col\" : (index === 0 ? \"col-md-7\" : \"col-md-5\") } key={index}>\n                      <PieChart className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={element} />\n                  </div>\n              );\n          }\n\n          if(kind === \"bar\") {\n              return (\n                  <div className={ elements.length === 1 ? \"col\" : (index === 0 ? \"col-md-7\" : \"col-md-5\") } key={index}>\n                      <BarChart className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={element} />\n                  </div>\n              );\n          }\n\n          if(kind === \"area\") {\n              return (\n                  <div className={ elements.length === 1 ? \"col\" : (index === 0 ? \"col-md-7\" : \"col-md-5\") } key={index}>\n                      <AreaChart className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={element} />\n                  </div>\n              );\n          }\n\n          if(kind === \"line\") {\n              return (\n                  <div className={ elements.length === 1 ? \"col\" : (index === 0 ? \"col-md-7\" : \"col-md-5\") } key={index}>\n                      <LineChart className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={element} />\n                  </div>\n              );\n          }\n\n          if(kind === \"doughnut\") {\n              return (\n                  <div className={ elements.length === 1 ? \"col\" : (index === 0 ? \"col-md-7\" : \"col-md-5\") } key={index}>\n                      <DoughnutChart className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={element} />\n                  </div>\n              );\n          }\n      }\n\n      if(type === \"calendar\") {\n          return (\n              <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                  <Calendar component={element} />\n              </div>\n          );\n      }\n\n      if(type === \"table\") {\n          return (\n              <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                  <Table component={element} />\n              </div>\n          );\n      }\n\n      if(type === \"card\") {\n          return (\n              <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                  <Card {...this.props} component={element} />\n              </div>\n          );\n        }\n\n        if(type === \"wizard\") {\n          return (\n              <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                  <Validation {...this.props} component={element} />\n              </div>\n          );\n        }\n\n        if(type === \"productCardList\") {\n          return (\n              <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                  <ProductCardList inCard={true} {...this.props} component={element} />\n              </div>\n          );\n        }\n\n        if(type === \"productList\") {\n          return (\n              <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                  <ProductList inCard={true} {...this.props} dynamicComponent={element} />\n              </div>\n          );\n        }\n\n        if(type === \"userCard\") {\n          return (\n              <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                  <UserCardGroup inCard={true} {...this.props} component={element} />\n              </div>\n          );\n        }\n\n        if(type === \"profileCard\") {\n          return (\n              <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                  <ProfileCard {...this.props} component={element} />\n              </div>\n          );\n        }\n        \n        if(type === \"thumbCarousel\") {\n          const data = element.data.map( dataItem => ({ id: dataItem.id, img: dataItem.img }) );\n            return (\n              <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                  <ThumbsCarousel {...this.props} data={data} component={element} />\n              </div>\n          );\n      }\n\n      if(type === \"search\") {\n          return (\n              <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                  <Search {...this.props} component={element} />\n              </div>\n          );\n      }\n\n      \n      if(type === \"tabs\") {\n          return (\n              <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                  <Tabs {...this.props} component={element} />\n              </div>\n          );\n      }\n\n      return null;\n  });\n\n  return components;\n}\n\n  constructor(props) {\n    super(props);\n    this.chart_instance = React.createRef();\n    if (this.props.shadow) {\n      Chart.defaults.lineWithShadow = Chart.defaults.line;\n      Chart.controllers.lineWithShadow = Chart.controllers.line.extend({\n        draw: function(ease) {\n          Chart.controllers.line.prototype.draw.call(this, ease);\n          var ctx = this.chart.ctx;\n          ctx.save();\n          ctx.shadowColor = \"rgba(0,0,0,0.15)\";\n          ctx.shadowBlur = 10;\n          ctx.shadowOffsetX = 0;\n          ctx.shadowOffsetY = 10;\n          ctx.responsive = true;\n          ctx.stroke();\n          Chart.controllers.line.prototype.draw.apply(this, arguments);\n          ctx.restore();\n        }\n      });\n    }\n  }\n\n\n  handleClick = (event, originalData) => {\n    const { level } = this;\n    if(level === 0) {\n      if(event[0]) {\n        this.level = 1;\n        event = event[0];\n        let dataset = originalData[event._datasetIndex];\n        let chartDataset = this.chart_instance.current.chartInstance.data.datasets[event._datasetIndex];\n        let data = dataset.data;\n        if(Array.isArray(data)) {\n          let labels = data.map( (dataItem) => moment(dataItem[dataset.xColumn]).format(dataItem.timeIdentifier === \"week\" ? \"dddd\" : \"MMM YYYY\") );\n          data = data.map( dataItem => dataItem[dataset.yColumn] );\n          this.chart_instance.current.chartInstance.data.labels = labels;\n          this.chart_instance.current.chartInstance.data.datasets = [\n            {\n              ...chartDataset,\n              data: data\n            }\n          ];\n          this.chart_instance.current.chartInstance.update({\n              duration: 800,\n              lazy: true,\n              easing: 'easeOutBounce'\n          });\n        }\n      }\n    } else {\n      this.level = 0;\n      let { component: { data } } = this.props;\n      let modifiedData = {\n        labels: [ ...new Set(data.map( dataItem => dataItem.data.map(realDataItem => moment(realDataItem[dataItem.xColumn]).format(dataItem.timeIdentifier === \"week\" ? \"dddd\" : \"MMM YYYY\")) ).flat(2)) ],\n        datasets: data.map( (dataItem, colorIndex) => {\n            return {\n              backgroundColor: this.colors[colorIndex].backgroundColor,\n              borderColor: this.colors[colorIndex].borderColor,\n              borderWidth: 2,\n              pointBackgroundColor: \"#fff\",\n              pointBorderColor: this.colors[colorIndex].borderColor,\n              pointBorderWidth: 2,\n              pointHoverBackgroundColor: this.colors[colorIndex].borderColor,\n              pointHoverBorderColor: \"#fff\",\n              pointHoverRadius: 5,\n              pointRadius: 4,\n              label: dataItem.label,\n              data: dataItem.data.map( (realDataItem) => {\n                let column = realDataItem[dataItem.yColumn];\n                if(Array.isArray(column)) {\n                  return column[0][dataItem.yColumn];\n                }\n                return column;\n              })\n            };\n        })\n      };\n      this.chart_instance.current.chartInstance.data = modifiedData;\n      this.chart_instance.current.chartInstance.update({\n          duration: 800,\n          lazy: true,\n          easing: 'easeOutBounce'\n      });\n    }\n    this.toggle();\n\n  }\n\n  render() {\n    const { shadow, component: { data, legend } } = this.props;\n    const { modalOpen, elements } = this.state;\n\n\n    let modifiedData = {\n      labels: [ ...new Set(data.map( dataItem => dataItem.data.map(realDataItem => moment(realDataItem[dataItem.xColumn]).format(dataItem.timeIdentifier === \"week\" ? \"dddd\" : \"MMM YYYY\")) ).flat(2)) ],\n      datasets: data.map( (dataItem, colorIndex) => {\n          return {\n            backgroundColor: this.colors[colorIndex].backgroundColor,\n            borderColor: this.colors[colorIndex].borderColor,\n            borderWidth: 2,\n            pointBackgroundColor: \"#fff\",\n            pointBorderColor: this.colors[colorIndex].borderColor,\n            pointBorderWidth: 2,\n            pointHoverBackgroundColor: this.colors[colorIndex].borderColor,\n            pointHoverBorderColor: \"#fff\",\n            pointHoverRadius: 5,\n            pointRadius: 4,\n            label: dataItem.label,\n            data: dataItem.data.map( (realDataItem) => {\n              let column = realDataItem[dataItem.yColumn];\n              if(Array.isArray(column)) {\n                return column[0][dataItem.yColumn];\n              }\n              return column;\n            })\n          };\n      })\n    };\n\n    return (\n      <div className={classNames('card', this.props.className)}>\n        <div className=\"card-body\">\n          <div className=\"card-title\">\n            <span>{legend.charAt(0).toUpperCase() + legend.slice(1)}</span>\n          </div>\n          <div>\n            <ChartComponent\n              height={400}\n              ref={this.chart_instance}\n              type={shadow ? \"lineWithShadow\" : \"line\"}\n              options={{\n                ...areaChartOptions\n              }}\n              getElementAtEvent={ (event) => this.handleClick(event, data) }\n              data={modifiedData}\n            />\n          </div>\n          \n          <Modal isOpen={modalOpen} size=\"lg\" toggle={ () => this.toggle() }>\n              <ModalBody className=\"p-4\">\n                  { elements.length === 0 ? <div class=\"loading d-block mx-auto position-static\" /> : null }\n                  { this.renderElements() }\n              </ModalBody>\n          </Modal>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ChartComponent, { Chart } from \"react-chartjs-2\";\nimport moment from 'moment';\nimport classNames from 'classnames';\nimport { barChartOptions } from \"./config\";\n\nimport { Modal, ModalBody } from 'reactstrap';\nimport {\n  AreaChart,\n  LineChart,\n  BarChart,\n  PieChart,\n  DoughnutChart,\n  Table,\n  Card,\n  UserCardGroup,\n  ProductCardList,\n  ProductList,\n  ProfileCard,\n  Calendar,\n  ThumbsCarousel,\n  Search,\n  Tabs\n} from '../misc/index';\nimport Validation from '../misc/wizard/Validation';\n\nexport default class Bar extends React.Component {\n\n  level = 0;\n\n  state = {\n    modalOpen: false,\n    elements: []    \n  }\n\n  colors = [\n    {\n      \"backgroundColor\": \"rgba(136, 10, 31, 0.1)\",\n      \"borderColor\": \"rgb(136, 10, 31)\",\n    },\n    {\n      backgroundColor: \"rgb(69, 86, 172, 0.1)\",\n      borderColor: \"rgb(69, 86, 172)\"\n    }\n  ];\n\n  constructor(props) {\n    super(props);\n    this.chart_instance = React.createRef();\n    if (this.props.shadow) {\n      Chart.defaults.barWithShadow = Chart.defaults.bar;\n      Chart.controllers.barWithShadow = Chart.controllers.bar.extend({\n        draw: function(ease) {\n          Chart.controllers.bar.prototype.draw.call(this, ease);\n          var ctx = this.chart.ctx;\n          ctx.save();\n          ctx.shadowColor = \"rgba(0,0,0,0.2)\";\n          ctx.shadowBlur = 7;\n          ctx.shadowOffsetX = 5;\n          ctx.shadowOffsetY = 7;\n          ctx.responsive = true;\n          Chart.controllers.bar.prototype.draw.apply(this, arguments);\n          ctx.restore();\n        }\n      });\n    }\n  }\n\n  toggle() {\n    const { modalOpen } = this.state;\n    const { elements } = this.props.component;\n    if(Array.isArray(elements)) {\n        return this.setState({\n            modalOpen: !modalOpen,\n            elements\n        });\n    }\n}\n\n  handleClick = (event, originalData) => {\n    const { level } = this;\n    if(level === 0) {\n      if(event[0]) {\n        this.level = 1;\n        event = event[0];\n        let dataset = originalData[event._datasetIndex];\n        let chartDataset = this.chart_instance.current.chartInstance.data.datasets[event._datasetIndex];\n        let data = dataset.data;\n        if(Array.isArray(data)) {\n          let labels = data.map( (dataItem) => moment(dataItem[dataset.xColumn]).format(\"MMM YYYY\") );\n          data = data.map( dataItem => dataItem[dataset.yColumn] );\n          this.chart_instance.current.chartInstance.data.labels = labels;\n          this.chart_instance.current.chartInstance.data.datasets = [\n            {\n              ...chartDataset,\n              data: data\n            }\n          ];\n          this.chart_instance.current.chartInstance.update({\n              duration: 800,\n              lazy: true,\n              easing: 'easeOutBounce'\n          });\n        }\n      }\n    } else {\n      this.level = 0;\n      let { component: { data } } = this.props;\n      let modifiedData = {\n        labels: [ ...new Set(data.map( dataItem => dataItem.data.map(realDataItem => moment(realDataItem[dataItem.xColumn]).format(\"MMM YYYY\")) ).flat(2)) ],\n        datasets: data.map( (dataItem, colorIndex) => {\n            return {\n              backgroundColor: this.colors[colorIndex].backgroundColor,\n              borderColor: this.colors[colorIndex].borderColor,\n              borderWidth: 2,\n              pointBackgroundColor: \"#fff\",\n              pointBorderColor: this.colors[colorIndex].borderColor,\n              pointBorderWidth: 2,\n              pointHoverBackgroundColor: this.colors[colorIndex].borderColor,\n              pointHoverBorderColor: \"#fff\",\n              pointHoverRadius: 5,\n              pointRadius: 4,\n              label: dataItem.label,\n              data: dataItem.data.map( (realDataItem) => {\n                let column = realDataItem[dataItem.yColumn];\n                if(Array.isArray(column)) {\n                  return column[0][dataItem.yColumn];\n                }\n                return column;\n              })\n            };\n        })\n      };\n      this.chart_instance.current.chartInstance.data = modifiedData;\n      this.chart_instance.current.chartInstance.update({\n          duration: 800,\n          lazy: true,\n          easing: 'easeOutBounce'\n      });\n    }\n    this.toggle();\n  }\n\n  \n  renderElements() {\n\n    const { elements } = this.state;\n    const transparent = false;\n\n    const components = elements.map( (element, index) => {\n        const { type } = element;\n        if(type === \"chart\") {\n            const { kind } = element;\n            if(kind === \"pie\") {\n                return (\n                    <div className={ elements.length === 1 ? \"col\" : (index === 0 ? \"col-md-7\" : \"col-md-5\") } key={index}>\n                        <PieChart className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={element} />\n                    </div>\n                );\n            }\n\n            if(kind === \"bar\") {\n                return (\n                    <div className={ elements.length === 1 ? \"col\" : (index === 0 ? \"col-md-7\" : \"col-md-5\") } key={index}>\n                        <BarChart className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={element} />\n                    </div>\n                );\n            }\n\n            if(kind === \"area\") {\n                return (\n                    <div className={ elements.length === 1 ? \"col\" : (index === 0 ? \"col-md-7\" : \"col-md-5\") } key={index}>\n                        <AreaChart className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={element} />\n                    </div>\n                );\n            }\n\n            if(kind === \"line\") {\n                return (\n                    <div className={ elements.length === 1 ? \"col\" : (index === 0 ? \"col-md-7\" : \"col-md-5\") } key={index}>\n                        <LineChart className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={element} />\n                    </div>\n                );\n            }\n\n            if(kind === \"doughnut\") {\n                return (\n                    <div className={ elements.length === 1 ? \"col\" : (index === 0 ? \"col-md-7\" : \"col-md-5\") } key={index}>\n                        <DoughnutChart className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={element} />\n                    </div>\n                );\n            }\n        }\n\n        if(type === \"calendar\") {\n            return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <Calendar component={element} />\n                </div>\n            );\n        }\n\n        if(type === \"table\") {\n            return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <Table component={element} />\n                </div>\n            );\n        }\n\n        if(type === \"card\") {\n            return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <Card {...this.props} component={element} />\n                </div>\n            );\n          }\n\n          if(type === \"wizard\") {\n            return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <Validation {...this.props} component={element} />\n                </div>\n            );\n          }\n\n          if(type === \"productCardList\") {\n            return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <ProductCardList inCard={true} {...this.props} component={element} />\n                </div>\n            );\n          }\n\n          if(type === \"productList\") {\n            return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <ProductList inCard={true} {...this.props} dynamicComponent={element} />\n                </div>\n            );\n          }\n\n          if(type === \"userCard\") {\n            return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <UserCardGroup inCard={true} {...this.props} component={element} />\n                </div>\n            );\n          }\n\n          if(type === \"profileCard\") {\n            return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <ProfileCard {...this.props} component={element} />\n                </div>\n            );\n          }\n          \n          if(type === \"thumbCarousel\") {\n            const data = element.data.map( dataItem => ({ id: dataItem.id, img: dataItem.img }) );\n              return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <ThumbsCarousel {...this.props} data={data} component={element} />\n                </div>\n            );\n        }\n\n        if(type === \"search\") {\n            return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <Search {...this.props} component={element} />\n                </div>\n            );\n        }\n\n        \n        if(type === \"tabs\") {\n            return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <Tabs {...this.props} component={element} />\n                </div>\n            );\n        }\n\n        return null;\n    });\n\n    return components;\n}\n\n  render() {\n    const { shadow, component: { data, legend } } = this.props;\n    const { modalOpen, elements } = this.state;\n    let modifiedData = {\n      labels: [ ...new Set(data.map( dataItem => dataItem.data.map(realDataItem => moment(realDataItem[dataItem.xColumn]).format(\"MMM YYYY\")) ).flat(2)) ],\n      datasets: data.map( (dataItem, colorIndex) => {\n          return {\n            backgroundColor: this.colors[colorIndex].backgroundColor,\n            borderColor: this.colors[colorIndex].borderColor,\n            borderWidth: 2,\n            pointBackgroundColor: \"#fff\",\n            pointBorderColor: this.colors[colorIndex].borderColor,\n            pointBorderWidth: 2,\n            pointHoverBackgroundColor: this.colors[colorIndex].borderColor,\n            pointHoverBorderColor: \"#fff\",\n            pointHoverRadius: 5,\n            pointRadius: 4,\n            label: dataItem.label,\n            data: dataItem.data.map( (realDataItem) => {\n              let column = realDataItem[dataItem.yColumn];\n              if(Array.isArray(column)) {\n                return column[0][dataItem.yColumn];\n              }\n              return column;\n            })\n          };\n      })\n    };\n    return (\n      <div className={classNames('card', 'my-5', this.props.className)}>\n        <div className=\"card-body\">\n          <div className=\"card-title\">\n          <span>{legend.charAt(0).toUpperCase() + legend.slice(1)}</span>\n          </div>\n          <div>\n            <ChartComponent\n              height={400}\n              ref={this.chart_instance}\n              type={shadow ? \"barWithShadow\" : \"bar\"}\n              options={{\n                ...barChartOptions\n              }}\n              getElementAtEvent={ (event) => this.handleClick(event, data) }\n              data={modifiedData}\n            />\n          </div>\n          \n\n          <Modal isOpen={modalOpen} size=\"lg\" toggle={ () => this.toggle() }>\n              <ModalBody className=\"p-4\">\n                  { elements.length === 0 ? <div class=\"loading d-block mx-auto position-static\" /> : null }\n                  { this.renderElements() }\n              </ModalBody>\n          </Modal>\n\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ChartComponent, { Chart } from \"react-chartjs-2\";\nimport moment from 'moment';\nimport classNames from 'classnames';\n\nimport { centerTextPlugin } from \"./util\";\nimport { doughnutChartOptions } from \"./config\";\n\n\nimport { Modal, ModalBody } from 'reactstrap';\nimport {\n  AreaChart,\n  LineChart,\n  BarChart,\n  PieChart,\n  DoughnutChart,\n  Table,\n  Card,\n  UserCardGroup,\n  ProductCardList,\n  ProductList,\n  ProfileCard,\n  Calendar,\n  ThumbsCarousel,\n  Search,\n  Tabs\n} from '../misc/index';\nimport Validation from '../misc/wizard/Validation';\n\n\nexport default class Doughnut extends React.Component {\n\n  level = 0;\n\n  \n  state = {\n    modalOpen: false,\n    elements: []    \n  }\n\n\n  backgroundColors = [\n    \"rgba(136, 10, 31, 0.2)\",\n    \"rgb(69, 86, 172, 0.2)\",\n    \"rgba(136, 10, 31, 0.2)\",\n    \"rgb(69, 86, 172, 0.2)\",\n    \"rgba(136, 10, 31, 0.2)\",\n    \"rgb(69, 86, 172, 0.2)\",\n    \"rgba(136, 10, 31, 0.2)\",\n    \"rgb(69, 86, 172, 0.2)\",\n    \"rgba(136, 10, 31, 0.2)\",\n    \"rgb(69, 86, 172, 0.2)\",\n    \"rgba(136, 10, 31, 0.2)\",\n    \"rgb(69, 86, 172, 0.2)\",\n    \"rgba(136, 10, 31, 0.2)\",\n    \"rgb(69, 86, 172, 0.2)\"\n  ];\n\n  borderColors = [\n    \"rgb(136, 10, 31)\",\n    \"rgb(69, 86, 172)\",\n    \"rgb(136, 10, 31)\",\n    \"rgb(69, 86, 172)\",\n    \"rgb(136, 10, 31)\",\n    \"rgb(69, 86, 172)\",\n    \"rgb(136, 10, 31)\",\n    \"rgb(69, 86, 172)\",\n    \"rgb(136, 10, 31)\",\n    \"rgb(69, 86, 172)\",\n    \"rgb(136, 10, 31)\",\n    \"rgb(69, 86, 172)\",\n    \"rgb(136, 10, 31)\",\n    \"rgb(69, 86, 172)\",\n    \"rgb(136, 10, 31)\",\n    \"rgb(69, 86, 172)\"\n  ];\n\n  \n  toggle() {\n    const { modalOpen } = this.state;\n    const { elements } = this.props.component;\n    if(Array.isArray(elements)) {\n        return this.setState({\n            modalOpen: !modalOpen,\n            elements\n        });\n    }\n}\n\n  constructor(props) {\n    super(props);\n    this.chart_instance = React.createRef();\n    if (this.props.shadow) {\n      Chart.defaults.doughnutWithShadow = Chart.defaults.doughnut;\n      Chart.controllers.doughnutWithShadow = Chart.controllers.doughnut.extend({\n        draw: function(ease) {\n          Chart.controllers.doughnut.prototype.draw.call(this, ease);\n          let ctx = this.chart.chart.ctx;\n          ctx.save();\n          ctx.shadowColor = \"rgba(0,0,0,0.15)\";\n          ctx.shadowBlur = 10;\n          ctx.shadowOffsetX = 0;\n          ctx.shadowOffsetY = 10;\n          ctx.responsive = true;\n          Chart.controllers.doughnut.prototype.draw.apply(this, arguments);\n          ctx.restore();\n        }\n      });\n    }\n  }\n\n  \n  \n  renderElements() {\n\n    const { elements } = this.state;\n    const transparent = false;\n\n    const components = elements.map( (element, index) => {\n        const { type } = element;\n        if(type === \"chart\") {\n            const { kind } = element;\n            if(kind === \"pie\") {\n                return (\n                    <div className={ elements.length === 1 ? \"col\" : (index === 0 ? \"col-md-7\" : \"col-md-5\") } key={index}>\n                        <PieChart className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={element} />\n                    </div>\n                );\n            }\n\n            if(kind === \"bar\") {\n                return (\n                    <div className={ elements.length === 1 ? \"col\" : (index === 0 ? \"col-md-7\" : \"col-md-5\") } key={index}>\n                        <BarChart className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={element} />\n                    </div>\n                );\n            }\n\n            if(kind === \"area\") {\n                return (\n                    <div className={ elements.length === 1 ? \"col\" : (index === 0 ? \"col-md-7\" : \"col-md-5\") } key={index}>\n                        <AreaChart className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={element} />\n                    </div>\n                );\n            }\n\n            if(kind === \"line\") {\n                return (\n                    <div className={ elements.length === 1 ? \"col\" : (index === 0 ? \"col-md-7\" : \"col-md-5\") } key={index}>\n                        <LineChart className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={element} />\n                    </div>\n                );\n            }\n\n            if(kind === \"doughnut\") {\n                return (\n                    <div className={ elements.length === 1 ? \"col\" : (index === 0 ? \"col-md-7\" : \"col-md-5\") } key={index}>\n                        <DoughnutChart className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={element} />\n                    </div>\n                );\n            }\n        }\n\n        if(type === \"calendar\") {\n            return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <Calendar component={element} />\n                </div>\n            );\n        }\n\n        if(type === \"table\") {\n            return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <Table component={element} />\n                </div>\n            );\n        }\n\n        if(type === \"card\") {\n            return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <Card {...this.props} component={element} />\n                </div>\n            );\n          }\n\n          if(type === \"wizard\") {\n            return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <Validation {...this.props} component={element} />\n                </div>\n            );\n          }\n\n          if(type === \"productCardList\") {\n            return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <ProductCardList inCard={true} {...this.props} component={element} />\n                </div>\n            );\n          }\n\n          if(type === \"productList\") {\n            return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <ProductList inCard={true} {...this.props} dynamicComponent={element} />\n                </div>\n            );\n          }\n\n          if(type === \"userCard\") {\n            return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <UserCardGroup inCard={true} {...this.props} component={element} />\n                </div>\n            );\n          }\n\n          if(type === \"profileCard\") {\n            return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <ProfileCard {...this.props} component={element} />\n                </div>\n            );\n          }\n          \n          if(type === \"thumbCarousel\") {\n            const data = element.data.map( dataItem => ({ id: dataItem.id, img: dataItem.img }) );\n              return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <ThumbsCarousel {...this.props} data={data} component={element} />\n                </div>\n            );\n        }\n\n        if(type === \"search\") {\n            return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <Search {...this.props} component={element} />\n                </div>\n            );\n        }\n\n        \n        if(type === \"tabs\") {\n            return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <Tabs {...this.props} component={element} />\n                </div>\n            );\n        }\n\n        return null;\n    });\n\n    return components;\n}\n\n  handleClick = (event, originalData) => {\n    const { level } = this;\n    if(level === 0) {\n      if(event[0]) {\n        this.level = 1;\n        event = event[0];\n        let dataset = originalData[event._datasetIndex];\n        let chartDataset = this.chart_instance.current.chartInstance.data.datasets[event._datasetIndex];\n        let data = dataset.data;\n        if(Array.isArray(data)) {\n          let labels = data.map( (dataItem) => moment(dataItem[dataset.xColumn]).format(dataItem.timeIdentifier === \"week\" ? \"dddd\" : \"MMM YYYY\") );\n          data = data.map( dataItem => dataItem[dataset.yColumn] );\n          this.chart_instance.current.chartInstance.data.labels = labels;\n          this.chart_instance.current.chartInstance.data.datasets = [\n            {\n              ...chartDataset,\n              data: data\n            }\n          ];\n          this.chart_instance.current.chartInstance.update({\n              duration: 800,\n              lazy: true,\n              easing: 'easeOutBounce'\n          });\n        }\n      }\n    } else {\n      this.level = 0;\n      let { component: { data } } = this.props;\n      let modifiedData = {\n        labels: [ ...new Set(data.map( dataItem => dataItem.data.map(realDataItem => moment(realDataItem[dataItem.xColumn]).format(dataItem.timeIdentifier === \"week\" ? \"dddd\" : \"MMM YYYY\")) ).flat(2)) ],\n        datasets: data.map( (dataItem, colorIndex) => {\n            return {\n              backgroundColor: this.backgroundColors,\n              borderColor: this.borderColors,\n              borderWidth: 2,\n              pointBackgroundColor: \"#fff\",\n              pointBorderColor: this.borderColors,\n              pointBorderWidth: 2,\n              pointHoverBackgroundColor: this.borderColors,\n              pointHoverBorderColor: \"#fff\",\n              pointHoverRadius: 5,\n              pointRadius: 4,\n              label: dataItem.label,\n              data: dataItem.data.map( (realDataItem) => {\n                let column = realDataItem[dataItem.yColumn];\n                if(Array.isArray(column)) {\n                  return column[0][dataItem.yColumn];\n                }\n                return column;\n              })\n            };\n        })\n      };\n      this.chart_instance.current.chartInstance.data = modifiedData;\n      this.chart_instance.current.chartInstance.update({\n          duration: 800,\n          lazy: true,\n          easing: 'easeOutBounce'\n      });\n    }\n    this.toggle();\n  }\n\n\n  render() {\n    const { shadow, component: { data, legend } } = this.props;\n    const { modalOpen, elements } = this.state;\n    let modifiedData = {\n      labels: [ ...new Set(data.map( dataItem => dataItem.data.map(realDataItem => moment(realDataItem[dataItem.xColumn]).format(dataItem.timeIdentifier === \"week\" ? \"dddd\" : \"MMM YYYY\")) ).flat(2)) ],\n      datasets: data.map( (dataItem, colorIndex) => {\n        return {\n          backgroundColor: this.backgroundColors,\n          borderColor: this.borderColors,\n          borderWidth: 2,\n          pointBackgroundColor: \"#fff\",\n          pointBorderColor: this.borderColors,\n          pointBorderWidth: 2,\n          pointHoverBackgroundColor: this.borderColors,\n          pointHoverBorderColor: \"#fff\",\n          pointHoverRadius: 5,\n          pointRadius: 4,\n          label: dataItem.label,\n          data: dataItem.data.map( (realDataItem) => {\n            let column = realDataItem[dataItem.yColumn];\n            if(Array.isArray(column)) {\n              return column[0][dataItem.yColumn];\n            }\n            return column;\n          })\n        };\n      })\n    };\n    return (\n      <div className={classNames('card', 'my-5', this.props.className)}>\n        <div className=\"card-body\">\n          <div className=\"card-title\">\n          <span>{legend.charAt(0).toUpperCase() + legend.slice(1)}</span>\n          </div>\n          <div>\n            <ChartComponent\n              height={400}\n              ref={this.chart_instance}\n              type={shadow ? \"doughnutWithShadow\" : \"doughnut\"}\n              plugins={[centerTextPlugin]}\n              options={{\n                ...doughnutChartOptions\n              }}\n              getElementAtEvent={ (event) => this.handleClick(event, data) }\n              data={modifiedData}\n            />\n          </div>\n          \n          <Modal isOpen={modalOpen} size=\"lg\" toggle={ () => this.toggle() }>\n              <ModalBody className=\"p-4\">\n                  { elements.length === 0 ? <div class=\"loading d-block mx-auto position-static\" /> : null }\n                  { this.renderElements() }\n              </ModalBody>\n          </Modal>\n          \n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ChartComponent, { Chart } from \"react-chartjs-2\";\nimport moment from 'moment';\nimport classNames from 'classnames';\n\nimport { lineChartOptions } from \"./config\";\n\n\nimport { Modal, ModalBody } from 'reactstrap';\nimport {\n  AreaChart,\n  LineChart,\n  BarChart,\n  PieChart,\n  DoughnutChart,\n  Table,\n  Card,\n  UserCardGroup,\n  ProductCardList,\n  ProductList,\n  ProfileCard,\n  Calendar,\n  ThumbsCarousel,\n  Search,\n  Tabs\n} from '../misc/index';\nimport Validation from '../misc/wizard/Validation';\n\n\nexport default class Line extends React.Component {\n\n  level = 0\n\n  \n  state = {\n    modalOpen: false,\n    elements: []    \n  }\n\n\n  colors = [\n    {\n      \"backgroundColor\": \"rgba(136, 10, 31, 0.1)\",\n      \"borderColor\": \"rgb(136, 10, 31)\",\n    },\n    {\n      backgroundColor: \"rgb(69, 86, 172, 0.1)\",\n      borderColor: \"rgb(69, 86, 172)\"\n    }\n  ];\n\n  \n  toggle() {\n    const { modalOpen } = this.state;\n    const { elements } = this.props.component;\n    if(Array.isArray(elements)) {\n        return this.setState({\n            modalOpen: !modalOpen,\n            elements\n        });\n    }\n}\n\n\n  constructor(props) {\n    super(props);\n    this.chart_instance = React.createRef();\n    if (this.props.shadow) {\n      Chart.defaults.lineWithShadow = Chart.defaults.line;\n      Chart.controllers.lineWithShadow = Chart.controllers.line.extend({\n        draw: function(ease) {\n          Chart.controllers.line.prototype.draw.call(this, ease);\n          var ctx = this.chart.ctx;\n          ctx.save();\n          ctx.shadowColor = \"rgba(0,0,0,0.15)\";\n          ctx.shadowBlur = 10;\n          ctx.shadowOffsetX = 0;\n          ctx.shadowOffsetY = 10;\n          ctx.responsive = true;\n          ctx.stroke();\n          Chart.controllers.line.prototype.draw.apply(this, arguments);\n          ctx.restore();\n        }\n      });\n    }\n  }\n\n  \n  renderElements() {\n\n    const { elements } = this.state;\n    const transparent = false;\n\n    const components = elements.map( (element, index) => {\n        const { type } = element;\n        if(type === \"chart\") {\n            const { kind } = element;\n            if(kind === \"pie\") {\n                return (\n                    <div className={ elements.length === 1 ? \"col\" : (index === 0 ? \"col-md-7\" : \"col-md-5\") } key={index}>\n                        <PieChart className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={element} />\n                    </div>\n                );\n            }\n\n            if(kind === \"bar\") {\n                return (\n                    <div className={ elements.length === 1 ? \"col\" : (index === 0 ? \"col-md-7\" : \"col-md-5\") } key={index}>\n                        <BarChart className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={element} />\n                    </div>\n                );\n            }\n\n            if(kind === \"area\") {\n                return (\n                    <div className={ elements.length === 1 ? \"col\" : (index === 0 ? \"col-md-7\" : \"col-md-5\") } key={index}>\n                        <AreaChart className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={element} />\n                    </div>\n                );\n            }\n\n            if(kind === \"line\") {\n                return (\n                    <div className={ elements.length === 1 ? \"col\" : (index === 0 ? \"col-md-7\" : \"col-md-5\") } key={index}>\n                        <LineChart className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={element} />\n                    </div>\n                );\n            }\n\n            if(kind === \"doughnut\") {\n                return (\n                    <div className={ elements.length === 1 ? \"col\" : (index === 0 ? \"col-md-7\" : \"col-md-5\") } key={index}>\n                        <DoughnutChart className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={element} />\n                    </div>\n                );\n            }\n        }\n\n        if(type === \"calendar\") {\n            return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <Calendar component={element} />\n                </div>\n            );\n        }\n\n        if(type === \"table\") {\n            return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <Table component={element} />\n                </div>\n            );\n        }\n\n        if(type === \"card\") {\n            return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <Card {...this.props} component={element} />\n                </div>\n            );\n          }\n\n          if(type === \"wizard\") {\n            return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <Validation {...this.props} component={element} />\n                </div>\n            );\n          }\n\n          if(type === \"productCardList\") {\n            return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <ProductCardList inCard={true} {...this.props} component={element} />\n                </div>\n            );\n          }\n\n          if(type === \"productList\") {\n            return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <ProductList inCard={true} {...this.props} dynamicComponent={element} />\n                </div>\n            );\n          }\n\n          if(type === \"userCard\") {\n            return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <UserCardGroup inCard={true} {...this.props} component={element} />\n                </div>\n            );\n          }\n\n          if(type === \"profileCard\") {\n            return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <ProfileCard {...this.props} component={element} />\n                </div>\n            );\n          }\n          \n          if(type === \"thumbCarousel\") {\n            const data = element.data.map( dataItem => ({ id: dataItem.id, img: dataItem.img }) );\n              return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <ThumbsCarousel {...this.props} data={data} component={element} />\n                </div>\n            );\n        }\n\n        if(type === \"search\") {\n            return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <Search {...this.props} component={element} />\n                </div>\n            );\n        }\n\n        \n        if(type === \"tabs\") {\n            return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <Tabs {...this.props} component={element} />\n                </div>\n            );\n        }\n\n        return null;\n    });\n\n    return components;\n}\n\n  handleClick = (event, originalData) => {\n    const { level } = this;\n    if(level === 0) {\n      if(event[0]) {\n        this.level = 1;\n        event = event[0];\n        let dataset = originalData[event._datasetIndex];\n        let chartDataset = this.chart_instance.current.chartInstance.data.datasets[event._datasetIndex];\n        let data = dataset.data;\n        if(Array.isArray(data)) {\n          let labels = data.map( (dataItem) => moment(dataItem[dataset.xColumn]).format(dataItem.timeIdentifier === \"week\" ? \"dddd\" : \"MMM YYYY\") );\n          data = data.map( dataItem => dataItem[dataset.yColumn] );\n          this.chart_instance.current.chartInstance.data.labels = labels;\n          this.chart_instance.current.chartInstance.data.datasets = [\n            {\n              ...chartDataset,\n              data: data\n            }\n          ];\n          this.chart_instance.current.chartInstance.update({\n              duration: 800,\n              lazy: true,\n              easing: 'easeOutBounce'\n          });\n        }\n      }\n    } else {\n      this.level = 0;\n      let { component: { data } } = this.props;\n      let modifiedData = {\n        labels: [ ...new Set(data.map( dataItem => dataItem.data.map(realDataItem => moment(realDataItem[dataItem.xColumn]).format(dataItem.timeIdentifier === \"week\" ? \"dddd\" : \"MMM YYYY\")) ).flat(2)) ],\n        datasets: data.map( (dataItem, colorIndex) => {\n            return {\n              backgroundColor: this.colors[colorIndex].backgroundColor,\n              borderColor: this.colors[colorIndex].borderColor,\n              borderWidth: 2,\n              pointBackgroundColor: \"#fff\",\n              pointBorderColor: this.colors[colorIndex].borderColor,\n              pointBorderWidth: 2,\n              pointHoverBackgroundColor: this.colors[colorIndex].borderColor,\n              pointHoverBorderColor: \"#fff\",\n              pointHoverRadius: 5,\n              pointRadius: 4,\n              label: dataItem.label,\n              data: dataItem.data.map( (realDataItem) => {\n                let column = realDataItem[dataItem.yColumn];\n                if(Array.isArray(column)) {\n                  return column[0][dataItem.yColumn];\n                }\n                return column;\n              })\n            };\n        })\n      };\n      this.chart_instance.current.chartInstance.data = modifiedData;\n      this.chart_instance.current.chartInstance.update({\n          duration: 800,\n          lazy: true,\n          easing: 'easeOutBounce'\n      });\n    }\n    this.toggle();\n\n  }\n\n  render() {\n    const { shadow, component: { data, legend } } = this.props;\n    const { modalOpen, elements } = this.state;\n    let modifiedData = {\n      labels: [ ...new Set(data.map( dataItem => dataItem.data.map(realDataItem => moment(realDataItem[dataItem.xColumn]).format(dataItem.timeIdentifier === \"week\" ? \"dddd\" : \"MMM YYYY\")) ).flat(2)) ],\n      datasets: data.map( (dataItem, colorIndex) => {\n          return {\n            backgroundColor: 'transparent',\n            borderColor: this.colors[colorIndex].borderColor,\n            borderWidth: 2,\n            pointBackgroundColor: \"#fff\",\n            pointBorderColor: this.colors[colorIndex].borderColor,\n            pointBorderWidth: 2,\n            pointHoverBackgroundColor: this.colors[colorIndex].borderColor,\n            pointHoverBorderColor: \"#fff\",\n            pointHoverRadius: 5,\n            pointRadius: 4,\n            label: dataItem.label,\n            data: dataItem.data.map( (realDataItem) => {\n              let column = realDataItem[dataItem.yColumn];\n              if(Array.isArray(column)) {\n                return column[0][dataItem.yColumn];\n              }\n              return column;\n            })\n          };\n      })\n    };\n    return (\n      <div className={classNames('card', 'my-5', this.props.className)}>\n        <div className=\"card-body\">\n          <div className=\"card-title\">\n            <span>{legend.charAt(0).toUpperCase() + legend.slice(1)}</span>\n          </div>\n          <div>\n            <ChartComponent\n              height={400}\n              ref={this.chart_instance}\n              type={shadow ? \"lineWithShadow\" : \"line\"}\n              options={{\n                ...lineChartOptions\n              }}\n              getElementAtEvent={ (event) => this.handleClick(event, data) }\n              data={modifiedData}\n            />\n          </div>\n          \n          <Modal isOpen={modalOpen} size=\"lg\" toggle={ () => this.toggle() }>\n              <ModalBody className=\"p-4\">\n                  { elements.length === 0 ? <div class=\"loading d-block mx-auto position-static\" /> : null }\n                  { this.renderElements() }\n              </ModalBody>\n          </Modal>\n          \n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ChartComponent, { Chart } from \"react-chartjs-2\";\nimport moment from 'moment';\nimport classNames from 'classnames';\n\n\nimport { Modal, ModalBody } from 'reactstrap';\nimport {\n  AreaChart,\n  LineChart,\n  BarChart,\n  PieChart,\n  DoughnutChart,\n  Table,\n  Card,\n  UserCardGroup,\n  ProductCardList,\n  ProductList,\n  ProfileCard,\n  Calendar,\n  ThumbsCarousel,\n  Search,\n  Tabs\n} from '../misc/index';\nimport Validation from '../misc/wizard/Validation';\n\nimport { pieChartOptions } from \"./config\";\n\nexport default class Pie extends React.Component {\n\n  level = 0;\n\n  \n  state = {\n    modalOpen: false,\n    elements: []    \n  }\n\n\n  backgroundColors = [\n    \"rgba(136, 10, 31, 0.2)\",\n    \"rgba(69, 86, 172, 0.2)\",\n    \"rgba(136, 10, 31, 0.2)\",\n    \"rgba(69, 86, 172, 0.2)\",\n    \"rgba(136, 10, 31, 0.2)\",\n    \"rgba(69, 86, 172, 0.2)\",\n    \"rgba(136, 10, 31, 0.2)\",\n    \"rgba(69, 86, 172, 0.2)\",\n    \"rgba(136, 10, 31, 0.2)\",\n    \"rgba(69, 86, 172, 0.2)\",\n    \"rgba(136, 10, 31, 0.2)\",\n    \"rgba(69, 86, 172, 0.2)\",\n    \"rgba(136, 10, 31, 0.2)\",\n    \"rgba(69, 86, 172, 0.2)\",\n    \"rgba(136, 10, 31, 0.2)\",\n    \"rgba(69, 86, 172, 0.2)\",\n    \"rgba(136, 10, 31, 0.2)\",\n    \"rgba(69, 86, 172, 0.2)\",\n    \"rgba(136, 10, 31, 0.2)\",\n    \"rgba(69, 86, 172, 0.2)\",\n    \"rgba(136, 10, 31, 0.2)\",\n    \"rgba(69, 86, 172, 0.2)\",\n    \"rgba(136, 10, 31, 0.2)\",\n    \"rgba(69, 86, 172, 0.2)\",\n    \"rgba(136, 10, 31, 0.2)\",\n    \"rgba(69, 86, 172, 0.2)\",\n    \"rgba(136, 10, 31, 0.2)\",\n    \"rgba(69, 86, 172, 0.2)\"\n  ];\n\n  borderColors = [\n    \"rgb(136, 10, 31)\",\n    \"rgb(69, 86, 172)\",\n    \"rgb(136, 10, 31)\",\n    \"rgb(69, 86, 172)\",\n    \"rgb(136, 10, 31)\",\n    \"rgb(69, 86, 172)\",\n    \"rgb(136, 10, 31)\",\n    \"rgb(69, 86, 172)\",\n    \"rgb(136, 10, 31)\",\n    \"rgb(69, 86, 172)\",\n    \"rgb(136, 10, 31)\",\n    \"rgb(69, 86, 172)\",\n    \"rgb(136, 10, 31)\",\n    \"rgb(69, 86, 172)\",\n    \"rgb(136, 10, 31)\",\n    \"rgb(69, 86, 172)\",\n    \"rgb(136, 10, 31)\",\n    \"rgb(69, 86, 172)\",\n    \"rgb(136, 10, 31)\",\n    \"rgb(69, 86, 172)\",\n    \"rgb(136, 10, 31)\",\n    \"rgb(69, 86, 172)\",\n    \"rgb(136, 10, 31)\",\n    \"rgb(69, 86, 172)\",\n    \"rgb(136, 10, 31)\",\n    \"rgb(69, 86, 172)\",\n    \"rgb(136, 10, 31)\",\n    \"rgb(69, 86, 172)\",\n    \"rgb(136, 10, 31)\",\n    \"rgb(69, 86, 172)\"\n  ];\n\n  \n  toggle() {\n    const { modalOpen } = this.state;\n    const { elements } = this.props.component;\n    if(Array.isArray(elements)) {\n        return this.setState({\n            modalOpen: !modalOpen,\n            elements\n        });\n    }\n}\n\n  constructor(props) {\n    super(props);\n    this.chart_instance = React.createRef();\n    if (this.props.shadow) {\n      Chart.defaults.pieWithShadow = Chart.defaults.pie;\n      Chart.controllers.pieWithShadow = Chart.controllers.pie.extend({\n        draw: function(ease) {\n          Chart.controllers.pie.prototype.draw.call(this, ease);\n          let ctx = this.chart.chart.ctx;\n          ctx.save();\n          ctx.shadowColor = \"rgba(0,0,0,0.15)\";\n          ctx.shadowBlur = 10;\n          ctx.shadowOffsetX = 0;\n          ctx.shadowOffsetY = 10;\n          ctx.responsive = true;\n          Chart.controllers.pie.prototype.draw.apply(this, arguments);\n          ctx.restore();\n        }\n      });\n    }\n  }\n\n  \n  renderElements() {\n\n    const { elements } = this.state;\n    const transparent = false;\n\n    const components = elements.map( (element, index) => {\n        const { type } = element;\n        if(type === \"chart\") {\n            const { kind } = element;\n            if(kind === \"pie\") {\n                return (\n                    <div className={ elements.length === 1 ? \"col\" : (index === 0 ? \"col-md-7\" : \"col-md-5\") } key={index}>\n                        <PieChart className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={element} />\n                    </div>\n                );\n            }\n\n            if(kind === \"bar\") {\n                return (\n                    <div className={ elements.length === 1 ? \"col\" : (index === 0 ? \"col-md-7\" : \"col-md-5\") } key={index}>\n                        <BarChart className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={element} />\n                    </div>\n                );\n            }\n\n            if(kind === \"area\") {\n                return (\n                    <div className={ elements.length === 1 ? \"col\" : (index === 0 ? \"col-md-7\" : \"col-md-5\") } key={index}>\n                        <AreaChart className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={element} />\n                    </div>\n                );\n            }\n\n            if(kind === \"line\") {\n                return (\n                    <div className={ elements.length === 1 ? \"col\" : (index === 0 ? \"col-md-7\" : \"col-md-5\") } key={index}>\n                        <LineChart className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={element} />\n                    </div>\n                );\n            }\n\n            if(kind === \"doughnut\") {\n                return (\n                    <div className={ elements.length === 1 ? \"col\" : (index === 0 ? \"col-md-7\" : \"col-md-5\") } key={index}>\n                        <DoughnutChart className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={element} />\n                    </div>\n                );\n            }\n        }\n\n        if(type === \"calendar\") {\n            return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <Calendar component={element} />\n                </div>\n            );\n        }\n\n        if(type === \"table\") {\n            return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <Table component={element} />\n                </div>\n            );\n        }\n\n        if(type === \"card\") {\n            return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <Card {...this.props} component={element} />\n                </div>\n            );\n          }\n\n          if(type === \"wizard\") {\n            return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <Validation {...this.props} component={element} />\n                </div>\n            );\n          }\n\n          if(type === \"productCardList\") {\n            return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <ProductCardList inCard={true} {...this.props} component={element} />\n                </div>\n            );\n          }\n\n          if(type === \"productList\") {\n            return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <ProductList inCard={true} {...this.props} dynamicComponent={element} />\n                </div>\n            );\n          }\n\n          if(type === \"userCard\") {\n            return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <UserCardGroup inCard={true} {...this.props} component={element} />\n                </div>\n            );\n          }\n\n          if(type === \"profileCard\") {\n            return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <ProfileCard {...this.props} component={element} />\n                </div>\n            );\n          }\n          \n          if(type === \"thumbCarousel\") {\n            const data = element.data.map( dataItem => ({ id: dataItem.id, img: dataItem.img }) );\n              return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <ThumbsCarousel {...this.props} data={data} component={element} />\n                </div>\n            );\n        }\n\n        if(type === \"search\") {\n            return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <Search {...this.props} component={element} />\n                </div>\n            );\n        }\n\n        \n        if(type === \"tabs\") {\n            return (\n                <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                    <Tabs {...this.props} component={element} />\n                </div>\n            );\n        }\n\n        return null;\n    });\n\n    return components;\n}\n\n  handleClick = (event, originalData) => {\n    const { level } = this;\n    if(level === 0) {\n      if(event[0]) {\n        this.level = 1;\n        event = event[0];\n        let dataset = originalData[event._datasetIndex];\n        let chartDataset = this.chart_instance.current.chartInstance.data.datasets[event._datasetIndex];\n        let data = dataset.data;\n        if(Array.isArray(data)) {\n          let labels = data.map( (dataItem) => moment(dataItem[dataset.xColumn]).format(\"MMM YYYY\") );\n          data = data.map( dataItem => dataItem[dataset.yColumn] );\n          this.chart_instance.current.chartInstance.data.labels = labels;\n          this.chart_instance.current.chartInstance.data.datasets = [\n            {\n              ...chartDataset,\n              data: data\n            }\n          ];\n          this.chart_instance.current.chartInstance.update({\n              duration: 800,\n              lazy: true,\n              easing: 'easeOutBounce'\n          });\n        }\n      }\n    } else {\n      this.level = 0;\n      let { component: { data } } = this.props;\n      let modifiedData = {\n        labels: [ ...new Set(data.map( dataItem => dataItem.data.map(realDataItem => moment(realDataItem[dataItem.xColumn]).format(\"MMM YYYY\")) ).flat(2)) ],\n        datasets: data.map( (dataItem, colorIndex) => {\n            return {\n              backgroundColor: this.backgroundColors,\n              borderColor: this.borderColors,\n              borderWidth: 2,\n              pointBackgroundColor: \"#fff\",\n              pointBorderColor: this.borderColors,\n              pointBorderWidth: 2,\n              pointHoverBackgroundColor: this.borderColors,\n              pointHoverBorderColor: \"#fff\",\n              pointHoverRadius: 5,\n              pointRadius: 4,\n              label: dataItem.label,\n              data: dataItem.data.map( (realDataItem) => {\n                let column = realDataItem[dataItem.yColumn];\n                if(Array.isArray(column)) {\n                  return column[0][dataItem.yColumn];\n                }\n                return column;\n              })\n            };\n        })\n      };\n      this.chart_instance.current.chartInstance.data = modifiedData;\n      this.chart_instance.current.chartInstance.update({\n          duration: 800,\n          lazy: true,\n          easing: 'easeOutBounce'\n      });\n    }\n    this.toggle();\n  }\n\n  render() {\n    const { shadow, component: { data, legend } } = this.props;\n    const { modalOpen, elements } = this.state;\n    let modifiedData = {\n      labels: [ ...new Set(data.map( dataItem => dataItem.data.map(realDataItem => moment(realDataItem[dataItem.xColumn]).format(\"MMM YYYY\")) ).flat(2)) ],\n      datasets: data.map( (dataItem, colorIndex) => {\n        return {\n          backgroundColor: this.backgroundColors,\n          borderColor: this.borderColors,\n          borderWidth: 2,\n          pointBackgroundColor: \"#fff\",\n          pointBorderColor: this.borderColors,\n          pointBorderWidth: 2,\n          pointHoverBackgroundColor: this.borderColors,\n          pointHoverBorderColor: \"#fff\",\n          pointHoverRadius: 5,\n          pointRadius: 4,\n          label: dataItem.label,\n          data: dataItem.data.map( (realDataItem) => {\n            let column = realDataItem[dataItem.yColumn];\n            if(Array.isArray(column)) {\n              return column[0][dataItem.yColumn];\n            }\n            return column;\n          })\n        };\n      })\n    };\n    return (\n      <div className={classNames('card', 'my-5', this.props.className)}>\n        <div className=\"card-body\">\n          <div className=\"card-title\">\n          <span>{legend.charAt(0).toUpperCase() + legend.slice(1)}</span>\n          </div>\n          <div>\n            <ChartComponent\n              height={400}\n              ref={this.chart_instance}\n              type={shadow ? \"pieWithShadow\" : \"pie\"}\n              options={{\n                ...pieChartOptions\n              }}\n              getElementAtEvent={ (event) => this.handleClick(event, data) }\n              data={modifiedData}\n            />\n          </div>\n          \n\n          <Modal isOpen={modalOpen} size=\"lg\" toggle={ () => this.toggle() }>\n              <ModalBody className=\"p-4\">\n                  { elements.length === 0 ? <div class=\"loading d-block mx-auto position-static\" /> : null }\n                  { this.renderElements() }\n              </ModalBody>\n          </Modal>\n\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ChartComponent, { Chart } from \"react-chartjs-2\";\n\nimport { polarAreaChartOptions } from \"./config\";\n\nexport default class PolarArea extends React.Component {\n   constructor(props) {\n    super(props);\n    if (this.props.shadow) {\n      Chart.defaults.polarWithShadow = Chart.defaults.polarArea;\n      Chart.controllers.polarWithShadow = Chart.controllers.polarArea.extend({\n        draw: function(ease) {\n          Chart.controllers.radar.prototype.draw.call(this, ease);\n          let ctx = this.chart.chart.ctx;\n          ctx.save();\n          ctx.shadowColor = \"rgba(0,0,0,0.2)\";\n          ctx.shadowBlur = 7;\n          ctx.shadowOffsetX = 0;\n          ctx.shadowOffsetY = 7;\n          ctx.responsive = true;\n          Chart.controllers.radar.prototype.draw.apply(this, arguments);\n          ctx.restore();\n        }\n      });\n    }\n  }\n\n  render() {\n    const { data,shadow } = this.props;\n    return (\n      <ChartComponent\n        ref={ref => (this.chart_instance = ref && ref.chart_instance)}\n        type={shadow?\"polarWithShadow\":\"polarArea\"}\n        options={{\n          ...polarAreaChartOptions\n        }}\n        data={data}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport ChartComponent, { Chart } from \"react-chartjs-2\";\n\nimport { radarChartOptions } from \"./config\";\n\nexport default class Radar extends React.Component {\n  constructor(props) {\n    super(props);\n    if (this.props.shadow) {\n      Chart.defaults.radarWithShadow = Chart.defaults.radar;\n      Chart.controllers.radarWithShadow = Chart.controllers.radar.extend({\n        draw: function(ease) {\n          Chart.controllers.radar.prototype.draw.call(this, ease);\n          let ctx = this.chart.chart.ctx;\n          ctx.save();\n          ctx.shadowColor = \"rgba(0,0,0,0.2)\";\n          ctx.shadowBlur = 7;\n          ctx.shadowOffsetX = 0;\n          ctx.shadowOffsetY = 7;\n          ctx.responsive = true;\n          Chart.controllers.radar.prototype.draw.apply(this, arguments);\n          ctx.restore();\n        }\n      });\n    }\n  }\n\n  render() {\n    const { data, shadow } = this.props;\n    return (\n      <ChartComponent\n        ref={ref => (this.chart_instance = ref && ref.chart_instance)}\n        type={shadow ? \"radarWithShadow\" : \"radar\"}\n        options={{\n          ...radarChartOptions\n        }}\n        data={data}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport ChartComponent, { Chart } from \"react-chartjs-2\";\n\nimport { scatterChartOptions } from \"./config\";\n\nexport default class Scatter extends React.Component {\n  constructor(props) {\n    super(props);\n    if (this.props.shadow) {\n      Chart.defaults.scatterWithShadow = Chart.defaults.scatter;\n      Chart.controllers.scatterWithShadow = Chart.controllers.scatter.extend({\n        draw: function(ease) {\n          Chart.controllers.scatter.prototype.draw.call(this, ease);\n          let ctx = this.chart.chart.ctx;\n          ctx.save();\n          ctx.shadowColor = \"rgba(0,0,0,0.2)\";\n          ctx.shadowBlur = 7;\n          ctx.shadowOffsetX = 0;\n          ctx.shadowOffsetY = 7;\n          ctx.responsive = true;\n          Chart.controllers.scatter.prototype.draw.apply(this, arguments);\n          ctx.restore();\n        }\n      });\n    }\n  }\n\n  render() {\n    const { data, shadow } = this.props;\n    return (\n      <ChartComponent\n        ref={ref => (this.chart_instance = ref && ref.chart_instance)}\n        type={shadow ? \"scatterWithShadow\" : \"scatter\"}\n        options={{\n          ...scatterChartOptions\n        }}\n        data={data}\n      />\n    );\n  }\n}\n","import React, { Fragment } from \"react\";\nimport ChartComponent, { Chart } from \"react-chartjs-2\";\n\nimport {smallLineChartOptions} from \"./config\"\n\nconst addCommas = nStr => {\n  nStr += \"\";\n  var x = nStr.split(\".\");\n  var x1 = x[0];\n  var x2 = x.length > 1 ? \".\" + x[1] : \"\";\n  var rgx = /(\\d+)(\\d{3})/;\n  while (rgx.test(x1)) {\n    x1 = x1.replace(rgx, \"$1,$2\");\n  }\n  return x1 + x2;\n};\n\nexport default class SmallLine extends React.Component {\n  constructor(props) {\n    super(props);\n    this.changeState = this.changeState.bind(this);\n    this.state = {\n      currentValue: \"\",\n      currentLabel: \"\"\n    };\n    Chart.defaults.lineWithLine = Chart.defaults.line;\n    Chart.controllers.lineWithLine = Chart.controllers.line.extend({\n      draw: function(ease) {\n        Chart.controllers.line.prototype.draw.call(this, ease);\n\n        if (this.chart.tooltip._active && this.chart.tooltip._active.length) {\n          var activePoint = this.chart.tooltip._active[0];\n          var ctx = this.chart.ctx;\n          var x = activePoint.tooltipPosition().x;\n          var topY = this.chart.scales[\"y-axis-0\"].top;\n          var bottomY = this.chart.scales[\"y-axis-0\"].bottom;\n\n          ctx.save();\n          ctx.beginPath();\n          ctx.moveTo(x, topY);\n          ctx.lineTo(x, bottomY);\n          ctx.lineWidth = 1;\n          ctx.strokeStyle = \"rgba(0,0,0,0.1)\";\n          ctx.stroke();\n          ctx.restore();\n        }\n      }\n    });\n  }\n\n  changeState(yLabel, xLabel) {\n    this.setState({ currentValue: yLabel, currentLabel: xLabel });\n  }\n\n  render() {\n    const changeState = this.changeState;\n    const {data} = this.props\n    \n    return (\n      <Fragment>\n        <div>\n          <p className=\"lead color-theme-1 mb-1 value\">\n            {this.state.currentValue}\n          </p>\n          <p className=\"mb-0 label text-small\">{this.state.currentLabel}</p>\n        </div>\n        <div className=\"chart\">\n          <ChartComponent\n            ref={ref => (this.chart_instance = ref && ref.chart_instance)}\n            type=\"lineWithLine\"\n            options={{\n              ...smallLineChartOptions,\n              tooltips: {\n                intersect: false,\n                enabled: false,\n                custom: function(tooltipModel) {\n                  if (tooltipModel && tooltipModel.dataPoints) {\n                    var yLabel = tooltipModel.dataPoints[0].yLabel;\n                    var xLabel = tooltipModel.dataPoints[0].xLabel;\n                    var label = tooltipModel.body[0].lines[0].split(\":\")[0];\n                    changeState(\"$\" + addCommas(yLabel), label + \"-\" + xLabel);\n                  }\n                }\n              }\n            }}\n            plugins={[\n              {\n                afterInit: function(chart, options) {\n                  var yLabel = chart.data.datasets[0].data[0];\n                  var xLabel = chart.data.labels[0];\n                  var label = chart.data.datasets[0].label;\n                  changeState(\"$\" + addCommas(yLabel), label + \"-\" + xLabel);\n                }\n              }\n            ]}\n            data={data}\n          />\n        </div>\n      </Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport moment from \"moment\";\n\n\nexport const CalendarToolbar = toolbar => {\n    const goToBack = () => {\n      toolbar.onNavigate(\"PREV\");\n    };\n    const goToNext = () => {\n      toolbar.onNavigate(\"NEXT\");\n    };\n    const goToCurrent = () => {\n      toolbar.onNavigate(\"TODAY\");\n    };\n  \n    const label = () => {\n      const date = moment(toolbar.date);\n      return (\n        <span>\n          <span>{date.format(\"MMMM\")} </span>\n          <span> {date.format(\"YYYY\")}</span>\n        </span>\n      );\n    };\n  \n    return (\n      <div className=\"big-calendar-header\">\n        <div className=\"float-left\">\n          <label>{label()}</label>\n        </div>\n  \n        <div className=\"float-right\">\n          <div>\n            <button\n              className=\"btn btn-primary calendar-today-btn mr-2\"\n              onClick={goToCurrent}\n            >\n              Today\n            </button>\n            <button className=\"btn calendar-prev-btn mr-1\" onClick={goToBack}>\n              <span className=\"simple-icon-arrow-left\" />\n            </button>\n            <button className=\"btn calendar-next-btn\" onClick={goToNext}>\n              <span className=\"simple-icon-arrow-right\" />\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n  ","import React from \"react\";\nimport moment from \"moment\";\nimport { Calendar as BigCalendar, momentLocalizer } from 'react-big-calendar';\nimport { CalendarToolbar } from \"./CalendarToolbar\";\nimport dynamicFunctions from './functions';\n\nconst localizer = momentLocalizer(moment);\n\nconst Calendar = ({ component }) => {\n  const { title, description } = component;\n\n  function renderFunctions() {\n    let { functions } = component;\n    if(functions) {\n        functions = functions.map( functionName => {\n            if(functionName in dynamicFunctions) {\n                return dynamicFunctions[functionName]();\n            }\n            return null;\n        }).filter( functionName => functionName !== null );\n    } else {\n        functions = [];\n    }\n    return functions;\n  }\n\n    return (\n      <div className=\"card my-5\">\n        <div className=\"card-body\">\n          <div className=\"card-title\">\n            <span>{title.charAt(0).toUpperCase() + title.slice(1)}</span>\n            <span> &mdash; </span>\n            <span className=\"opacity-50\">{description.charAt(0).toUpperCase() + description.slice(1)}</span>\n          </div>\n          <BigCalendar\n            localizer={localizer}\n            events={[]}\n            components={{\n              toolbar: CalendarToolbar\n            }}\n            drilldownView=\"null\"\n            startAccessor=\"start\"\n            endAccessor=\"end\"\n          />\n          <div className=\"row justify-content-end mt-5 mx-5\">\n              { renderFunctions() }\n          </div>\n        </div>\n      </div>\n    );\n  };\n\nexport default Calendar;","import React, { Component, Fragment } from \"react\";\nimport {\n  Pagination, PaginationItem, PaginationLink,\n  UncontrolledDropdown, DropdownMenu, DropdownToggle, DropdownItem\n} from \"reactstrap\";\n\nexport default class DataTablePagination extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getSafePage = this.getSafePage.bind(this);\n    this.changePage = this.changePage.bind(this);\n    this.applyPage = this.applyPage.bind(this);\n    this.pageClick = this.pageClick.bind(this);\n    this.renderPages = this.renderPages.bind(this);\n    this.changePageSize = this.changePageSize.bind(this);\n    this.renderPageJump = this.renderPageJump.bind(this);\n\n    this.state = {\n      page: props.page,\n      pageSize: this.props.defaultPageSize\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {page: props.page};\n  }\n\n  getSafePage(page) {\n    if (Number.isNaN(page)) {\n      page = this.props.page;\n    }\n    return Math.min(Math.max(page, 0), this.props.pages - 1);\n  }\n\n  changePageSize(size) {\n    this.props.onPageSizeChange(size);\n    this.setState({ pageSize: size });\n  }\n\n  changePage(page) {\n    page = this.getSafePage(page);\n    this.setState({ page });\n    if (this.props.page !== page) {\n      this.props.onPageChange(page);\n    }\n  }\n\n  applyPage(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    const page = this.state.page;\n    this.changePage(page === \"\" ? this.props.page : page);\n  }\n\n  pageClick(pageIndex) {\n    this.changePage(pageIndex);\n  }\n\n  renderPages() {\n    let pageCount = this.props.pages;\n    let pageButtons = [];\n    for (let i = 0; i < pageCount; i++) {\n      let active = this.state.page === i ? true : false;\n      pageButtons.push(\n        <PaginationItem key={i} active={active}>\n          <PaginationLink\n            onClick={() => this.pageClick(i)}\n          >{i + 1}</PaginationLink>\n        </PaginationItem>\n      );\n    }\n    return pageButtons;\n  }\n\n  renderPageJump() {\n    let pages = this.props.pages;\n    let pageNumbers = [];\n    for (let i = 0; i < pages; i++) {\n      pageNumbers.push(\n        <DropdownItem\n          key={i}\n          onClick={() => this.changePage(i)}\n        >\n          {i + 1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  }\n\n  render() {\n    const {\n      page,\n      pages,\n      canPrevious,\n      canNext,\n      pageSizeOptions,\n      showPageSizeOptions,\n      showPageJump\n    } = this.props;\n\n    return (\n      <Fragment>\n        <div className=\"text-center\">\n          {\n            showPageJump &&\n            <div className=\"float-left pt-2\"><span>Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\">\n                  {this.state.page + 1}\n                </DropdownToggle>\n                <DropdownMenu direction=\"left\" >\n                  {this.renderPageJump()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>{pages}</div>\n          }\n\n          <Pagination className=\"d-inline-block\" size=\"sm\" listClassName=\"justify-content-center\" aria-label=\"Page navigation example\">\n            <PaginationItem className={`${ (!canPrevious || (page < 1)) && \"disabled\"}`}>\n              <PaginationLink\n                className={\"prev\"}\n                onClick={() => {\n                  if (!canPrevious) return;\n                  this.changePage(0);\n                }}\n                disabled={!canPrevious}>\n                <i className=\"simple-icon-control-start\" />\n              </PaginationLink>\n            </PaginationItem>\n\n            <PaginationItem className={`${ (!canPrevious || (page < 1)) && \"disabled\"}`}>\n              <PaginationLink\n                className={\"prev\"}\n                onClick={() => {\n                  if (!canPrevious) return;\n                  this.changePage(page - 1);\n                }}\n                disabled={!canPrevious}>\n                <i className=\"simple-icon-arrow-left\" />\n              </PaginationLink>\n            </PaginationItem>\n\n            {this.renderPages()}\n            <PaginationItem className={`${ (!canNext || (page === pages - 1)) && \"disabled\"}`}>\n              <PaginationLink\n                className=\"next\"\n                onClick={() => {\n                  if (!canNext) return;\n                  this.changePage(page + 1);\n                }}\n                disabled={!canNext}>\n                <i className=\"simple-icon-arrow-right\" />\n              </PaginationLink>\n            </PaginationItem>\n\n\n            <PaginationItem className={`${ (!canNext || (page === pages - 1)) && \"disabled\"}`}>\n              <PaginationLink\n                className=\"next\"\n                onClick={() => {\n                  if (!canNext) return;\n                  this.changePage(pages - 1);\n                }}\n                disabled={!canNext}>\n                <i className=\"simple-icon-control-end\" />\n              </PaginationLink>\n            </PaginationItem>\n\n\n          </Pagination>\n          {\n            showPageSizeOptions &&\n            <div className=\"float-right pt-2\">\n              <span className=\"text-muted text-small mr-1\">Items </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\">\n                  {this.state.pageSize}\n                </DropdownToggle>\n                <DropdownMenu right>\n                  {pageSizeOptions.map((size, index) => {\n                    return (\n                      <DropdownItem\n                        key={index}\n                        onClick={() => this.changePageSize(size)}\n                      >\n                        {size}\n                      </DropdownItem>\n                    );\n                  })}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </div>\n          }\n        </div>\n      </Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactTable from 'react-table';\nimport selectTableHOC from \"react-table/lib/hoc/selectTable\";\nimport DataTablePagination from \"./DatatablePagination\";\nimport dynamicFunctions from './functions';\n\n\nconst SelectTable = selectTableHOC(ReactTable);\n\n\nexport default class Table extends React.Component {\n\n  static defaultProps = {\n    keyField: \"id\"\n  }\n\n  state = {\n    selectAll: false,\n    selection: []\n  }\n\n  renderFunctions() {\n    let { component: { functions } } = this.props;\n    \n    if(functions) {\n        functions = functions.map( functionName => {\n            if(functionName in dynamicFunctions) {\n                return dynamicFunctions[functionName]();\n            }\n            return null;\n        }).filter( functionName => functionName !== null );\n    } else {\n        functions = [];\n    }\n    return functions;\n  }\n\n  toggleSelection = (key, shift, row) => {\n    // start off with the existing state\n    let selection = [...this.state.selection];\n    const keyIndex = selection.indexOf(key);\n\n    // check to see if the key exists\n    if (keyIndex >= 0) {\n      // it does exist so we will remove it using destructing\n      selection = [\n        ...selection.slice(0, keyIndex),\n        ...selection.slice(keyIndex + 1)\n      ];      \n    } else {\n      // it does not exist so add it\n      selection.push(key);\n    }\n    // update the state\n    this.setState({ selection });\n  }\n\n  toggleAll = () => {\n    const { keyField } = this.props;\n    const selectAll = !this.state.selectAll;\n    const selection = [];\n\n    if (selectAll) {\n      // we need to get at the internals of ReactTable\n      const wrappedInstance = this.checkboxTable.getWrappedInstance();\n      // the 'sortedData' property contains the currently accessible records based on the filter and sort\n      const currentRecords = wrappedInstance.getResolvedState().sortedData;\n      // we just push all the IDs onto the selection array\n      currentRecords.forEach(item => {\n        selection.push(`select-${item._original[keyField]}`);\n      });\n    }\n    this.setState({ selectAll, selection });\n  }\n\n  isSelected = key => {\n    return this.state.selection.includes(`select-${key}`);\n  }\n\n  rowFn = (state, rowInfo, column, instance) => {\n    const { selection } = this.state;\n\n    return {\n      onClick: (e, handleOriginal) => {\n        // IMPORTANT! React-Table uses onClick internally to trigger\n        // events like expanding SubComponents and pivots.\n        // By default a custom 'onClick' handler will override this functionality.\n        // If you want to fire the original onClick handler, call the\n        // 'handleOriginal' function.\n        if (handleOriginal) {\n          handleOriginal();\n        }\n      },\n      style: {\n        background:\n          rowInfo &&\n          selection.includes(`select-${rowInfo.original.id}`) &&\n          \"#bbb\"\n      }\n    };\n  }\n\n  render() {\n\n    const { component } = this.props;\n    const { legend } = component;\n\n    let columns = component.columns.map(function (column) {\n      return {\n        Header: column.label,\n        accessor: column.identifier\n      };\n    });\n  \n    return (\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <div className=\"card-title\">\n            <span>{legend.charAt(0).toUpperCase() + legend.slice(1)}</span>\n          </div>\n          <SelectTable { ...this.props } ref={r => (this.checkboxTable = r)} toggleSelection={this.toggleSelection} selectAll={this.state.selectAll} selectType=\"checkbox\" toggleAll={this.toggleAll} isSelected={this.isSelected} getTrProps={this.rowFn} className=\"react-table -highlight\" defaultPageSize={component.data.length} columns={columns} data={component.data} PaginationComponent={DataTablePagination} />\n          <div className=\"row justify-content-end mt-5 mx-5\">\n              { this.renderFunctions() }\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n\n};","import React from 'react';\nimport { Button, Modal, ModalBody } from 'reactstrap';\nimport { fetch } from '../../helpers/Utils';\n\nclass RightModal extends React.Component {\n\n    state = {\n        isOpen: false\n    }\n    \n    toggle = () => this.setState({ isOpen: !this.state.isOpen });\n\n    generateReport() {\n        const { token, baseURL } = this.props;\n        return fetch(`${baseURL}/api/generateReport`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Authorization': `Bearer ${token}`\n            }\n        })\n        .then(response => response.json())\n        .catch(error => console.error(error));\n    }\n\n    generateNotificationWithExternalNotification() {\n        const { token, baseURL } = this.props;\n        return fetch(`${baseURL}/api/generateNotificationWithExternalNotification`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Authorization': `Bearer ${token}`\n            }\n        })\n        .then(response => response.json())\n        .catch(error => console.error(error));\n    }\n\n    generateFileSavingNotification() {\n        const { token, baseURL } = this.props;\n        return fetch(`${baseURL}/api/generateFileSavingNotification`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Authorization': `Bearer ${token}`\n            }\n        })\n        .then(response => response.json())\n        .catch(error => console.error(error));\n    }\n\n    render() {\n        const { className } = this.props;\n        const { isOpen } = this.state;\n        const externalCloseBtn = <button className=\"close right-modal-external-close-button\" onClick={ () => this.toggle() }>&times;</button>;\n        return (\n            <div>\n                <Button color=\"primary\" className=\"right-modal-toggler\" onClick={ () => this.toggle() }><span className=\"layer\"></span></Button>\n                <Modal isOpen={isOpen} fade={false} toggle={ () => this.toggle() } modalClassName={className} external={externalCloseBtn}>\n                    <ModalBody>\n                        <p><b>Look at the top right of the page/viewport!</b><br />\n                        Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n                        <Button onClick={ () => this.generateReport() } color=\"primary\">Generate Data</Button>\n                        <Button className=\"my-2\" onClick={ () => this.generateNotificationWithExternalNotification() } color=\"primary\">Generate Notification With External Link</Button>\n                        <Button onClick={ () => this.generateFileSavingNotification() } color=\"primary\">Generate File Saving Notification</Button>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\n\nexport default RightModal;","import React from \"react\";\nimport classnames from \"classnames\";\nconst ThumbnailImage = (props) => {\n    const { alt, src, className, rounded, small } = props;\n  return (\n    <img\n      alt={alt}\n      src={src}\n      className={`img-thumbnail list-thumbnail align-self-center ${\n        className\n      }  ${classnames({\n        \"rounded-circle\": rounded,\n        small: small\n      })}`}\n    />\n  );\n};\n\nexport default ThumbnailImage;\n","import React, { Component } from \"react\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport { injectIntl } from \"react-intl\";\nimport {\n    Card,\n    CardBody,\n    CardSubtitle,\n    CardText,\n    Row,\n    Modal,\n    ModalBody\n} from \"reactstrap\";\nimport ThumbnailImage from \"../cards/ThumbnailImage\";\nimport { Colxx } from \"../common/CustomBootstrap\";\nimport dynamicFunctions from './functions';\nimport classnames from \"classnames\";\n\n\nimport {\n    AreaChart,\n    LineChart,\n    BarChart,\n    PieChart,\n    DoughnutChart,\n    Table,\n    ProductCardList,\n    ProductList,\n    ProfileCard,\n    Calendar,\n    ThumbsCarousel,\n    Search,\n    Tabs\n} from './index';\nimport Validation from './wizard/Validation';\n\nclass UserCardGroup extends Component {\n\n    state = {\n        modalOpen: false,\n        elements: []\n    }\n\n    toggle(index = null) {\n        const { modalOpen } = this.state;\n        const { data } = this.props.component;\n\n        if(index !== null && Array.isArray(data[index].elements)) {\n            return this.setState({\n                modalOpen: !modalOpen,\n                elements: data[index].elements\n            });\n        }\n\n        return this.setState({\n            modalOpen: false\n        });\n\n    }\n\n\n    renderElements() {\n\n        const { elements } = this.state;\n        const transparent = false;\n\n        const components = elements.map( (element, index) => {\n\n            const { type } = element;\n            if(type === \"chart\") {\n                const { kind } = element;\n                if(kind === \"pie\") {\n                    return (\n                        <div className={ elements.length === 1 ? \"col\" : (index === 0 ? \"col-md-7\" : \"col-md-5\") } key={index}>\n                            <PieChart className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={element} />\n                        </div>\n                    );\n                }\n    \n                if(kind === \"bar\") {\n                    return (\n                        <div className={ elements.length === 1 ? \"col\" : (index === 0 ? \"col-md-7\" : \"col-md-5\") } key={index}>\n                            <BarChart className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={element} />\n                        </div>\n                    );\n                }\n    \n                if(kind === \"area\") {\n                    return (\n                        <div className={ elements.length === 1 ? \"col\" : (index === 0 ? \"col-md-7\" : \"col-md-5\") } key={index}>\n                            <AreaChart className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={element} />\n                        </div>\n                    );\n                }\n\n                if(kind === \"line\") {\n                    return (\n                        <div className={ elements.length === 1 ? \"col\" : (index === 0 ? \"col-md-7\" : \"col-md-5\") } key={index}>\n                            <LineChart className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={element} />\n                        </div>\n                    );\n                }\n\n                if(kind === \"doughnut\") {\n                    return (\n                        <div className={ elements.length === 1 ? \"col\" : (index === 0 ? \"col-md-7\" : \"col-md-5\") } key={index}>\n                            <DoughnutChart className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={element} />\n                        </div>\n                    );\n                }\n            }\n\n            if(type === \"calendar\") {\n                return (\n                    <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                        <Calendar component={element} />\n                    </div>\n                );\n            }\n\n            if(type === \"table\") {\n                return (\n                    <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                        <Table component={element} />\n                    </div>\n                );\n            }\n\n            if(type === \"card\") {\n                return (\n                    <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                        <Card {...this.props} component={element} />\n                    </div>\n                );\n              }\n    \n              if(type === \"wizard\") {\n                return (\n                    <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                        <Validation {...this.props} component={element} />\n                    </div>\n                );\n              }\n    \n              if(type === \"productCardList\") {\n                return (\n                    <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                        <ProductCardList inCard={true} {...this.props} component={element} />\n                    </div>\n                );\n              }\n    \n              if(type === \"productList\") {\n                return (\n                    <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                        <ProductList inCard={true} {...this.props} dynamicComponent={element} />\n                    </div>\n                );\n              }\n    \n              if(type === \"userCard\") {\n                return (\n                    <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                        <UserCardGroup inCard={true} {...this.props} component={element} />\n                    </div>\n                );\n              }\n    \n              if(type === \"profileCard\") {\n                return (\n                    <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                        <ProfileCard {...this.props} component={element} />\n                    </div>\n                );\n              }\n              \n              if(type === \"thumbCarousel\") {\n                const data = element.data.map( dataItem => ({ id: dataItem.id, img: dataItem.img }) );\n                  return (\n                    <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                        <ThumbsCarousel {...this.props} data={data} component={element} />\n                    </div>\n                );\n            }\n\n            if(type === \"search\") {\n                return (\n                    <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                        <Search {...this.props} component={element} />\n                    </div>\n                );\n            }\n\n            \n            if(type === \"tabs\") {\n                return (\n                    <div className={ elements.length === 1 ? \"col\" : (index === 1 ? \"col-md-5\" : \"col-md-5\") } key={index}>\n                        <Tabs {...this.props} component={element} />\n                    </div>\n                );\n            }\n  \n            return null;\n        });\n\n        return components;\n    }\n\n    renderFunctions() {\n        let { component: { functions } } = this.props;\n        \n        if(functions) {\n            functions = functions.map( functionName => {\n                if(functionName in dynamicFunctions) {\n                    return dynamicFunctions[functionName]();\n                }\n                return null;\n            }).filter( functionName => functionName !== null );\n        } else {\n            functions = [];\n        }\n        return functions;\n    }\n\n    render() {\n        const { component: { title, data }, inCard } = this.props;\n        const { modalOpen, elements } = this.state;\n\n        let modifiedData = data.map( (dataItem, index) => {\n            return (\n                <Colxx xxs=\"12\" md=\"6\" lg={inCard ? '3' : '4'} key={index}>\n                    <Card className={classnames(\"d-flex\", \"flex-row\", \"mb-4\", { \"py-3\": !!dataItem.icon })}>\n                        <NavLink to={ dataItem.redirect ? `/app${dataItem.redirect}` : \"#\"} onClick={ () => this.toggle(index) } className=\"d-flex\">\n                            {dataItem.icon ?\n                            <i className={classnames(dataItem.icon, 'h1', 'mb-0', 'px-3', 'align-self-center')}></i> :\n                            <ThumbnailImage small src={dataItem.image || 'https://gogo-react.coloredstrategies.com/assets/img/profile-pic-l-10.jpg'} alt={dataItem.title} className=\"m-4\" /> }\n                            <div className=\"d-flex flex-grow-1 min-width-zero\">\n                                <CardBody className=\" pl-0 align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero\">\n                                    <div className=\"min-width-zero\">\n                                        <CardSubtitle className=\"mb-1\">{dataItem.title}</CardSubtitle>\n                                        { dataItem.subtitle ? \n                                        <CardText className=\"text-muted text-small mb-2\">{dataItem.subtitle}</CardText>\n                                        : null\n                                        }\n                                    </div>\n                                </CardBody>\n                            </div>\n                        </NavLink>\n                    </Card>\n                </Colxx>\n            );\n        });\n\n        return (\n            <Colxx xxs=\"12\" lg={inCard ? '12' : '8'} className=\"mb-4 col-right d-inline-block align-top\">\n                <h1 className=\"font-weight-light mb-5\">{title}</h1>\n                <Row>{ modifiedData }</Row>\n                <div className=\"row justify-content-end mt-5 mx-5\">\n                    { this.renderFunctions() }\n                </div>\n\n\n\n                <Modal isOpen={modalOpen} size=\"lg\" toggle={ () => this.toggle() }>\n                    <ModalBody className=\"p-4\">\n                        { elements.length === 0 ? <div className=\"loading d-block mx-auto position-static\" /> : null }\n                        { this.renderElements() }\n                    </ModalBody>\n                </Modal>\n\n\n            </Colxx>\n        );\n    }\n}\n\nexport default withRouter(\n    injectIntl(UserCardGroup)\n);","import React, { Component, Fragment }  from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport Lightbox from 'react-image-lightbox';\n\nclass SingleLightbox extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onThumbClick = this.onThumbClick.bind(this);\n        this.state = {\n            photoIndex: 0,\n            isOpen: false,\n        };\n      }\n\n      onThumbClick() {\n        this.setState({ isOpen: true });\n    }\n\n\n    render() {\n        const { isOpen } = this.state;\n        return (\n            <Fragment>\n                <NavLink to=\"#\" location={{}} onClick={() => this.onThumbClick()}>\n                    <img src={this.props.thumb} alt=\"thumbnail\" className={this.props.className}/>\n                </NavLink>\n\n                {isOpen && (\n                    <Lightbox\n                        mainSrc={this.props.large}\n                        onCloseRequest={() => this.setState({ isOpen: false })}\n                    />\n                )}\n            </Fragment>\n        );\n    }\n}\n\nexport default SingleLightbox;","import React from 'react';\nimport Switch from 'rc-switch';\nimport { connect } from 'react-redux';\nimport { NotificationManager } from \"../common/react-notifications\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nclass TwoFactorAuthentication extends React.Component {\n\n    state = {\n        processing: false,\n        isOpen: false,\n        qrcode: ''\n    }\n\n    async checkTwoFactor(checked) {\n        let { form, field, authenticationServer, token } = this.props;\n        if(checked) {\n            this.setState({\n                processing: true\n            });\n            return await fetch(`${authenticationServer}/tfa/setup`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                }\n            })\n            .then( async (response) => {\n                this.setState({\n                    processing: false\n                  });\n                if(!response.ok) {\n                    response.json()\n                    .then( response => {\n                        throw new Error(response.message);\n                    } )\n                    .catch( error => {\n                      NotificationManager.error(\n                        error.message,\n                        \"Oops!\",\n                        3000,\n                        null,\n                        null,\n                        ''\n                      );\n                    });\n                } else {\n                    response = await response.text();\n                    this.setState({\n                        isOpen: true,\n                        qrcode: response\n                    });\n                }\n            });\n        } else {\n            this.setState({\n                processing: true\n            });\n            return await fetch(`${authenticationServer}/tfa/remove`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                }\n            })\n            .then( async (response) => {\n                this.setState({\n                    processing: false\n                  });\n                if(!response.ok) {\n                    response.json()\n                    .then( response => {\n                        throw new Error(response.message);\n                    } )\n                    .catch( error => {\n                      NotificationManager.error(\n                        error.message,\n                        \"Oops!\",\n                        3000,\n                        null,\n                        null,\n                        ''\n                      );\n                    });\n                } else {\n                    form.setFieldValue(field.name, false);\n                    NotificationManager.success(\n                        \"Two Factor Authentication has been turned off successfully.\",\n                        \"Success\",\n                        3000,\n                        null,\n                        null,\n                        ''\n                    );\n                }\n            });\n\n\n        }\n    }\n\n    async scanSuccess() {\n        this.setState({\n            processing: true\n        });\n        const { authenticationServer, token } = this.props;\n        return await fetch(`${authenticationServer}/tfa/scan-success`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'Authorization': `Bearer ${token}`\n            }\n        })\n        .then( async (response) => {\n            this.setState({\n                processing: false\n              });\n            if(!response.ok) {\n                response.json()\n                .then( response => {\n                    throw new Error(response.message);\n                } )\n                .catch( error => {\n                  NotificationManager.error(\n                    error.message,\n                    \"Oops!\",\n                    3000,\n                    null,\n                    null,\n                    ''\n                  );\n                });\n            } else {\n                NotificationManager.success(\n                    \"Two Factor Authentication has been turned on successfully.\",\n                    \"Success\",\n                    3000,\n                    null,\n                    null,\n                    ''\n                );\n            }\n        });\n    }\n\n    toggleModal() {\n        const { isOpen } = this.state;\n        return this.setState({\n            isOpen: !isOpen\n        });\n    }\n\n    cancel() {\n        const { form, field } = this.props;\n        form.setFieldValue(field.name, false);\n        return this.toggleModal();\n    }\n\n    async scanned() {\n        const { processing } = this.state;\n        let { form, field, user } = this.props;\n        if(!processing) {\n            await this.scanSuccess();\n            form.setFieldValue(field.name, true);\n            user = JSON.parse(user);\n            let updatedUser = Object.assign(user, {\n                tfaEnabled: true\n            });\n            localStorage.setItem('user', JSON.stringify(updatedUser));\n            this.toggleModal();\n            window.location.reload();\n        }\n    }\n\n    render() {\n        let { field, onKeyUp, hidden } = this.props;\n        const { isOpen, qrcode, processing } = this.state;\n        return !hidden ? (\n            <div>\n                <Modal backdrop=\"static\" centered isOpen={isOpen} toggle={ () => this.toggleModal() }>\n                    <ModalHeader>Scan QR Code</ModalHeader>\n                    <ModalBody>\n                        <div className=\"text-center\" dangerouslySetInnerHTML={{ __html: qrcode }} />\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"primary\" type=\"button\" onClick={ () => this.cancel() } outline>Cancel</Button>\n                        <Button color=\"primary\" type=\"button\" onClick={ () => this.scanned() }>{processing ? 'Processing...' : 'Scanned!'}</Button>\n                    </ModalFooter>\n                </Modal>\n                <Switch\n                    name={field.name}\n                    value={field.value}\n                    onBlur={field.onBlur}\n                    onKeyUp={ (event) => onKeyUp(event) }\n                    checked={field.value}\n                    onChange={ (checked) => {\n                        return this.checkTwoFactor(checked);\n                    } }\n                />\n            </div>\n        ) : null;\n    }\n\n}\n\nconst mapStateToProps = ({ authUser }) => {\n    const { authenticationServer, token, user } = authUser;\n    return { authenticationServer, token, user };\n};\n\nexport default connect(mapStateToProps, {})(TwoFactorAuthentication)","import React, { Component } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport {\n    Card,\n    CardBody,\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    FormGroup,\n    Label\n  } from \"reactstrap\";\nimport { Colxx } from \"../common/CustomBootstrap\";\nimport SingleLightbox from \"../pages/SingleLightbox\";\nimport { Formik, Field, Form } from \"formik\";\nimport IntlMessages from \"../../helpers/IntlMessages\";\nimport * as Yup from \"yup\";\nimport { NotificationManager } from \"../common/react-notifications\";\nimport dynamicFunctions from './functions';\nimport { fetch } from \"../../helpers/Utils\";\nimport { connect } from 'react-redux';\nimport TwoFactorAuthentication from \"./TwoFactorAuthentication\";\n\n\nfunction equalTo(ref, msg) {\n    return Yup.mixed().test({\n      name: 'equalTo',\n      exclusive: false,\n      message: msg || `${ref.path} must be the same as ${ref}`,\n      params: {\n        reference: ref.path,\n      },\n      test: function(value) {\n        return value === this.resolve(ref);\n      },\n    });\n  }\n  \n  Yup.addMethod(Yup.string, 'equalTo', equalTo);\n  \n  const editPasswordSchema = Yup.object().shape({\n    old_password: Yup.string().required('Current Password is required.'),\n    new_password: Yup.string().required('New Password is required.'),\n    new_password_confirmation: Yup.string().required('New Password Confirmation is required.').equalTo(Yup.ref('new_password'), 'Passwords must match')\n  });\n  \n  \n  const editProfileSchema = Yup.object().shape({\n    first_name: Yup.string().required(\"First Name is required!\"),\n    last_name: Yup.string().required(\"Last Name is required!\"),\n    email_address: Yup.string().email(\"Invalid email address\").required(\"Email is required!\"),\n    user_id: Yup.string().required(\"User ID is required!\"),\n    tfa_enabled: Yup.boolean()\n    // password: Yup.string(),\n    // data_creation_user: Yup.string().required(\"Data Creation User is required!\"),\n    // data_modify_user: Yup.string().required(\"Data Modify User is required!\")\n  });\n  \n\nclass ProfileCard extends Component {\n\n    state = {\n        editProfileModalOpen: false,\n        editPasswordModalOpen: false,\n        processing: false\n    }\n\n    toggleProfileModal() {\n        const { editProfileModalOpen } = this.state;\n        return this.setState({\n          editProfileModalOpen: !editProfileModalOpen\n        });\n    }\n\n    renderFunctions() {\n        let { component: { functions } } = this.props;\n        \n        if(functions) {\n            functions = functions.map( functionName => {\n                if(functionName in dynamicFunctions) {\n                    return dynamicFunctions[functionName]();\n                }\n                return null;\n            }).filter( functionName => functionName !== null );\n        } else {\n            functions = [];\n        }\n        return functions;\n    }\n    \n    togglePasswordModal() {\n        const { editPasswordModalOpen } = this.state;\n        return this.setState({\n            editPasswordModalOpen: !editPasswordModalOpen\n        });\n    }\n\n    async savePassword(values) {\n        let { baseURL, token, clientID, user } = this.props;\n        user = typeof(user) === \"string\" ? JSON.parse(user) : user;\n        this.setState({\n            processing: true\n        });\n        return await fetch(`${baseURL}/password`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({\n              old_password: values.old_password,\n              new_password: values.new_password,\n              new_password_confirmation: values.new_password_confirmation,\n              client_id: clientID\n            })\n        })\n        .then( (response) => {\n            if(!response.ok) {\n                response.json()\n                .then( response => {\n                    this.setState({\n                        processing: false\n                    });\n                    throw new Error(response.message);\n                } )\n                .catch( error => {\n                  this.setState({\n                    processing: false\n                  });\n                  NotificationManager.error(\n                    error.message,\n                    \"Oops!\",\n                    3000,\n                    null,\n                    null,\n                    ''\n                  );\n                });\n            } else {\n                this.setState({\n                    processing: false,\n                    editPasswordModalOpen: false\n                });\n                NotificationManager.success(\n                  \"Your password has been updated successfully.\",\n                  \"Success\",\n                  3000,\n                  null,\n                  null,\n                  ''\n                );\n            }\n        });\n    }\n    \n    async saveProfile(values) {\n        let { baseURL, token, clientID, user } = this.props;\n        user = typeof(user) === \"string\" ? JSON.parse(user) : user;\n        this.setState({\n            processing: true\n        });\n        return await fetch(`${baseURL}/profile`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({\n              ...values,\n              client_id: clientID\n            })\n        })\n        .then( async (response) => {\n            if(!response.ok) {\n                response.json()\n                .then( response => {\n                    this.setState({\n                        processing: false\n                    });\n                    throw new Error(response.message);\n                } )\n                .catch( error => {\n                  this.setState({\n                    processing: false\n                  });\n                  NotificationManager.error(\n                    error.message,\n                    \"Oops!\",\n                    3000,\n                    null,\n                    null,\n                    ''\n                  );\n                });\n            } else {\n                this.setState({\n                    processing: false,\n                    editProfileModalOpen: false\n                });\n                let updatedResponse = await response.json();\n                let responseUser = updatedResponse.user;\n                delete responseUser.password;\n                let updatedUser = Object.assign(user, responseUser);\n                localStorage.setItem('user', JSON.stringify(updatedUser));\n                NotificationManager.success(\n                  \"Your profile has been updated successfully.\",\n                  \"Success\",\n                  3000,\n                  null,\n                  null,\n                  ''\n                );\n                window.location.reload();\n            }\n        });\n    }\n\n    render() {\n        let { user, component: { title } } = this.props;\n        user = typeof(user) === \"string\" ? JSON.parse(user) : user;\n        const { editProfileModalOpen, editPasswordModalOpen, processing } = this.state;\n        return (\n            <Colxx xxs=\"12\" lg=\"4\" className=\"d-inline-block align-top\">\n            <h1 className=\"font-weight-light mb-5\">{title}</h1>\n            <Card className=\"mb-4\">\n                {/* <div className=\"position-absolute card-top-buttons\">\n                <Button outline color={\"white\"} className=\"icon-button\">\n                    <i className=\"simple-icon-pencil\" />\n                </Button>\n                </div> */}\n                <SingleLightbox thumb={user.image} large={user.image} className=\"card-img-top\" />\n                <CardBody>\n                { user.bio ? \n                <div>\n                    <p className=\"text-muted text-small mb-2\"><IntlMessages id=\"profile.about\" /></p>\n                    <p className=\"mb-3\">{user.bio}</p>\n                </div> : null }\n                \n                <div className=\"d-flex justify-content-around\">\n                    <Button size=\"sm\" color=\"primary\" outline onClick={ () => this.togglePasswordModal() }>Edit Password</Button>\n                    <Button size=\"sm\" color=\"primary\" onClick={ () => this.toggleProfileModal() }>Edit Profile</Button>\n                </div>\n\n                <Modal backdrop=\"static\" contentClassName=\"py-5 px-4\" centered isOpen={editPasswordModalOpen} toggle={ () => this.togglePasswordModal() }>\n                    <Formik\n                    initialValues={{\n                        old_password: \"\",\n                        new_password: \"\",\n                        new_password_confirmation: \"\"\n                    }}\n                    validationSchema={editPasswordSchema}\n                    onSubmit={ (values) => this.savePassword(values) }\n                    >\n                        {( { errors, touched } ) => (\n                        <Form className=\"av-tooltip tooltip-label-bottom\">\n                            <ModalHeader tag=\"div\" className=\"border-bottom-0 pb-0\">\n                                <span className=\"logo-single\" />\n                                <h4 className=\"mb-0\">Reset Password</h4>\n                            </ModalHeader>\n                            <ModalBody>\n                                <FormGroup className=\"form-group has-float-label\">\n                                <Label>Current Password</Label>\n                                <Field className=\"form-control\" name=\"old_password\" type=\"password\" />\n                                {errors.old_password && touched.old_password && (\n                                    <div className=\"invalid-feedback d-block\">\n                                        {errors.old_password}\n                                    </div>\n                                )}\n                                </FormGroup>\n                                <FormGroup className=\"form-group has-float-label\">\n                                <Label>New Password</Label>\n                                <Field className=\"form-control\" name=\"new_password\" type=\"password\" />\n                                {errors.new_password && touched.new_password && (\n                                    <div className=\"invalid-feedback d-block\">\n                                        {errors.new_password}\n                                    </div>\n                                )}\n                                </FormGroup>\n                                <FormGroup className=\"form-group has-float-label\">\n                                <Label>New Password Again</Label>\n                                <Field className=\"form-control\" name=\"new_password_confirmation\" type=\"password\" />\n                                {errors.new_password_confirmation && touched.new_password_confirmation && (\n                                    <div className=\"invalid-feedback d-block\">\n                                        {errors.new_password_confirmation}\n                                    </div>\n                                )}\n                                </FormGroup>\n                            </ModalBody>\n                            <ModalFooter>\n                                <Button color=\"primary\" type=\"button\"  onClick={ () => this.togglePasswordModal() } outline>Cancel</Button>\n                                <Button color=\"primary\" type=\"submit\" size=\"lg\">{processing ? 'Processing...' : 'Reset'}</Button>\n                            </ModalFooter>\n                        </Form>\n                        )}\n                    </Formik>\n                    </Modal>\n                \n                <Modal backdrop=\"static\" centered isOpen={editProfileModalOpen} toggle={ () => this.toggleProfileModal() }>\n                    <Formik\n                    initialValues={{\n                        first_name: user.first_name,\n                        last_name: user.last_name,\n                        email_address: user.email_address,\n                        user_id: user.user_id,\n                        tfa_enabled: user.tfaEnabled\n                    }}\n                    validationSchema={editProfileSchema}\n                    onSubmit={ (values) => this.saveProfile(values) }\n                    >\n                        {( { errors, touched } ) => (\n                        <Form className=\"av-tooltip tooltip-label-bottom\">\n                            <ModalHeader>Edit Profile</ModalHeader>\n                            <ModalBody>\n                                <FormGroup className=\"form-group has-float-label\">\n                                <Label>First Name</Label>\n                                <Field className=\"form-control\" name=\"first_name\" />\n                                {errors.first_name && touched.first_name ? (\n                                    <div className=\"invalid-feedback d-block\">\n                                    {errors.first_name}\n                                    </div>\n                                ) : null}\n                                </FormGroup>\n                                <FormGroup className=\"form-group has-float-label\">\n                                <Label>Last Name</Label>\n                                <Field className=\"form-control\" name=\"last_name\" />\n                                {errors.last_name && touched.last_name ? (\n                                    <div className=\"invalid-feedback d-block\">\n                                    {errors.last_name}\n                                    </div>\n                                ) : null}\n                                </FormGroup>\n                                <FormGroup className=\"form-group has-float-label\">\n                                <Label>E-mail Address</Label>\n                                <Field className=\"form-control\" name=\"email_address\" />\n                                {errors.email_address && touched.email_address ? (\n                                    <div className=\"invalid-feedback d-block\">\n                                    {errors.email_address}\n                                    </div>\n                                ) : null}\n                                </FormGroup>\n                                <FormGroup className=\"form-group has-float-label\">\n                                <Label>User ID</Label>\n                                <Field className=\"form-control\" name=\"user_id\" />\n                                {errors.user_id && touched.user_id ? (\n                                    <div className=\"invalid-feedback d-block\">\n                                    {errors.user_id}\n                                    </div>\n                                ) : null}\n                                </FormGroup>\n\n                                <FormGroup className=\"form-group\">\n                                    <div className=\"row\">\n                                        <div className=\"col\">\n                                            <Label>Two-Factor Authentication</Label>\n                                        </div>\n                                        <div className=\"col text-right\">\n                                            <Field\n                                                name=\"tfa_enabled\"\n                                                component={TwoFactorAuthentication}\n                                            />\n                                        </div>\n                                    </div>\n                                </FormGroup>\n\n                                {/* <FormGroup className=\"form-group has-float-label\">\n                                <Label>Data Creation User</Label>\n                                <Field className=\"form-control\" name=\"data_creation_user\" />\n                                {errors.data_creation_user && touched.data_creation_user ? (\n                                    <div className=\"invalid-feedback d-block\">\n                                    {errors.data_creation_user}\n                                    </div>\n                                ) : null}\n                                </FormGroup>\n                                <FormGroup className=\"form-group has-float-label\">\n                                <Label>Data Modify User</Label>\n                                <Field className=\"form-control\" name=\"data_modify_user\" />\n                                {errors.data_modify_user && touched.data_creation_user ? (\n                                    <div className=\"invalid-feedback d-block\">\n                                    {errors.data_modify_user}\n                                    </div>\n                                ) : null}\n                                </FormGroup> */}\n                            </ModalBody>\n                            <ModalFooter>\n                                <Button color=\"primary\" type=\"button\"  onClick={ () => this.toggleProfileModal() } outline>Cancel</Button>\n                                <Button color=\"primary\" type=\"submit\">{processing ? 'Processing...' : 'Save Profile'}</Button>\n                            </ModalFooter>\n                        </Form>\n                        )}\n                    </Formik>\n                    </Modal>\n                    <div className=\"row justify-content-end mt-5 mx-5\">\n                        { this.renderFunctions() }\n                    </div>\n                </CardBody>\n            </Card>\n            </Colxx>    \n        );\n    }\n}\n\n\n\nconst mapStateToProps = ({ authUser }) => {\n    const { authenticationServer } = authUser;\n    return { authenticationServer };\n};\n\nexport default injectIntl(\n    connect(\n        mapStateToProps,\n        {}\n    )(ProfileCard)\n);","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport Glide from '@glidejs/glide'\nimport { getDirection } from \"../../helpers/Utils\";\nimport \"@glidejs/glide/dist/css/glide.core.min.css\";\nimport \"@glidejs/glide/dist/css/glide.theme.min.css\";\n\nlet resizeTimeOut = -1;\nlet mountTimeOut = -1;\n\nexport default class GlideComponentThumbs extends React.Component {\n  static propTypes = {\n    settingsImages: PropTypes.shape({\n      type: PropTypes.string,\n      startAt: PropTypes.number,\n      perView: PropTypes.number,\n      focusAt: PropTypes.number,\n      gap: PropTypes.number,\n      autoplay: PropTypes.bool,\n      hoverpause: PropTypes.bool,\n      keyboard: PropTypes.bool,\n      bound: PropTypes.bool,\n      swipeThreshold: PropTypes.oneOf([PropTypes.number, PropTypes.bool]),\n      dragThreshold: PropTypes.oneOf([PropTypes.number, PropTypes.bool]),\n      perTouch: PropTypes.oneOf([PropTypes.number, PropTypes.bool]),\n      touchRatio: PropTypes.number,\n      touchAngle: PropTypes.number,\n      animationDuration: PropTypes.number,\n      rewind: PropTypes.bool,\n      rewindDuration: PropTypes.number,\n      animationTimingFunc: PropTypes.string,\n      direction: PropTypes.string,\n      peek: PropTypes.object,\n      breakpoints: PropTypes.object,\n      classes: PropTypes.object,\n      throttle: PropTypes.number,\n      data: PropTypes.array,\n    }),\n    settingsThumbs: PropTypes.shape({\n      type: PropTypes.string,\n      startAt: PropTypes.number,\n      perView: PropTypes.number,\n      focusAt: PropTypes.number,\n      gap: PropTypes.number,\n      autoplay: PropTypes.bool,\n      hoverpause: PropTypes.bool,\n      keyboard: PropTypes.bool,\n      bound: PropTypes.bool,\n      swipeThreshold: PropTypes.oneOf([PropTypes.number, PropTypes.bool]),\n      dragThreshold: PropTypes.oneOf([PropTypes.number, PropTypes.bool]),\n      perTouch: PropTypes.oneOf([PropTypes.number, PropTypes.bool]),\n      touchRatio: PropTypes.number,\n      touchAngle: PropTypes.number,\n      animationDuration: PropTypes.number,\n      rewind: PropTypes.bool,\n      rewindDuration: PropTypes.number,\n      animationTimingFunc: PropTypes.string,\n      direction: PropTypes.string,\n      peek: PropTypes.object,\n      breakpoints: PropTypes.object,\n      classes: PropTypes.object,\n      throttle: PropTypes.number,\n      data: PropTypes.array,\n    }),\n    id: PropTypes.string,\n    className: PropTypes.string\n  };\n\n  settingsThumbs =  {\n    bound: true,\n    rewind: false,\n    focusAt: 0,\n    startAt: 0,\n    gap: 10,\n    perView: 5,\n    data: this.props.data,\n    breakpoints: {\n      576: {\n        perView: 4\n      },\n      420: {\n        perView: 3\n      }\n    }\n  }\n\n  settingsImages = {\n    bound: true,\n    rewind: false,\n    focusAt: 0,\n    startAt: 0,\n    gap: 5,\n    perView: 1,\n    data: this.props.data,\n  }\n\n  constructor(props) {\n    super(props);\n    this.onResize = this.onResize.bind(this);\n    this.thumbsResize = this.thumbsResize.bind(this);\n    this.onThumbClick = this.onThumbClick.bind(this);\n    this.imagesSwipeEnd = this.imagesSwipeEnd.bind(this);\n    this.renderDots = this.renderDots.bind(this);\n    this.updateThumbBreakpoints = this.updateThumbBreakpoints.bind(this);\n    this.state = {\n      total: this.settingsImages.data.length,\n      activeIndex: 0,\n      thumbsPerView: Math.min(this.settingsThumbs.perView, this.settingsImages.data.length),\n      renderArrows: true\n    };\n    this.updateThumbBreakpoints();\n  }\n\n  updateThumbBreakpoints() {\n    let thumbBreakpoints = this.settingsThumbs.breakpoints;\n    let newBreakpoints = {};\n    for (var prop in thumbBreakpoints) {\n      newBreakpoints[prop] = { \"perView\": Math.min(thumbBreakpoints[prop][\"perView\"], this.state.total) }\n    }\n    this.settingsThumbs.breakpoints = newBreakpoints;\n  }\n\n  onThumbClick(index) {\n    this.setState({activeIndex: index});\n    this.glideCarouselImages.go(\"=\" + index);\n  }\n\n  thumbsResize () {\n    let perView = Math.min(this.settingsThumbs.perView, this.settingsImages.data.length);\n    this.setState({thumbsPerView: perView});\n    if (this.state.total <= perView ) {\n      this.setState({renderArrows: false});\n    }\n  }\n\n  imagesSwipeEnd () {\n    let gap = this.glideCarouselThumbs.index + this.state.thumbsPerView;\n    this.setState({activeIndex: this.glideCarouselImages.index});\n    if (this.state.activeIndex >= gap) {\n      this.glideCarouselThumbs.go(\">\");\n    }\n    if (this.state.activeIndex < this.glideCarouselThumbs.index) {\n      this.glideCarouselThumbs.go(\"<\");\n    }\n  }\n\n  componentDidMount() {\n    this.glideCarouselImages = new Glide(this.carouselImages, { ...this.settingsImages, direction: getDirection().direction });\n    this.glideCarouselImages.mount();\n\n    this.glideCarouselThumbs = new Glide(this.carouselThumbs, { ...this.settingsThumbs, direction: getDirection().direction });\n    this.glideCarouselThumbs.mount();\n\n    this.glideCarouselThumbs.on(\"resize\", this.thumbsResize);\n    this.glideCarouselImages.on(\"swipe.end\", this.imagesSwipeEnd);\n    \n    mountTimeOut = setTimeout(() => {\n      var event = document.createEvent(\"HTMLEvents\");\n      event.initEvent(\"resize\", false, false);\n      window.dispatchEvent(event);\n      this.glideCarouselImages.on(\"resize\", this.onResize);\n    }, 500);\n  }\n\n  componentWillUnmount() {\n    clearTimeout(resizeTimeOut);\n    clearTimeout(mountTimeOut);\n    this.glideCarouselImages.destroy();\n    this.glideCarouselThumbs.destroy();\n  }\n\n  onResize() {\n    clearTimeout(resizeTimeOut);\n    resizeTimeOut = setTimeout(() => {\n      this.glideCarouselImages.update();\n      this.glideCarouselThumbs.update();\n      resizeTimeOut = -1;\n    }, 500);\n  }\n\n  renderDots() {\n    let dots = [];\n    for (let i = 0; i < this.state.total; i++) {\n      dots.push(\n        <button className=\"glide__bullet slider-dot\" key={i} data-glide-dir={\"=\" + i}></button>\n      );\n    }\n    return dots;\n  }\n\n  render() {\n    const { transparent } = this.props;\n    return (\n      <div className={transparent ? \"p-5 bg-white rounded glide\" : \"p-5\"}>\n        <div className=\"glide details\" ref={node => this.carouselImages = node}>\n          <div data-glide-el=\"track\" className=\"glide__track\">\n            <div className=\"glide__slides\">\n              {\n                this.settingsImages.data.map( (item, index) => {\n                  return (\n                    <div key={index}>\n                      <div className=\"glide__slide text-center\">\n                        <img alt=\"detail\" src={item.img || 'https://gogo-react.coloredstrategies.com/assets/img/card-thumb-3.jpg'}\n                          className=\"responsive border-0 rounded-lg img-fluid mb-3\" />\n                      </div>\n                    </div>\n                  );\n                })\n              }\n            </div>\n          </div>\n        </div>\n\n        <div className=\"glide thumbs\" ref={node => this.carouselThumbs = node}>\n          <div data-glide-el=\"track\" className=\"glide__track\">\n            <div className=\"glide__slides\">\n              {\n                this.settingsThumbs.data.map( (item, index) => {\n                  return (\n                    <div className={index === this.state.activeIndex ? \"glide__slide active\" : \"glide__slide\"} key={index} onClick={() => {this.onThumbClick(index)}}>\n                      <img alt=\"detail\" src={item.img || 'https://gogo-react.coloredstrategies.com/assets/img/card-thumb-3.jpg'}\n                        className=\"responsive rounded-lg img-fluid\" />\n                    </div>\n                  );\n                })\n              }\n            </div>\n          </div>\n          {this.state.renderArrows &&  (\n            <div className=\"glide__arrows\" data-glide-el=\"controls\">\n              <button className=\"glide__arrow glide__arrow--left\" data-glide-dir=\"<\"><i\n              className=\"simple-icon-arrow-left\"></i></button>\n              <button className=\"glide__arrow glide__arrow--right\" data-glide-dir=\">\"><i\n              className=\"simple-icon-arrow-right\"></i></button>\n            </div>\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n","\nimport React, { Component } from \"react\";\nimport DataTablePagination from \"./DatatablePagination\";\n// import { servicePath, searchPath } from \"../constants/defaultValues\";\nimport dynamicFunctions from './functions';\nimport { fetch } from \"../../helpers/Utils\";\nimport ThumbnailImage from \"../cards/ThumbnailImage\";\nimport classnames from \"classnames\";\n\nclass Search extends Component {\n\n    state = {\n        data: null,\n        currentPage: 0,\n        perPage: 10,\n        totalPages: 1\n    }\n\n    renderFunctions() {\n        let { component: { functions } } = this.props;\n        if(functions) {\n            functions = functions.map( functionName => {\n                if(functionName in dynamicFunctions) {\n                    return dynamicFunctions[functionName]();\n                }\n                return null;\n            }).filter( functionName => functionName !== null );\n        } else {\n            functions = [];\n        }\n        return functions;\n    }\n\n    getData = async () => {\n        const { baseURL, token, slug, clientID, component } = this.props;\n        return await fetch(`${baseURL}/details?page_slug=${slug}&elementID=${component.id}&elementType=search&client_id=${clientID}`, {\n            headers: {\n                'Authorization': `Bearer ${token}`\n            }\n        })\n            .then( response => response.json() )\n            .then( response => {\n                this.setState({ \n                    currentPage: response.page,\n                    data: response.data,\n                    perPage: response.pageSize,\n                    totalPages: response.total_pages\n                });\n            })\n            .catch( error => console.error(error) );\n    }\n\n    async componentDidMount() {\n        return await this.getData();\n    }\n\n    extractContent(s) {\n        const span = document.createElement('span');\n        span.innerHTML = s;\n        return span.textContent || span.innerText;\n    };\n\n    renderData = (isSmall) => {\n        let { data } = this.state;\n        let content = data.map( (dataItem) => {\n            return (\n                <div key={dataItem.id} aria-current=\"page\" className={classnames('row', 'align-items-center', 'justify-content-center', 'mb-4', 'active')}>\n                    <div className={classnames({ \"col-md-3\": !isSmall || false }, { \"col-md-2\": isSmall || false }, { \"text-center\": isSmall || false })}>\n                        <ThumbnailImage small={isSmall || false} rounded={isSmall || false} className=\"p-0\" alt={dataItem.title} src={dataItem.image} />\n                    </div>\n                    <div className={classnames({ \"col-md-9\": !isSmall || false }, { \"col-md-10\": isSmall || false })}>\n                        <p className=\"list-item-heading mb-1\">{dataItem.title}</p>\n                        <div style={{ fontSize: 10 }} dangerouslySetInnerHTML={{ __html: this.extractContent(dataItem.description).substring(0, 80) }} className=\"mb-1 text-small\"></div>\n                        <p className=\"text-primary text-small mb-0\">{dataItem.date}</p>\n                    </div>\n                </div>\n            );\n        });\n        return content;\n    }\n\n    async onPageChange(page) {\n        const { baseURL, token, slug, clientID, component } = this.props;\n        return await fetch(`${baseURL}/details?page_slug=${slug}&elementID=${component.id}&elementType=search&client_id=${clientID}&currentPage=${page+1}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            })\n            .then( response => response.json() )\n            .then( response => {\n                this.setState({\n                    currentPage: response.current_page,\n                    data: response.data,\n                    perPage: response.per_page,\n                    totalPages: response.last_page\n                });\n            })\n            .catch( error => console.error(error) );\n    }\n\n    render() {\n        const { data, currentPage, totalPages } = this.state;\n        const { component: { title, isSmall } } = this.props;\n        if(data) {\n            return (\n                <div className=\"bg-white pb-2 pt-4 px-4 rounded-lg shadow-sm\">\n                    <h2 className=\"mb-3\">{title ? title.charAt(0).toUpperCase() + title.slice(1) : null}</h2>\n                    { this.renderData(isSmall) }\n                    {/* <div className=\"row justify-content-end mt-5 mx-5\">\n                        { this.renderFunctions() }\n                    </div> */}\n                    { this.state.data.length >= this.state.perPage ? <DataTablePagination canNext canPrevious onPageChange={ (page) => this.onPageChange(page) } page={currentPage - 1} pages={totalPages} /> : null }\n                </div>\n            );\n        }\n\n        return null;\n    }\n}\n\nexport default Search;","\nimport React, { Component } from \"react\";\nimport { Row, Card, CardHeader, CardBody, TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\nimport classnames from 'classnames';\nimport { Colxx } from \"../common/CustomBootstrap\";\nimport {\n    AreaChart,\n    LineChart,\n    BarChart,\n    PieChart,\n    DoughnutChart,\n    Table,\n    ProductCardList,\n    ProductList,\n    UserCardGroup,\n    ProfileCard,\n    Calendar,\n    ThumbsCarousel,\n    Search,\n    ProductDescriptionText\n} from './index';\nimport Validation from './wizard/Validation';\nimport dynamicFunctions from './functions';\n\n\nclass Tabs extends Component {\n\n    state = {\n        activeTab: null\n    }\n\n    componentDidMount() {\n        const { tabs } = this.props.component;\n        return this.setState({\n            activeTab: tabs[0].id\n        });\n    }\n\n    renderFunctions() {\n        let { component: { functions } } = this.props;\n        \n        if(functions) {\n            functions = functions.map( functionName => {\n                if(functionName in dynamicFunctions) {\n                    return dynamicFunctions[functionName]();\n                }\n                return null;\n            }).filter( functionName => functionName !== null );\n        } else {\n            functions = [];\n        }\n        return functions;\n    }\n\n    toggleTab = (tab) => {\n        const { activeTab } = this.state;\n        if(activeTab !== tab) {\n            this.setState({\n                activeTab: tab\n            });\n        }\n    }\n\n    render() {\n        const { activeTab } = this.state;\n        const { tabs } = this.props.component;\n        return (\n            <div>\n                  <Card className=\"mb-4\">\n                  <CardHeader>\n                    <Nav tabs className=\"card-header-tabs\">\n                        {tabs.map( (tab, tabIndex) => {\n                            return (\n                                <NavItem key={tabIndex}>\n                                    <NavLink\n                                    className={classnames({\n                                        active: activeTab === tab.id,\n                                        \"nav-link\": true\n                                    })}\n                                    onClick={() => { this.toggleTab(tab.id); }} to=\"#\" location={{}} >\n                                        {tab.title}\n                                    </NavLink>\n                                </NavItem>\n                            );\n                        })}\n                    </Nav>\n                  </CardHeader>\n\n                  <TabContent activeTab={activeTab}>\n                      {tabs.map(tab => {\n                          const children = tab.children;\n                          return (\n                            <TabPane key={tab.id} tabId={tab.id}>\n                                <Row>\n                                    <Colxx sm=\"12\">\n                                        <CardBody>\n\n\n                                            {children.map( (child, index) => {\n                                                const { type } = child;\n                                                const transparent = false;\n                                                if(type === \"chart\") {\n                                                    const { kind } = child;\n                                                    if(kind === \"pie\") {\n                                                        return (\n                                                                <PieChart key={index} className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={child} />\n                                                        );\n                                                    }\n                                        \n                                                    if(kind === \"bar\") {\n                                                        return (\n                                                                <BarChart key={index} className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={child} />\n                                                        );\n                                                    }\n                                        \n                                                    if(kind === \"area\") {\n                                                        return (\n                                                                <AreaChart key={index} className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={child} />\n                                                        );\n                                                    }\n\n                                                    if(kind === \"line\") {\n                                                        return (\n                                                                <LineChart key={index} className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={child} />\n                                                        );\n                                                    }\n\n                                                    if(kind === \"doughnut\") {\n                                                        return (\n                                                                <DoughnutChart key={index} className={!transparent ? \"shadow-none\" : null} shadow={transparent} component={child} />\n                                                        );\n                                                    }\n                                                }\n\n                                                if(type === \"calendar\") {\n                                                    return (\n                                                            <Calendar key={index} component={child} />\n                                                    );\n                                                }\n\n                                                \n                                                if(type === \"productDescriptionText\") {\n                                                    return (\n                                                        <ProductDescriptionText key={index} {...this.props} component={child} />\n                                                    );\n                                                }\n\n                                                if(type === \"table\") {\n                                                    return (\n                                                            <Table key={index} component={child} />\n                                                    );\n                                                }\n\n                                                if(type === \"card\") {\n                                                    return (\n                                                            <Card key={index} {...this.props} component={child} />\n                                                    );\n                                                }\n                                        \n                                                if(type === \"wizard\") {\n                                                    return (\n                                                            <Validation key={index} {...this.props} component={child} />\n                                                    );\n                                                }\n                                        \n                                                if(type === \"productCardList\") {\n                                                    return (\n                                                            <ProductCardList inCard={true} key={index} {...this.props} component={child} />\n                                                    );\n                                                }\n                                        \n                                                if(type === \"productList\") {\n                                                    return (\n                                                            <ProductList inCard={true} key={index} {...this.props} dynamicComponent={child} />\n                                                    );\n                                                }\n                                        \n                                                if(type === \"userCard\") {\n                                                    return (\n                                                            <UserCardGroup {...this.props} key={index} component={child} />\n                                                    );\n                                                }\n                                        \n                                                if(type === \"profileCard\") {\n                                                    return (\n                                                            <ProfileCard {...this.props} component={child} />\n                                                    );\n                                                }\n                                                \n                                                if(type === \"thumbCarousel\") {\n                                                    const data = child.data.map( dataItem => ({ id: dataItem.id, img: dataItem.img }) );\n                                                    return (\n                                                            <ThumbsCarousel {...this.props} key={index} data={data} component={child} />\n                                                    );\n                                                }\n\n                                                if(type === \"search\") {\n                                                    return (\n                                                            <Search {...this.props} key={index} component={child} />\n                                                    );\n                                            }\n\n                                            \n                                            if(type === \"tabs\") {\n                                                return (\n                                                        <Tabs {...this.props} key={index} component={child} />\n                                                );\n                                        }\n                                        return null;\n                                    })\n                                            }\n                                        </CardBody>\n                                        </Colxx>\n                                    </Row>\n                                </TabPane>\n                            );\n                        })}\n                  </TabContent>\n                  <div className=\"row justify-content-end mt-5 mx-5\">\n                    { this.renderFunctions() }\n                </div>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default Tabs;","import React, { Component } from \"react\";\nimport dynamicFunctions from './functions';\n\n\nclass ProductDescriptionText extends Component {\n\n    renderFunctions() {\n        let { component: { functions } } = this.props;\n        \n        if(functions) {\n            functions = functions.map( functionName => {\n                if(functionName in dynamicFunctions) {\n                    return dynamicFunctions[functionName]();\n                }\n                return null;\n            }).filter( functionName => functionName !== null );\n        } else {\n            functions = [];\n        }\n        return functions;\n    }\n\n    render() {\n        let { component: { data } } = this.props;\n        return (\n            <div>\n                <p dangerouslySetInnerHTML={{ __html: data }} />\n                <div className=\"row justify-content-end mt-5 mx-5\">\n                    { this.renderFunctions() }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ProductDescriptionText;","import React from \"react\";\nimport { Card, CardBody } from \"reactstrap\";\nimport ThumbnailImage from \"../cards/ThumbnailImage\";\nimport classnames from \"classnames\";\n\nconst IconCard = ({ component }) => {\n  \n  \n  const { data } = component;\n\n  const modifiedData = data.map( (dataItem, index) => {\n    return (\n      <div className=\"col\" key={index}>\n        <Card>\n          <CardBody className=\"text-center px-0\">\n            {\n            dataItem.icon ?\n            <i className={classnames(dataItem.icon, 'text-primary', 'h1', 'mb-0', 'px-3', 'align-self-center')} />\n            :\n            <ThumbnailImage small src={dataItem.image || 'https://gogo-react.coloredstrategies.com/assets/img/profile-pic-l-10.jpg'} alt={dataItem.title} className=\"m-4\" />\n            }\n            <p className=\"card-text font-weight-semibold my-2\">{dataItem.title}</p>\n            <p className=\"lead text-center mb-0\">{dataItem.data}</p>\n          </CardBody>\n        </Card>\n      </div>\n    );\n  });\n\n  return (\n    <div className={classnames(`row`)}>\n      {modifiedData}\n    </div>\n  );\n};\n\nexport default IconCard;","import React from 'react';\nimport { Creatable } from 'react-select';\n\nclass MultiSelect extends React.Component {\n\n    render() {\n        let { options, field, form, onChange, onKeyUp, hidden } = this.props;\n        return !hidden ? (\n            <Creatable\n            styles={{\n                menu: (provided, state) => ({\n                    ...provided,\n                    zIndex: 1040\n                })\n            }}\n            name={field.name}\n            value={field.value}\n            onBlur={field.onBlur}\n            onKeyUp={ (event) => onKeyUp(event) }\n            onChange={ (option) => {\n                form.setFieldValue(field.name, option);\n                return onChange(option);\n            } }\n            classNamePrefix=\"react-select\"\n            isMulti\n            options={options} />\n        ) : null;\n    }  \n\n}\n\n\nexport default MultiSelect;","import React from \"react\";\n\nconst DataListIcon = () => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 19 19\">\n      <path\n        className=\"view-icon-svg\"\n        d=\"M17.5,3H.5a.5.5,0,0,1,0-1h17a.5.5,0,0,1,0,1Z\"\n      />\n      <path\n        className=\"view-icon-svg\"\n        d=\"M17.5,10H.5a.5.5,0,0,1,0-1h17a.5.5,0,0,1,0,1Z\"\n      />\n      <path\n        className=\"view-icon-svg\"\n        d=\"M17.5,17H.5a.5.5,0,0,1,0-1h17a.5.5,0,0,1,0,1Z\"\n      />\n    </svg>\n  );\n};\n\nexport default DataListIcon;\n","import React from \"react\";\n\nconst ThumbListIcon = () => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 19 19\">\n      <path\n        className=\"view-icon-svg\"\n        d=\"M17.5,3H6.5a.5.5,0,0,1,0-1h11a.5.5,0,0,1,0,1Z\"\n      />\n      <path\n        className=\"view-icon-svg\"\n        d=\"M3,2V3H1V2H3m.12-1H.88A.87.87,0,0,0,0,1.88V3.12A.87.87,0,0,0,.88,4H3.12A.87.87,0,0,0,4,3.12V1.88A.87.87,0,0,0,3.12,1Z\"\n      />\n      <path\n        className=\"view-icon-svg\"\n        d=\"M3,9v1H1V9H3m.12-1H.88A.87.87,0,0,0,0,8.88v1.24A.87.87,0,0,0,.88,11H3.12A.87.87,0,0,0,4,10.12V8.88A.87.87,0,0,0,3.12,8Z\"\n      />\n      <path\n        className=\"view-icon-svg\"\n        d=\"M3,16v1H1V16H3m.12-1H.88a.87.87,0,0,0-.88.88v1.24A.87.87,0,0,0,.88,18H3.12A.87.87,0,0,0,4,17.12V15.88A.87.87,0,0,0,3.12,15Z\"\n      />\n      <path\n        className=\"view-icon-svg\"\n        d=\"M17.5,10H6.5a.5.5,0,0,1,0-1h11a.5.5,0,0,1,0,1Z\"\n      />\n      <path\n        className=\"view-icon-svg\"\n        d=\"M17.5,17H6.5a.5.5,0,0,1,0-1h11a.5.5,0,0,1,0,1Z\"\n      />\n    </svg>\n  );\n};\n\nexport default ThumbListIcon;\n","import React from \"react\";\n\nconst ImageListIcon = () => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 19 19\">\n        <path className=\"view-icon-svg\" d=\"M7,2V8H1V2H7m.12-1H.88A.87.87,0,0,0,0,1.88V8.12A.87.87,0,0,0,.88,9H7.12A.87.87,0,0,0,8,8.12V1.88A.87.87,0,0,0,7.12,1Z\" />\n        <path className=\"view-icon-svg\" d=\"M17,2V8H11V2h6m.12-1H10.88a.87.87,0,0,0-.88.88V8.12a.87.87,0,0,0,.88.88h6.24A.87.87,0,0,0,18,8.12V1.88A.87.87,0,0,0,17.12,1Z\" />\n        <path className=\"view-icon-svg\" d=\"M7,12v6H1V12H7m.12-1H.88a.87.87,0,0,0-.88.88v6.24A.87.87,0,0,0,.88,19H7.12A.87.87,0,0,0,8,18.12V11.88A.87.87,0,0,0,7.12,11Z\" />\n        <path className=\"view-icon-svg\" d=\"M17,12v6H11V12h6m.12-1H10.88a.87.87,0,0,0-.88.88v6.24a.87.87,0,0,0,.88.88h6.24a.87.87,0,0,0,.88-.88V11.88a.87.87,0,0,0-.88-.88Z\" />\n    </svg>\n  );\n};\n\nexport default ImageListIcon;\n","import React, {Fragment} from \"react\";\nconst MenuIcon = () => {\n  return (\n    <Fragment>\n      <svg className=\"main\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 9 17\">\n        <rect x=\"0.48\" y=\"0.5\" width=\"7\" height=\"1\" />\n        <rect x=\"0.48\" y=\"7.5\" width=\"7\" height=\"1\" />\n        <rect x=\"0.48\" y=\"15.5\" width=\"7\" height=\"1\" />\n      </svg>\n      <svg className=\"sub\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 18 17\">\n        <rect x=\"1.56\" y=\"0.5\" width=\"16\" height=\"1\" />\n        <rect x=\"1.56\" y=\"7.5\" width=\"16\" height=\"1\" />\n        <rect x=\"1.56\" y=\"15.5\" width=\"16\" height=\"1\" />\n      </svg>\n    </Fragment>\n  );\n};\n\nexport default MenuIcon;\n","import React from \"react\";\n\nconst MobileMenuIcon = () => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 26 17\">\n      <rect x=\"0.5\" y=\"0.5\" width=\"25\" height=\"1\" />\n      <rect x=\"0.5\" y=\"7.5\" width=\"25\" height=\"1\" />\n      <rect x=\"0.5\" y=\"15.5\" width=\"25\" height=\"1\" />\n    </svg>\n  );\n};\n\nexport default MobileMenuIcon;\n","import React, { Component } from \"react\";\nimport { WithWizard } from 'react-albus';\nimport { Button } from \"reactstrap\";\n\nexport class BottomNavigation extends Component {\n    render() {\n        const { processing } = this.props;\n        return (\n            <WithWizard render={({ next, previous, step, steps }) => (\n                <div className={\"wizard-buttons \" + this.props.className}>\n                    {\n                    steps.indexOf(step) > 0 ? \n                        <Button color=\"primary\"\n                            disabled={(steps.indexOf(step) <= 0) || processing}\n                            className={\"mr-1 \" + ((steps.indexOf(step) <= 0) || processing ? \"disabled\" : \"\")}\n                            onClick={() => { this.props.onClickPrev(previous, steps, step) }}>\n                            {this.props.prevLabel}\n                        </Button>\n                    : null }\n                    <Button color=\"primary\"\n                        disabled={processing}\n                        type=\"submit\"\n                        // type={steps.indexOf(step) >= steps.length - 1 ? \"submit\" : \"button\"}\n                        className={(processing ? \"disabled\" : \"\")}\n                        onClick={() => { this.props.onClickNext(next, steps, step) }}>\n                        { steps.indexOf(step) >= steps.length - 1 ? \"Submit\" : this.props.nextLabel}\n                    </Button>\n                </div>\n            )} />\n        )\n    }\n}\n","import React, { Component, Fragment } from \"react\";\nimport { WithWizard } from 'react-albus';\nimport { NavLink } from \"react-router-dom\";\n\nexport class TopNavigation extends Component {\n    constructor(props) {\n      super(props);\n      this.getClassName = this.getClassName.bind(this);\n      this.itemClick = this.itemClick.bind(this);\n    }\n  \n    getClassName(steps, step, index, stepItem) {\n      if (steps.indexOf(step) === index) {\n        return \"step-doing\";\n      } else if (steps.indexOf(step) > index || stepItem.isDone) {\n        stepItem.isDone = true;\n        return \"step-done\";\n      }\n    }\n  \n    itemClick(stepItem, push) {\n      if(this.props.disableNav) {\n        return;\n      }\n      this.props.topNavClick(stepItem, push)\n    }\n  \n    render() {\n      return (\n        <WithWizard render={({ next, previous, step, steps, go, push }) => (\n          <ul className={\"nav nav-tabs \" + this.props.className + (this.props.disableNav ? \" disabled\" : \"\")}>\n            {\n              steps.map((stepItem, index) => {\n                if (!stepItem.hideTopNav) {\n                  return (\n                    <li key={index} className={\"nav-item \" + this.getClassName(steps, step, index, stepItem)}>\n                      <NavLink to=\"#\" location={{}} className=\"nav-link\" onClick={()=> this.itemClick(stepItem, push)}>\n                        <span>{stepItem.name}</span>\n                        <small>{stepItem.desc}</small>\n                      </NavLink>\n                    </li>\n                  )\n                } else {\n                  return <Fragment key={index} />\n                }\n              })\n            }\n          </ul>\n        )} />\n      )\n    }\n  }","import React from 'react';\nimport { Creatable } from 'react-select';\n\nclass SingleSelect extends React.Component {\n\n    render() {\n        let { options, field, form, onChange, onKeyUp, hidden } = this.props;\n        return !hidden ? (\n            <Creatable\n            styles={{\n                menu: (provided, state) => ({\n                    ...provided,\n                    zIndex: 1040\n                })\n            }}\n            name={field.name}\n            value={options.find(option => option.value === field.value)}\n            onBlur={field.onBlur}\n            onKeyUp={ (event) => onKeyUp(event) }\n            onChange={ (option) => {\n                form.setFieldValue(field.name, option.value);\n                if(onChange) {\n                    return onChange(option);\n                }\n            } }\n            classNamePrefix=\"react-select\"\n            options={options} />\n        ) : null;\n    }  \n\n}\n\n\nexport default SingleSelect;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { UncontrolledDropdown, DropdownToggle, DropdownMenu, Table } from \"reactstrap\";\nimport { connect } from 'react-redux';\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport { NotificationManager } from \"../../components/common/react-notifications\";\nimport { logoutUser } from \"../../redux/auth/actions\";\nimport FileSaver from 'file-saver';\nimport moment from 'moment';\nimport Echo from 'laravel-echo';\nimport io from 'socket.io-client';\nimport { withRouter } from \"react-router-dom\";\nimport { DataTable, DDL, ProductCardList, ProductList, AreaChart, LineChart, PieChart, BarChart, DoughnutChart, Calendar, Card } from \"../../components/misc\";\nimport Validation from '../../components/misc/wizard/Validation';\nimport bootbox from 'bootbox';\nimport classnames from 'classnames';\nimport { fetch } from \"../../helpers/Utils\";\n\n// window.io = io;\n\n\nconst NotificationItem = ({ onClick, token, loginUser: user, baseURL, webSocketURL, clientID, clientSecret, id, image: img, message: title, payload: notificationPayload, data_creation, action, type, seen, created_at }) => {\n\n\t// const payload = JSON.stringify(notificationPayload);\n\n  const handleNotificationClick = async (event, id) => {\n    event.preventDefault();\n    onClick(id);\n    return await fetch(`${webSocketURL}/notification/${id}`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    })\n    .then( response => {\n      if(!response.ok) {\n        return response.json()\n        .then( (json) => {\n          throw new Error(json.message)\n        });\n      }\n      return response.json();\n    })\n    .then( response => {\n      const { url, type, resourceURI } = response;\n      if(type) {\n        if(type === \"externalLink\") {\n          return window.open(url, '_blank');\n        }\n        \n        if(type === \"file\") {\n          return FileSaver.saveAs(resourceURI);\n        }\n\n        if(type === \"modal\") {\n          let components = response.components.map( (component, index) => {\n            const { type: componentType, slug } = component;\n\n            if(componentType === \"datatable\") {\n              return (\n                <DataTable slug={slug} token={token} user={user} clientSecret={clientSecret} baseURL={baseURL} clientID={clientID} identifier={component.id} key={index} component={component} />\n              );\n            }\n\n            if(componentType === \"ddl\") {\n              return (\n                <DDL slug={slug} token={token} user={user} clientSecret={clientSecret} baseURL={baseURL} clientID={clientID} identifier={component.id} key={index} component={component} />\n              );\n            }\n\n            if(componentType === \"card\") {\n              return (\n                <Card slug={slug} token={token} user={user} clientSecret={clientSecret} baseURL={baseURL} clientID={clientID} identifier={component.id} key={index} component={component} />\n              );\n            }\n\n            if(componentType === \"wizard\") {\n              return (\n                <Validation slug={slug} token={token} user={user} clientSecret={clientSecret} baseURL={baseURL} clientID={clientID} identifier={component.id} key={index} component={component} />\n              );\n            }\n\n            if(componentType === \"productCardList\") {\n              return (\n                <ProductCardList slug={slug} token={token} user={user} clientSecret={clientSecret} baseURL={baseURL} clientID={clientID} identifier={component.id} key={index} component={component} />\n              );\n            }\n\n            if(componentType === \"productList\") {\n              return (\n                <ProductList slug={slug} token={token} user={user} clientSecret={clientSecret} baseURL={baseURL} clientID={clientID} identifier={component.id} key={index} component={component} />\n              );\n            }\n\n          \n\n            if(componentType === \"chart\") {\n              const { kind } = component;\n\n\n              if(kind === \"pie\") {\n                return (\n                  <div key={index}>\n                    <PieChart shadow component={component} />\n                  </div>\n                );\n              }\n\n              if(kind === \"bar\") {\n                return (\n                  <div key={index}>\n                    <BarChart shadow component={component} />\n                  </div>\n                );\n              }\n\n              if(kind === \"area\") {\n                return (\n                  <div key={index}>\n                    <AreaChart shadow component={component} />\n                  </div>\n                );\n              }\n\n              if(kind === \"line\") {\n                return (\n                  <div key={index}>\n                    <LineChart shadow component={component} />\n                  </div>\n                );\n              }\n\n              if(kind === \"doughnut\") {\n                return (\n                  <div key={index}>\n                    <DoughnutChart shadow component={component} />\n                  </div>\n                );\n              }\n\n              return (\n                <div key={index}>\n                  <AreaChart shadow component={component} />\n                </div>\n              );\n            }\n\n            if(componentType === \"calendar\") {\n              return (\n                <Calendar slug={slug} token={token} user={user} clientSecret={clientSecret} baseURL={baseURL} clientID={clientID} identifier={component.id} key={index} component={component} />\n              );\n            }\n\n\n            if(componentType === \"table\") {\n              return (\n                <Table slug={slug} token={token} user={user} clientSecret={clientSecret} baseURL={baseURL} clientID={clientID} identifier={component.id} key={index} component={component} />\n              );\n            }\n\n            return null;\n          });\n          let dialog = bootbox.dialog({\n            message: `<div class=\"loading\" />`,\n            closeButton: false,\n            backdrop: true,\n            centerVertical: true,\n            onEscape: true,\n            scrollable: true,\n            size: 'extra-large'\n          });\n          dialog.init(function() {\n            let targetContainer = dialog.find('.modal-content').addClass('modal-dialog-centered modal-dialog-scrollable').find('.modal-body').addClass('w-100').find('.bootbox-body');\n            return ReactDOM.render(components, targetContainer[0]);\n          });\n        }\n    \n\n\n        \n      }\n    \n    })\n    .catch( error => {\n      return NotificationManager.error(error.message, \"Notification Error\", 3000, null, null, '');\n    });\n  \n\n\n\n  }\n\n  const date = moment(moment.utc(data_creation).toDate()).local().fromNow();\n\n  return (\n    <a className={classnames(\"scrollbar-notification-item\", \"d-flex\", \"flex-row\", \"py-3\", \"px-4\", \"border-bottom\", { \"bg-light\": seen === \"N\" })} href=\"/\" onClick={ (event) => handleNotificationClick(event, id) }>\n      { img ? <img\n        src={img}\n        alt={title}\n        className=\"img-thumbnail list-thumbnail xsmall border-0 rounded-circle\" /> : null\n      }\n      <div className=\"pl-3 pr-2\">\n        <p className=\"font-weight-medium mb-1\">{title}</p>\n        <p className=\"text-muted mb-0 text-small\">{date}</p>\n      </div>\n    </a>\n  );\n};\n\nclass TopnavNotifications extends React.Component {\n\n  state = {\n    loadingNotifications: false,\n    notifications: [],\n    unreadNotificationsCount: 0,\n    nextPageURL: null,\n    dropdownOpened: false\n  }\n\n  getNotifications = async () => {\n    const { token, webSocketURL, clientID } = this.props;\n    return await fetch(`${webSocketURL}/notifications?client_id=${clientID}`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    })\n    .then( response => {\n      return response.json();\n    })\n    .then( response => {\n      return this.setState({\n        nextPageURL: response.nextPageURL,\n        notifications: response.notifications,\n        unreadNotificationsCount: parseInt(response.unreadNotificationsCount, 10)\n      });\n    })\n    .catch( error => {\n      return console.error(error)\n    });\n  }\n\n  markAllNotificationsAsRead = async () => {\n    const { token, webSocketURL, clientID } = this.props;\n    return await fetch(`${webSocketURL}/notifications`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    })\n    .then( response => response.json() )\n    .then( response => {\n      return this.setState({\n        notifications: response.notifications,\n        unreadNotificationsCount: 0\n      });\n    })\n    .catch( error => {\n      return console.error(error)\n    });\n  }\n\n\n  async componentDidMount() {\n    await this.getNotifications();\n    const { loginUser, token, webSocketURL } = this.props;\n    const user = typeof(loginUser) === \"string\" ? JSON.parse(loginUser) : loginUser;\n    if (typeof io !== 'undefined') {\n      const socket = io(webSocketURL, {\n        extraHeaders: {\n          'x-auth-token': token\n        },\n        transportOptions: {\n          polling: {\n            extraHeaders: {\n              'x-auth-token': token\n            }\n          }\n        }\n      });\n      socket.on('error', function(err) {\n        throw new Error(err);\n      });\n      socket.on(`private.notifications.User.${user.id}`, (notification) => {\n        const { notifications, unreadNotificationsCount } = this.state;\n        this.setState({\n          notifications: [ notification, ...notifications ],\n          unreadNotificationsCount: unreadNotificationsCount + 1\n        });\n      });\n    }\n  }\n\n  onClick(notificationId) {\n    const { notifications, unreadNotificationsCount } = this.state;\n    const notification = notifications.find( not => not.id === notificationId );\n    const otherNotifications = notifications.filter( not => not.id !== notificationId );\n    this.setState({\n      unreadNotificationsCount: unreadNotificationsCount - 1,\n      notifications: [\n        ...otherNotifications,\n        {\n          ...notification,\n          seen: 'S'\n        }\n      ]\n    });\n    return this.forceUpdate();\n  }\n\n  dropdownToggle(event) {\n    const { dropdownOpened, notifications } = this.state;\n    return this.setState({\n      dropdownOpened: !dropdownOpened,\n      notifications \n    });\n  }\n\n  renderNotifications = (notifications) => {\n    if(notifications.length === 0) {\n      return (\n        <div className=\"scrollbar-notification-item w-100 d-flex flex-row justify-content-center align-items-center mb-3 py-0 px-4\">\n          <p className=\"font-weight-medium font-italic mb-0\">No notification</p>\n        </div>\n      );\n\t}\n\t\n  const unseenNotifications = Array.isArray(notifications) ? notifications.filter( notification => notification.seen === \"N\" ).map( (notification, index) => <NotificationItem key={index} onClick={ (notId) => this.onClick(notId) } {...this.props} {...notification} /> ) : [];\n  const seenNotifications = Array.isArray(notifications) ? notifications.filter( notification => notification.seen === \"S\" ).map( (notification, index) => <NotificationItem key={index} onClick={ (notId) => this.onClick(notId) } {...this.props} {...notification} /> ) : [];\n\t\n\n\t\n\n\tconst newNotificationsTitle = (\n\t\t<div key=\"unique_01\" className=\"scrollbar-notification-item notification-action-item w-100 d-flex flex-row justify-content-start py-2 px-4 border-bottom\">\n\t\t\t<span>New</span>\n\t\t</div>\n\t);\n\n\tconst earlierNotificationsTitle = (\n\t\t<div key=\"unique_02\" className=\"scrollbar-notification-item notification-action-item w-100 d-flex flex-row justify-content-start py-2 px-4 border-bottom\">\n\t\t\t<span>Earlier</span>\n\t\t</div>\n\t);\n\n\tlet modifiedNotifications = [\n\t\tunseenNotifications.length > 0 ? newNotificationsTitle : null,\n\t\t...unseenNotifications,\n\t\tunseenNotifications.length > 0 ? earlierNotificationsTitle : null,\n\t\t...seenNotifications\n\t];\n\n\n    return modifiedNotifications;\n  }\n\n  async loadMoreNotifications(notificationsContainer) {\n\tconst { token, clientID } = this.props;\n\tconst { nextPageURL, notifications, loadingNotifications } = this.state;\n\tconst scrollAmount = notificationsContainer.scrollTop;\n\tconst containerHeight = notificationsContainer.scrollHeight;\n\tif((containerHeight - scrollAmount) <= 300) {\n\t\tif(!loadingNotifications && (nextPageURL !== null)) {\n\t\t\tthis.setState({\n\t\t\t\tloadingNotifications: true\n\t\t\t});\n\t\t\treturn await fetch(`${nextPageURL}&client_id=${clientID}`, {\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\t'Accept': 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t'Authorization': `Bearer ${token}`\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.then( response => response.json() )\n\t\t\t\t.then( response => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tnextPageURL: response.nextPageURL,\n\t\t\t\t\t\tnotifications: [\n\t\t\t\t\t\t\t...notifications,\n\t\t\t\t\t\t\t...response.notifications\n\t\t\t\t\t\t],\n\t\t\t\t\t\tloadingNotifications: false\n\t\t\t\t\t});\n\t\t\t\t\treturn notificationsContainer.scrollTop = notificationsContainer.scrollTop - 300;\n\t\t\t\t})\n\t\t\t\t.catch( error => {\n\t\t\t\t\treturn console.error(error)\n\t\t\t\t});\n\t\t}\n\t}\n  }\n\n  render() {\n    const { notifications, loadingNotifications, dropdownOpened, unreadNotificationsCount } = this.state;\n    const unseenNotifications = Array.isArray(notifications) ? notifications.filter( notification => notification.seen === \"N\" ) : [];\n    const sortedNotifications = Array.isArray(notifications) ? notifications.sort( (a, b) => moment(b.created_at).isAfter(moment(a.created_at)) ) : [];\n\n\t\n\t\n\tconst actionButtons = (\n\t\t<div className=\"scrollbar-notification-item notification-action-item notification-top-action-item w-100 position-sticky d-flex flex-row justify-content-end py-2 px-4 border-bottom\">\n\t\t\t<button className=\"btn btn-link p-0 text-decoration-none notification-action\" onClick={ () => this.markAllNotificationsAsRead() }>Mark All as Read</button>\n\t\t</div>\n\t);\n\n\n\tconst bottomActionButtons = (\n\t\t<div className=\"scrollbar-notification-item notification-action-item notification-bottom-action-item w-100 position-sticky d-flex flex-row justify-content-center py-2 px-4 border-bottom\">\n\t\t\t<button className=\"btn btn-link p-0 text-decoration-none notification-action\" onClick={ () => this.props.history.push('/app/notifications') }>See all</button>\n\t\t</div>\n\t);\n\n\n    return (\n      <div className=\"position-relative d-inline-block\">\n        <UncontrolledDropdown isOpen={dropdownOpened} className=\"dropdown-menu-right\" toggle={ (event) => this.dropdownToggle(event) }>\n          <DropdownToggle\n            className=\"header-icon notificationButton\"\n            color=\"empty\"\n          >\n            <i className=\"simple-icon-bell\" />\n            { unreadNotificationsCount > 0 ? <span className=\"count\">{unreadNotificationsCount}</span> : null }\n          </DropdownToggle>\n          <DropdownMenu\n            className=\"position-absolute mt-3 scroll py-0\"\n            right\n            id=\"notificationDropdown\"\n          >\n            <PerfectScrollbar\n\t\t\t\tonScrollDown={ (container) => this.loadMoreNotifications(container) }\n\t\t\t\tclassName={classnames({ 'd-flex align-items-center justify-content-center mx-0': (sortedNotifications.length === 0) })}\n\t\t\t\toptions={{ suppressScrollX: true, wheelPropagation: false }}>\n\t\t\t\t{ sortedNotifications.length > 0 ? actionButtons : null }\n            \t{ this.renderNotifications(sortedNotifications) }\n\t\t\t\t{ loadingNotifications ? <div className=\"text-center mt-4 py-1\">\n\t\t\t\t\t<div className=\"loading position-static\" />\n\t\t\t\t</div> : null }\n\t\t\t\t{ sortedNotifications.length > 0 ? bottomActionButtons : null }\n            </PerfectScrollbar>\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      </div>\n      );\n  }\n\n}\n\n  \nconst mapStateToProps = ({ authUser }) => {\n  const { token, baseURL, user: loginUser, clientID, clientSecret, webSocketURL } = authUser;\n  return { token, baseURL, loginUser, clientID, clientSecret, webSocketURL };\n};\n\nexport default connect(\n    mapStateToProps,\n    {logoutUser}\n  )(withRouter(TopnavNotifications));\n\n","import React, { Component } from \"react\";\nimport Switch from \"rc-switch\";\nimport \"rc-switch/assets/index.css\";\nimport { Tooltip } from \"reactstrap\";\n\nimport { defaultColor,themeColorStorageKey } from \"../../constants/defaultValues\";\n\nexport default class TopnavDarkSwitch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      switchChecked: false,\n      tooltipOpen: false\n    };\n  }\n  componentDidMount(){\n      const color = this.getColor();\n          this.setState({\n            switchChecked:color.indexOf('dark')>-1\n          })\n  }\n\n  toggle = () => {\n    this.setState(prevState => ({\n      tooltipOpen: !prevState.tooltipOpen\n    }));\n  };\n\n  getColor = () => {\n    return localStorage.getItem(themeColorStorageKey)\n      ? localStorage.getItem(themeColorStorageKey)\n      : defaultColor;\n  };\n  changeMode = () => {\n    let color = this.getColor();\n\n    if(color.indexOf('dark')>-1){\n        color= color.replace('dark','light')\n    }else if(color.indexOf('light')>-1){\n        color= color.replace('light','dark')\n    }\n\n    this.setState({\n        switchChecked:color.indexOf('dark')>-1\n      },()=>{\n          localStorage.setItem(themeColorStorageKey,color)\n        setTimeout(() => {\n            window.location.reload();\n          }, 500);\n      })\n  };\n\n  render() {\n    return (\n      <div className=\"d-none d-md-inline-block align-middle mr-3\">\n        <Switch\n          id=\"Tooltip-Switch\"\n          className=\"custom-switch custom-switch-primary custom-switch-small\"\n          checked={this.state.switchChecked}\n          onChange={this.changeMode}\n        />\n\n        <Tooltip\n          placement=\"left\"\n          isOpen={this.state.tooltipOpen}\n          target={\"Tooltip-Switch\"}\n          toggle={this.toggle}\n        >\n          Dark Mode\n        </Tooltip>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport {\n  UncontrolledDropdown,\n  DropdownItem,\n  DropdownToggle,\n  DropdownMenu,\n  // Input\n} from \"reactstrap\";\n\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\n// import IntlMessages from \"../../helpers/IntlMessages\";\nimport {\n  setContainerClassnames,\n  clickOnMobileMenu,\n  logoutUser,\n  changeLocale\n} from \"../../redux/actions\";\n\nimport {\n  menuHiddenBreakpoint,\n  localeOptions,\n  isDarkSwitchActive,\n  areNotificationEnabled\n} from \"../../constants/defaultValues\";\n\nimport { MobileMenuIcon, MenuIcon } from \"../../components/svg\";\n// import TopnavEasyAccess from \"./Topnav.EasyAccess\";\nimport TopnavNotifications from \"./Topnav.Notifications\";\nimport TopnavDarkSwitch from \"./Topnav.DarkSwitch\";\n\nimport { getDirection, setDirection } from \"../../helpers/Utils\";\n\nclass TopNav extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isInFullScreen: false,\n      searchKeyword: \"\"\n    };\n  }\n\n  handleChangeLocale = (locale, direction) => {\n    this.props.changeLocale(locale);\n\n    const currentDirection = getDirection().direction;\n    if (direction !== currentDirection) {\n      setDirection(direction);\n      setTimeout(() => {\n        window.location.reload();\n      }, 500);\n    }\n  };\n\n  isInFullScreen = () => {\n    return (\n      (document.fullscreenElement && document.fullscreenElement !== null) ||\n      (document.webkitFullscreenElement &&\n        document.webkitFullscreenElement !== null) ||\n      (document.mozFullScreenElement &&\n        document.mozFullScreenElement !== null) ||\n      (document.msFullscreenElement && document.msFullscreenElement !== null)\n    );\n  };\n  handleSearchIconClick = e => {\n    if (window.innerWidth < menuHiddenBreakpoint) {\n      let elem = e.target;\n      if (!e.target.classList.contains(\"search\")) {\n        if (e.target.parentElement.classList.contains(\"search\")) {\n          elem = e.target.parentElement;\n        } else if (\n          e.target.parentElement.parentElement.classList.contains(\"search\")\n        ) {\n          elem = e.target.parentElement.parentElement;\n        }\n      }\n\n      if (elem.classList.contains(\"mobile-view\")) {\n        this.search();\n        elem.classList.remove(\"mobile-view\");\n        this.removeEventsSearch();\n      } else {\n        elem.classList.add(\"mobile-view\");\n        this.addEventsSearch();\n      }\n    } else {\n      this.search();\n    }\n  };\n  addEventsSearch = () => {\n    document.addEventListener(\"click\", this.handleDocumentClickSearch, true);\n  };\n  removeEventsSearch = () => {\n    document.removeEventListener(\"click\", this.handleDocumentClickSearch, true);\n  };\n\n  handleDocumentClickSearch = e => {\n    let isSearchClick = false;\n    if (\n      e.target &&\n      e.target.classList &&\n      (e.target.classList.contains(\"navbar\") ||\n        e.target.classList.contains(\"simple-icon-magnifier\"))\n    ) {\n      isSearchClick = true;\n      if (e.target.classList.contains(\"simple-icon-magnifier\")) {\n        this.search();\n      }\n    } else if (\n      e.target.parentElement &&\n      e.target.parentElement.classList &&\n      e.target.parentElement.classList.contains(\"search\")\n    ) {\n      isSearchClick = true;\n    }\n\n    if (!isSearchClick) {\n      const input = document.querySelector(\".mobile-view\");\n      if (input && input.classList) input.classList.remove(\"mobile-view\");\n      this.removeEventsSearch();\n      this.setState({\n        searchKeyword: \"\"\n      });\n    }\n  };\n  handleSearchInputChange = e => {\n    this.setState({\n      searchKeyword: e.target.value\n    });\n  };\n  handleSearchInputKeyPress = e => {\n    if (e.key === \"Enter\") {\n      this.search();\n    }\n  };\n\n  search = () => {\n    this.props.history.push(\"/search/\" + this.state.searchKeyword);\n    this.setState({\n      searchKeyword: \"\"\n    });\n  };\n\n  toggleFullScreen = () => {\n    const isInFullScreen = this.isInFullScreen();\n\n    var docElm = document.documentElement;\n    if (!isInFullScreen) {\n      if (docElm.requestFullscreen) {\n        docElm.requestFullscreen();\n      } else if (docElm.mozRequestFullScreen) {\n        docElm.mozRequestFullScreen();\n      } else if (docElm.webkitRequestFullScreen) {\n        docElm.webkitRequestFullScreen();\n      } else if (docElm.msRequestFullscreen) {\n        docElm.msRequestFullscreen();\n      }\n    } else {\n      if (document.exitFullscreen) {\n        document.exitFullscreen();\n      } else if (document.webkitExitFullscreen) {\n        document.webkitExitFullscreen();\n      } else if (document.mozCancelFullScreen) {\n        document.mozCancelFullScreen();\n      } else if (document.msExitFullscreen) {\n        document.msExitFullscreen();\n      }\n    }\n    this.setState({\n      isInFullScreen: !isInFullScreen\n    });\n  };\n\n  handleLogout = () => {\n    this.props.logoutUser(this.props.history);\n  };\n\n  menuButtonClick = (e, menuClickCount, containerClassnames) => {\n    e.preventDefault();\n\n    setTimeout(() => {\n      var event = document.createEvent(\"HTMLEvents\");\n      event.initEvent(\"resize\", false, false);\n      window.dispatchEvent(event);\n    }, 350);\n    this.props.setContainerClassnames(\n      ++menuClickCount,\n      containerClassnames,\n      this.props.selectedMenuHasSubItems\n    );\n  };\n  mobileMenuButtonClick = (e, containerClassnames) => {\n    e.preventDefault();\n    this.props.clickOnMobileMenu(containerClassnames);\n  };\n  \n  getInitials = (name) => {\n    if (typeof name == \"undefined\") {\n        name = true;\n    }\n    let initials = name.replace(/[^a-zA-Z- ]/g, \"\").match(/\\b\\w/g);\n    if (name) {\n        return initials.join('');\n    }\n    return initials;\n  }\n\n\n  render() {\n    const { containerClassnames, menuClickCount, locale, user } = this.props;\n    // const { messages } = this.props.intl;\n    return (\n      <nav className=\"navbar fixed-top\">\n        <div className=\"d-flex align-items-center navbar-left\">\n          <NavLink\n            to=\"#\" location={{}}\n            className=\"menu-button d-none d-md-block\"\n            onClick={e =>\n              this.menuButtonClick(e, menuClickCount, containerClassnames)\n            }\n          >\n            <MenuIcon />\n          </NavLink>\n          <NavLink\n            to=\"#\" location={{}}\n            className=\"menu-button-mobile d-xs-block d-sm-block d-md-none\"\n            onClick={e => this.mobileMenuButtonClick(e, containerClassnames)}\n          >\n            <MobileMenuIcon />\n          </NavLink>\n\n          {/* <div className=\"search\" data-search-path=\"/app/pages/search\">\n            <Input\n              name=\"searchKeyword\"\n              id=\"searchKeyword\"\n              placeholder={messages[\"menu.search\"]}\n              value={this.state.searchKeyword}\n              onChange={e => this.handleSearchInputChange(e)}\n              onKeyPress={e => this.handleSearchInputKeyPress(e)}\n            />\n            <span\n              className=\"search-icon\"\n              onClick={e => this.handleSearchIconClick(e)}\n            >\n              <i className=\"simple-icon-magnifier\" />\n            </span>\n          </div> */}\n\n          <div className=\"d-inline-block\">\n            <UncontrolledDropdown className=\"ml-2\">\n              <DropdownToggle\n                caret\n                color=\"light\"\n                size=\"sm\"\n                className=\"language-button\"\n              >\n                <span className=\"name\">{locale.toUpperCase()}</span>\n              </DropdownToggle>\n              <DropdownMenu className=\"mt-3\" right>\n                {localeOptions.map(l => {\n                  return (\n                    <DropdownItem\n                      onClick={() => this.handleChangeLocale(l.id, l.direction)}\n                      key={l.id}\n                    >\n                      {l.name}\n                    </DropdownItem>\n                  );\n                })}\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </div>\n          {/* <div className=\"position-relative d-none d-none d-lg-inline-block\">\n            <a\n              className=\"btn btn-outline-primary btn-sm ml-2\"\n              target=\"_top\"\n              href=\"https://themeforest.net/cart/configure_before_adding/22544383?license=regular&ref=ColoredStrategies&size=source\"\n            >\n              <IntlMessages id=\"user.buy\" />\n            </a>\n          </div> */}\n        </div>\n        <a className=\"navbar-logo\" href=\"/\">\n          <span className=\"logo d-none d-xs-block\" />\n          <span className=\"logo-mobile d-block d-xs-none\" />\n        </a>\n        <div className=\"navbar-right\">\n          {isDarkSwitchActive && <TopnavDarkSwitch />}\n\n          <div className=\"header-icons d-inline-block align-middle\">\n\n            {/* <TopnavEasyAccess /> */}\n            {areNotificationEnabled && <TopnavNotifications />}\n            <button\n              className=\"header-icon btn btn-empty d-none d-sm-inline-block\"\n              type=\"button\"\n              id=\"fullScreenButton\"\n              onClick={this.toggleFullScreen}\n            >\n              {this.state.isInFullScreen ? (\n                <i className=\"simple-icon-size-actual d-block\" />\n              ) : (\n                  <i className=\"simple-icon-size-fullscreen d-block\" />\n                )}\n            </button>\n          </div>\n          <div className=\"user d-inline-block\">\n            <UncontrolledDropdown className=\"dropdown-menu-right\">\n              <DropdownToggle className=\"font-weight-light d-flex align-items-center justify-content-center p-0\" color=\"empty\">\n                <span className=\"name\">{`${user.first_name} ${user.last_name}`}</span>\n                <span>\n                  <img className=\"mr-3\" alt={`${user.first_name} ${user.last_name}`} src={user.image} />\n                  {/* <img className=\"mr-3\" alt={`${user.first_name} ${user.last_name}`} src=\"/assets/img/profile-pic-l.jpg\" /> */}\n                </span>\n              </DropdownToggle>\n              <DropdownMenu className=\"mt-3\" right>\n                {/* <DropdownItem>Account</DropdownItem>\n                <DropdownItem>Features</DropdownItem>\n                <DropdownItem>History</DropdownItem>\n                <DropdownItem>Support</DropdownItem>\n                <DropdownItem divider /> */}\n                <DropdownItem onClick={() => this.handleLogout()}>\n                  Sign out\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nconst mapStateToProps = ({ authUser, menu, settings }) => {\n  const { containerClassnames, menuClickCount, selectedMenuHasSubItems } = menu;\n  const { locale } = settings;\n  const { user } = authUser;\n  return {\n    containerClassnames,\n    menuClickCount,\n    selectedMenuHasSubItems,\n    locale,\n    user: (typeof(user) == \"string\") ? JSON.parse(user) : user\n  };\n};\nexport default injectIntl(\n  connect(\n    mapStateToProps,\n    { setContainerClassnames, clickOnMobileMenu, logoutUser, changeLocale }\n  )(TopNav)\n);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport { Nav, NavItem, Collapse } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport classnames from 'classnames';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { withRouter } from 'react-router-dom';\n\n\n// import IntlMessages from '../../helpers/IntlMessages';\n\nimport {\n  setContainerClassnames,\n  addContainerClassname,\n  changeDefaultClassnames,\n  changeSelectedMenuHasSubItems\n} from '../../redux/actions';\nimport { fetch } from '../../helpers/Utils';\n\n\nconst urlPrefix = \"/app/\";\n\n// import menuItems from '../../constants/menu';\n\n// const menuItems = [\n//   {\n//     id: \"components\",\n//     icon: \"iconsminds-air-balloon-1\",\n//     label: \"menu.gogo\",\n//     to: \"/app/components\"\n//   },\n//   {\n//     id: \"charts\",\n//     icon: \"iconsminds-pie-chart\",\n//     label: \"menu.charts\",\n//     to: \"/app/charts\"\n//   }\n// ];\n\nclass Sidebar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedParentMenu: 1,\n      viewingParentMenu: '',\n      collapsedMenus: [],\n      menuItems: [],\n      isMounted: false\n    };\n  }\n\n  async getMenu() {\n    const { token, baseURL } = this.props;\n    return await fetch(`${baseURL}/menu`, {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    })\n    .then( response => response.json() )\n    .then( response => {\n      if(this.state.isMounted) {\n        this.setState({ menuItems: response });\n        if(response.length > 0) {\n          if(this.props.match.isExact) {\n            return this.props.history.push(`/app/${response[0].page.slug}`);\n          }\n        }\n      }\n    })\n    .catch( error => error );\n  }\n\n  handleWindowResize = async (event) => {\n    if (event && !event.isTrusted) {\n      return;\n    }\n    const { containerClassnames } = this.props;\n    let nextClasses = this.getMenuClassesForResize(containerClassnames);\n    return await this.props.setContainerClassnames(\n      0,\n      nextClasses.join(' '),\n      this.props.selectedMenuHasSubItems\n    );\n  };\n\n  handleDocumentClick = e => {\n    const container = this.getContainer();\n    let isMenuClick = false;\n    if (\n      e.target &&\n      e.target.classList &&\n      (e.target.classList.contains('menu-button') ||\n        e.target.classList.contains('menu-button-mobile'))\n    ) {\n      isMenuClick = true;\n    } else if (\n      e.target.parentElement &&\n      e.target.parentElement.classList &&\n      (e.target.parentElement.classList.contains('menu-button') ||\n        e.target.parentElement.classList.contains('menu-button-mobile'))\n    ) {\n      isMenuClick = true;\n    } else if (\n      e.target.parentElement &&\n      e.target.parentElement.parentElement &&\n      e.target.parentElement.parentElement.classList &&\n      (e.target.parentElement.parentElement.classList.contains('menu-button') ||\n        e.target.parentElement.parentElement.classList.contains(\n          'menu-button-mobile'\n        ))\n    ) {\n      isMenuClick = true;\n    }\n    if (container.contains(e.target) || container === e.target || isMenuClick) {\n      return;\n    }\n    this.setState({\n      viewingParentMenu: ''\n    });\n    this.toggle();\n  };\n\n  getMenuClassesForResize = classes => {\n    const { menuHiddenBreakpoint, subHiddenBreakpoint } = this.props;\n    let nextClasses = classes.split(' ').filter(x => x !== '');\n    const windowWidth = window.innerWidth;\n    if (windowWidth < menuHiddenBreakpoint) {\n      nextClasses.push('menu-mobile');\n    } else if (windowWidth < subHiddenBreakpoint) {\n      nextClasses = nextClasses.filter(x => x !== 'menu-mobile');\n      if (\n        nextClasses.includes('menu-default') &&\n        !nextClasses.includes('menu-sub-hidden')\n      ) {\n        nextClasses.push('menu-sub-hidden');\n      }\n    } else {\n      nextClasses = nextClasses.filter(x => x !== 'menu-mobile');\n      if (\n        nextClasses.includes('menu-default') &&\n        nextClasses.includes('menu-sub-hidden')\n      ) {\n        nextClasses = nextClasses.filter(x => x !== 'menu-sub-hidden');\n      }\n    }\n    return nextClasses;\n  };\n\n  getContainer = () => {\n    return ReactDOM.findDOMNode(this);\n  };\n\n  toggle = () => {\n    const hasSubItems = this.getIsHasSubItem();\n    this.props.changeSelectedMenuHasSubItems(hasSubItems);\n    const { containerClassnames, menuClickCount } = this.props;\n    const currentClasses = containerClassnames\n      ? containerClassnames.split(' ').filter(x => x !== '')\n      : '';\n    let clickIndex = -1;\n\n    if (!hasSubItems) {\n      if (\n        currentClasses.includes('menu-default') &&\n        (menuClickCount % 4 === 0 || menuClickCount % 4 === 3)\n      ) {\n        clickIndex = 1;\n      } else if (\n        currentClasses.includes('menu-sub-hidden') &&\n        (menuClickCount === 2 || menuClickCount === 3)\n      ) {\n        clickIndex = 0;\n      } else if (\n        currentClasses.includes('menu-hidden') ||\n        currentClasses.includes('menu-mobile')\n      ) {\n        clickIndex = 0;\n      }\n    } else {\n      if (currentClasses.includes('menu-sub-hidden') && menuClickCount === 3) {\n        clickIndex = 2;\n      } else if (\n        currentClasses.includes('menu-hidden') ||\n        currentClasses.includes('menu-mobile')\n      ) {\n        clickIndex = 0;\n      }\n    }\n    if (clickIndex >= 0) {\n      this.props.setContainerClassnames(\n        clickIndex,\n        containerClassnames,\n        hasSubItems\n      );\n    }\n  };\n\n  handleProps = async () => {\n    return await this.addEvents();\n  };\n\n  addEvents = () => {\n    ['click', 'touchstart', 'touchend'].forEach(event =>\n      document.addEventListener(event, this.handleDocumentClick, true)\n    );\n  };\n\n  removeEvents = async () => {\n    ['click', 'touchstart', 'touchend'].forEach(event =>\n      document.removeEventListener(event, this.handleDocumentClick, true)\n    );\n  };\n\n  setSelectedLiActive = async (callback) => {\n    const oldli = document.querySelector('.sub-menu  li.active');\n    if (oldli != null) {\n      oldli.classList.remove('active');\n    }\n\n    const oldliSub = document.querySelector('.third-level-menu  li.active');\n    if (oldliSub != null) {\n      oldliSub.classList.remove('active');\n    }\n\n    /* set selected parent menu */\n    const selectedSublink = document.querySelector('.third-level-menu  a.active');\n    if (selectedSublink != null) {\n      selectedSublink.parentElement.classList.add('active');\n    }\n\n    const selectedlink = document.querySelector('.sub-menu  a.active');\n    if (selectedlink != null) {\n      selectedlink.parentElement.classList.add('active');\n        this.setState(\n          {\n            selectedParentMenu: selectedlink.parentElement.parentElement.getAttribute(\n              'data-parent'\n            )\n          },\n          callback\n        );\n    } else {\n      const { menuItems } = this.state;\n      var selectedParentNoSubItem = document.querySelector(\n        '.main-menu  li a.active'\n      );\n      if (selectedParentNoSubItem != null) {\n          this.setState(\n            {\n              selectedParentMenu: selectedParentNoSubItem.getAttribute(\n                'data-flag'\n              )\n            },\n            callback\n          );\n      } else if (this.state.selectedParentMenu === '') {\n          this.setState(\n            {\n              selectedParentMenu: menuItems[0] ? menuItems[0].page.slug : null\n            },\n            callback\n          );\n      }\n    }\n  };\n\n  setHasSubItemStatus = () => {\n    const hasSubmenu = this.getIsHasSubItem();\n    this.props.changeSelectedMenuHasSubItems(hasSubmenu);\n    this.toggle();\n  };\n\n  getIsHasSubItem = () => {\n    const { selectedParentMenu, menuItems } = this.state;\n    const menuItem = menuItems ? menuItems.find(x => x.id === selectedParentMenu) : null;\n    if (menuItem)\n      return menuItem && menuItem.children && menuItem.children.length > 0\n        ? true\n        : false;\n    else return false;\n  };\n\n  componentDidUpdate(prevProps) {\n    if(this.state.isMounted) {\n      if (this.props.location.pathname !== prevProps.location.pathname) {\n        this.setSelectedLiActive(this.setHasSubItemStatus);\n        window.scrollTo(0, 0);\n      }\n      this.handleProps();\n    }\n  }\n\n  async componentDidMount() {\n    this.setState({\n      isMounted: true\n    }, async () => {\n      return await this.getMenu();\n    });\n    if(this.state.isMounted) {\n      window.addEventListener('resize', this.handleWindowResize);\n      await this.handleWindowResize();\n      await this.setSelectedLiActive(this.setHasSubItemStatus);\n      await this.handleProps();\n    }\n  }\n\n  async componentWillUnmount() {\n    if(this.state.isMounted) {\n      await this.removeEvents();\n      window.removeEventListener('resize', this.handleWindowResize);\n    }\n  }\n\n  openSubMenu = (e, menuItem) => {\n    const selectedParent = menuItem.id;\n    const hasSubMenu = menuItem.children && menuItem.children.length > 0;\n    this.props.changeSelectedMenuHasSubItems(hasSubMenu);\n    if (!hasSubMenu) {\n        this.setState({\n          viewingParentMenu: selectedParent,\n          selectedParentMenu: selectedParent\n        });\n      this.toggle();\n    } else {\n      e.preventDefault();\n\n      const { containerClassnames, menuClickCount } = this.props;\n      const currentClasses = containerClassnames\n        ? containerClassnames.split(' ').filter(x => x !== '')\n        : '';\n\n      if (!currentClasses.includes('menu-mobile')) {\n        if (\n          currentClasses.includes('menu-sub-hidden') &&\n          (menuClickCount === 2 || menuClickCount === 0)\n        ) {\n          this.props.setContainerClassnames(3, containerClassnames, hasSubMenu);\n        } else if (\n          currentClasses.includes('menu-hidden') &&\n          (menuClickCount === 1 || menuClickCount === 3)\n        ) {\n          this.props.setContainerClassnames(2, containerClassnames, hasSubMenu);\n        } else if (\n          currentClasses.includes('menu-default') &&\n          !currentClasses.includes('menu-sub-hidden') &&\n          (menuClickCount === 1 || menuClickCount === 3)\n        ) {\n          this.props.setContainerClassnames(0, containerClassnames, hasSubMenu);\n        }\n      } else {\n        this.props.addContainerClassname(\n          'sub-show-temporary',\n          containerClassnames\n        );\n      }\n      this.setState({\n        viewingParentMenu: selectedParent\n      });\n    }\n  };\n\n  toggleMenuCollapse = (e, menuKey) => {\n    e.preventDefault();\n\n    let collapsedMenus = this.state.collapsedMenus;\n    if (collapsedMenus.indexOf(menuKey) > -1) {\n        this.setState({\n          collapsedMenus: collapsedMenus.filter(x => x !== menuKey)\n        });\n    } else {\n      collapsedMenus.push(menuKey);\n      this.setState({\n        collapsedMenus\n      });\n    }\n    return false;\n  };\n\n  render() {\n    let {\n      selectedParentMenu,\n      viewingParentMenu,\n      collapsedMenus,\n      menuItems\n    } = this.state;\n    return (\n      <div className=\"sidebar\">\n        <div className=\"main-menu\">\n          <div className=\"scroll\">\n            <PerfectScrollbar\n              options={{ suppressScrollX: true, wheelPropagation: false }}\n            >\n              <Nav vertical className=\"list-unstyled\">\n                {menuItems &&\n                  menuItems.map(item => {\n                    return (\n                      <NavItem\n                        key={item.id}\n                        to={item.to}\n                        className={classnames({\n                          active:\n                            (selectedParentMenu === item.id &&\n                              viewingParentMenu === '') ||\n                            viewingParentMenu === item.id\n                        })}\n                      >\n                        {item.newWindow ? (\n                          <a\n                            href={`${urlPrefix}${item.page.slug}`}\n                            rel=\"noopener noreferrer\"\n                            target=\"_blank\"\n                          >\n                            <i className={item.image} />\n                            <span>{item.page.name}</span>\n                          </a>\n                        ) : (\n                          <NavLink\n                            to={`${urlPrefix}${item.page.slug}`}\n                            onClick={e => this.openSubMenu(e, item)}\n                            data-flag={item.id}\n                          >\n                            <i className={item.image} />\n                            <span>{item.page.name}</span>\n                          </NavLink>\n                        )}\n                      </NavItem>\n                    );\n                  })}\n              </Nav>\n            </PerfectScrollbar>\n          </div>\n        </div>\n\n        <div className=\"sub-menu\">\n          <div className=\"scroll\">\n            <PerfectScrollbar\n              options={{ suppressScrollX: true, wheelPropagation: false }}\n            >\n              {menuItems &&\n                menuItems.map(item => {\n                  return (\n                    <Nav\n                      key={item.id}\n                      className={classnames({\n                        'd-block':\n                          (this.state.selectedParentMenu === item.id &&\n                            this.state.viewingParentMenu === '') ||\n                          this.state.viewingParentMenu === item.id\n                      })}\n                      data-parent={item.id}\n                    >\n                      {item.children &&\n                        item.children.map((child, index) => {\n                          return (\n                            <NavItem\n                              key={`${child.id}_${index}`}\n                              className={`${\n                                child.children && child.children.length > 0\n                                  ? 'has-sub-item'\n                                  : ''\n                              }`}\n                            >\n                              {child.newWindow ? (\n                                <a\n                                  href={`${urlPrefix}${child.page.slug}`}\n                                  rel=\"noopener noreferrer\"\n                                  target=\"_blank\"\n                                >\n                                  <i className={child.image} />\n                                  <span>{child.page.name}</span>\n                                </a>\n                              ) : child.children && child.children.length > 0 ? (\n                                <Fragment>\n                                  <NavLink\n                                    className={`rotate-arrow-icon opacity-50 ${\n                                      collapsedMenus.indexOf(\n                                        `${child.id}_${index}`\n                                      ) === -1\n                                        ? ''\n                                        : 'collapsed'\n                                    }`}\n                                    to={`${urlPrefix}${child.page.slug}`}\n                                    id={`${child.id}_${index}`}\n                                    onClick={e =>\n                                      this.toggleMenuCollapse(\n                                        e,\n                                        `${child.id}_${index}`\n                                      )\n                                    }\n                                  >\n                                    <i className=\"simple-icon-arrow-down\" />\n                                    <span>{child.page.name}</span>\n                                  </NavLink>\n\n                                  <Collapse\n                                    isOpen={\n                                      collapsedMenus.indexOf(\n                                        `${child.id}_${index}`\n                                      ) === -1\n                                    }\n                                  >\n                                    <Nav className=\"third-level-menu\">\n                                      {child.children.map((thirdSub, thirdIndex) => {\n                                        return (\n                                          <NavItem\n                                            key={`${\n                                              thirdSub.id\n                                            }_${index}_${thirdIndex}`}\n                                          >\n                                            {thirdSub.newWindow ? (\n                                              <a\n                                                href={`${urlPrefix}${thirdSub.page.slug}`}\n                                                rel=\"noopener noreferrer\"\n                                                target=\"_blank\"\n                                              >\n                                                <i className={thirdSub.image} />\n                                                <span>{thirdSub.page.name}</span>\n                                              </a>\n                                            ) : (\n                                              <NavLink to={`${urlPrefix}${thirdSub.page.slug}`}>\n                                                <i className={thirdSub.image} />\n                                                <span>{thirdSub.page.name}</span>\n                                              </NavLink>\n                                            )}\n                                          </NavItem>\n                                        );\n                                      })}\n                                    </Nav>\n                                  </Collapse>\n                                </Fragment>\n                              ) : (\n                                <NavLink to={`${urlPrefix}${child.page.slug}`}>\n                                  <i className={child.image} />\n                                  <span>{child.page.name}</span>\n                                </NavLink>\n                              )}\n                            </NavItem>\n                          );\n                        })}\n                    </Nav>\n                  );\n                })}\n            </PerfectScrollbar>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ authUser, menu }) => {\n  const { token, baseURL, clientID, user: loginUser } = authUser;\n  const {\n    containerClassnames,\n    subHiddenBreakpoint,\n    menuHiddenBreakpoint,\n    menuClickCount,\n    selectedMenuHasSubItems\n  } = menu;\n  return {\n    token,\n    baseURL,\n    clientID,\n    loginUser,\n    containerClassnames,\n    subHiddenBreakpoint,\n    menuHiddenBreakpoint,\n    menuClickCount,\n    selectedMenuHasSubItems\n  };\n};\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    {\n      setContainerClassnames,\n      addContainerClassname,\n      changeDefaultClassnames,\n      changeSelectedMenuHasSubItems\n    }\n  )(Sidebar)\n);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter} from \"react-router-dom\";\n\nimport TopNav from \"../containers/navs/Topnav\";\nimport Sidebar from \"../containers/navs/Sidebar\";\n// import { RightModal } from \"../components/misc\";\n\nclass AppLayout extends Component {\n  render() {\n    const { containerClassnames } = this.props;\n    return (\n      <div id=\"app-container\" className={containerClassnames}>\n        <TopNav history={this.props.history} />\n        <Sidebar />\n        <main>\n          <div className=\"container-fluid\">\n          {this.props.children}\n          {/* <RightModal buttonLabel=\"Open this up\" className=\"modal-right\" /> */}\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = ({ menu }) => {\n  const { containerClassnames } = menu;\n  return { containerClassnames };\n};\nconst mapActionToProps={}\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapActionToProps\n)(AppLayout));\n","import React, { Component, Suspense } from 'react';\nimport { Route, withRouter, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport AppLayout from '../../layout/AppLayout';\n\n\nconst Page = React.lazy(() =>\n  import(/* webpackChunkName: \"details-page\" */ './page')\n);\n\nconst Notifications = React.lazy(() =>\n  import(/* webpackChunkName: \"notifications-page\" */ './notifications')\n);\n\n// const Profile = React.lazy(() =>\n//   import(/* webpackChunkName: \"profile-page\" */ './profile')\n// );\n\nclass App extends Component {\n  render() {\n    const { match } = this.props;\n\n    return (\n      <AppLayout>\n        <div className=\"dashboard-wrapper\">\n          <Suspense fallback={<div className=\"loading\" />}>\n            <Switch>\n\n              {/* <Redirect from={`${match.url}/`} to={`${match.url}/dashboard`} /> */}\n\n              {/* <Route\n                path={`${match.url}/`}\n                render={props => <Page {...props} />}\n              /> */}\n\n              {/* <Route\n                path={`${match.url}/profile`}\n                render={props => <Profile {...props} />}\n              /> */}\n\n              <Route\n                path={`${match.url}/notifications`}\n                render={props => <Notifications {...props} />}\n              />\n\n              <Route\n                path={`${match.url}/:slug/:subSlug?`}\n                render={props => <Page {...props} />}\n              />\n              \n              {/* <Redirect to=\"/error\" /> */}\n            </Switch>\n          </Suspense>\n        </div>\n      </AppLayout>\n    );\n  }\n}\nconst mapStateToProps = ({ authUser, menu }) => {\n  const { containerClassnames } = menu;\n  const { token } = authUser;\n  return { token, containerClassnames };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    {}\n  )(App)\n);\n","import React from 'react';\nimport { Col } from 'reactstrap';\nconst Colxx = (props) => (\n    <Col {...props} widths={['xxs', 'xs', 'sm', 'md', 'lg', 'xl', 'xxl']} />\n);\nconst Separator = (props) => (\n    <div className={`separator ${props.className}`}></div>\n);\nexport { Colxx,Separator }","import Notifications from './Notifications.js';\nimport NotificationContainer from './NotificationContainer';\nimport NotificationManager from './NotificationManager';\n\nexport { Notifications, NotificationContainer, NotificationManager };\nexport default Notifications;\n","import React from 'react';\nimport AceEditor from \"react-ace\";\n\nimport \"ace-builds/src-noconflict/mode-json\";\nimport \"ace-builds/src-noconflict/theme-xcode\";\n\n\nclass CustomAceEditor extends React.Component {\n\n    render() {\n        let { className, field, form, onChange, onKeyUp, hidden, placeholder } = this.props;\n        return !hidden ? (\n            <AceEditor\n            name={field.name}\n            value={field.value}\n            mode=\"json\"\n            theme=\"xcode\"\n            editorProps={{ $blockScrolling: true }}\n            setOptions={{ useWorker: false }}\n            fontSize={14}\n            width=\"auto\"\n            height=\"300px\"\n            className={className}\n            showPrintMargin={false}\n            placeholder={placeholder}\n            onBlur={field.onBlur}\n            onKeyUp={ (event) => onKeyUp(event) }\n            onChange={ (option) => {\n                form.setFieldValue(field.name, option);\n                return onChange(option);\n            } }\n            />\n        ) : null;\n    }  \n\n}\n\n\nexport default CustomAceEditor;","import React from 'react';\nimport { AsyncCreatable } from 'react-select';\nimport { NotificationManager } from \"../common/react-notifications\";\nimport { withRouter } from 'react-router-dom';\nimport { fetch } from '../../helpers/Utils';\n\nconst loadOptions = (inputValue, otherParameters) => {\n    return new Promise( async (resolve) => {\n        const { baseURL, token, clientID, element } = otherParameters;\n        const { slug } = otherParameters.match.params;\n        let params = new URLSearchParams();\n        params.set('page_slug', slug);\n        params.set('elementID', element.elementID);\n        params.set('elementType', 'wizard');\n        params.set('stepElementName', 'distributor');\n        params.set('client_id', clientID);\n        params.set(`searchInput`, inputValue);\n        params = params.toString();\n        const request = await fetch(`${baseURL}/details?${params}`, {\n            type: 'GET',\n            headers: {\n                Accept: 'application/json',\n                Authorization: `Bearer ${token}`\n            }\n        });\n        if(!request.ok) {\n            return NotificationManager.error(request.statusText, \"Oops! We got a problem.\", 3000, null, null, '')\n        }\n        const response = await request.json();\n        setTimeout( () => {\n            let optionLabel = element.ddl.label;\n            let optionValue = element.ddl.value;\n            let options = response.data.map( (dataItem, index) => ({ key: index, label: dataItem[optionLabel], value: dataItem[optionValue] }) );\n            resolve(options);\n        }, 1000);\n    });\n}\n\nclass SearchableMultiSelect extends React.Component {\n\n    render() {\n        let { field, form, onChange, onKeyUp, hidden, match, element, baseURL, token, clientID } = this.props;\n        return !hidden ? (\n            <AsyncCreatable\n            styles={{\n                menu: (provided, state) => ({\n                    ...provided,\n                    zIndex: 1040\n                })\n            }}\n            allowCreateWhileLoading={true}\n            name={field.name}\n            value={field.value}\n            onBlur={field.onBlur}\n            onKeyUp={ (event) => onKeyUp(event) }\n            onChange={ (option) => {\n                form.setFieldValue(field.name, option);\n                return onChange(option);\n            } }\n            classNamePrefix=\"react-select\"\n            // isMulti\n            isSearchable\n            isClearable\n            cacheOptions\n            // defaultOptions={options}\n            loadOptions={ (inputValue) => loadOptions(inputValue, {\n                baseURL,\n                token,\n                clientID,\n                match,\n                element\n            }) }\n            />\n        ) : null;\n    }\n\n}\n\n\nexport default withRouter(SearchableMultiSelect);","import React from 'react';\nimport DatePicker from \"react-datepicker\";\n\nclass CustomDatePicker extends React.Component {\n\n    render() {\n        let { field, form, onChange, placeholder, hidden } = this.props;\n        return !hidden ? (\n            <DatePicker\n                id={field.id}\n                name={field.name}\n                value={field.value}\n                // onBlur={field.onBlur}\n                onSelect={ (value) => {\n                    value = value.format('YYYY-MM-DD');\n                    form.setFieldValue(field.name, value);\n                    return onChange(value);\n                } }\n                dateFormat=\"YYYY-MM-DD\"\n                // selected={moment(field.value)}\n                placeholderText={placeholder}\n            />\n        ) : null;\n    }  \n\n}\n\n\nexport default CustomDatePicker;","/* eslint-disable react/no-array-index-key */\nimport React, { useState } from 'react';\nimport {\n  Row,\n  Button,\n  ButtonDropdown,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  CustomInput,\n  Collapse,\n} from 'reactstrap';\nimport { injectIntl } from 'react-intl';\n\nimport { Colxx, Separator } from '../../common/CustomBootstrap';\nimport IntlMessages from '../../../helpers/IntlMessages';\n\nimport {\n  DataListIcon,\n  ThumbListIcon,\n  ImageListIcon,\n} from '../../svg';\n\nconst ListPageHeading = ({\n  intl,\n  displayMode,\n  changeDisplayMode,\n  handleChangeSelectAll,\n  changeOrderBy,\n  changePageSize,\n  selectedPageSize,\n  totalItemCount,\n  selectedOrderOption,\n  match,\n  startIndex,\n  endIndex,\n  selectedItemsLength,\n  itemsLength,\n  onSearchKey,\n  orderOptions,\n  pageSizes,\n  toggleModal,\n  heading,\n}) => {\n  const [dropdownSplitOpen, setDropdownSplitOpen] = useState(false);\n  const [displayOptionsIsOpen, setDisplayOptionsIsOpen] = useState(false);\n  const { messages } = intl;\n\n  return (\n    <Row>\n      <Colxx xxs=\"12\">\n        <div className=\"mb-2\">\n          <h1>Browse Files</h1>\n\n          <div className=\"text-zero top-right-button-container\">\n            <Button\n              color=\"primary\"\n              size=\"lg\"\n              className=\"top-right-button\"\n              onClick={() => toggleModal()}\n            >Select</Button>\n            {/* <ButtonDropdown\n              isOpen={dropdownSplitOpen}\n              toggle={() => setDropdownSplitOpen(!dropdownSplitOpen)}\n            >\n              <div className=\"btn btn-primary btn-lg pl-4 pr-0 check-button check-all\">\n                <CustomInput\n                  className=\"custom-checkbox mb-0 d-inline-block\"\n                  type=\"checkbox\"\n                  id=\"checkAll\"\n                  checked={selectedItemsLength >= itemsLength}\n                  onChange={() => handleChangeSelectAll(true)}\n                  label={\n                    <span\n                      className={`custom-control-label ${\n                        selectedItemsLength > 0 &&\n                        selectedItemsLength < itemsLength\n                          ? 'indeterminate'\n                          : ''\n                      }`}\n                    />\n                  }\n                />\n              </div>\n              <DropdownToggle\n                caret\n                color=\"primary\"\n                className=\"dropdown-toggle-split btn-lg\"\n              />\n              <DropdownMenu right>\n                <DropdownItem>\n                  <IntlMessages id=\"pages.delete\" />\n                </DropdownItem>\n                <DropdownItem>\n                  <IntlMessages id=\"pages.another-action\" />\n                </DropdownItem>\n              </DropdownMenu>\n            </ButtonDropdown> */}\n          </div>\n        </div>\n\n        <div className=\"mb-2\">\n          <Button\n            color=\"empty\"\n            className=\"pt-0 pl-0 d-inline-block d-md-none\"\n            onClick={() => setDisplayOptionsIsOpen(!displayOptionsIsOpen)}\n          >\n            <IntlMessages id=\"pages.display-options\" />{' '}\n            <i className=\"simple-icon-arrow-down align-middle\" />\n          </Button>\n          <Collapse\n            isOpen={displayOptionsIsOpen}\n            className=\"d-md-block\"\n            id=\"displayOptions\"\n          >\n            <span className=\"mr-3 d-inline-block float-md-left\">\n              <a\n                href=\"#/\"\n                className={`mr-2 view-icon ${\n                  displayMode === 'list' ? 'active' : ''\n                }`}\n                onClick={() => changeDisplayMode('list')}\n              >\n                <DataListIcon />\n              </a>\n              <a\n                href=\"#/\"\n                className={`mr-2 view-icon ${\n                  displayMode === 'thumblist' ? 'active' : ''\n                }`}\n                onClick={() => changeDisplayMode('thumblist')}\n              >\n                <ThumbListIcon />\n              </a>\n              <a\n                href=\"#/\"\n                className={`mr-2 view-icon ${\n                  displayMode === 'imagelist' ? 'active' : ''\n                }`}\n                onClick={() => changeDisplayMode('imagelist')}\n              >\n                <ImageListIcon />\n              </a>\n            </span>\n\n            <div className=\"d-block d-md-inline-block pt-1\">\n              <UncontrolledDropdown className=\"mr-1 float-md-left btn-group mb-1\">\n                <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\n                  <IntlMessages id=\"pages.orderby\" />\n                  {selectedOrderOption.label}\n                </DropdownToggle>\n                <DropdownMenu>\n                  {orderOptions.map((order, index) => {\n                    return (\n                      <DropdownItem\n                        key={index}\n                        onClick={() => changeOrderBy(order.column)}\n                      >\n                        {order.label}\n                      </DropdownItem>\n                    );\n                  })}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              {/* <div className=\"search-sm d-inline-block float-md-left mr-1 mb-1 align-top\">\n                <input\n                  type=\"text\"\n                  name=\"keyword\"\n                  id=\"search\"\n                  placeholder={messages['menu.search']}\n                  onKeyPress={(e) => onSearchKey(e)}\n                />\n              </div> */}\n            </div>\n            <div className=\"float-md-right pt-1\">\n              <span className=\"text-muted text-small mr-1\">{`${startIndex}-${endIndex} of ${totalItemCount} `}</span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\n                  {selectedPageSize}\n                </DropdownToggle>\n                <DropdownMenu right>\n                  {pageSizes.map((size, index) => {\n                    return (\n                      <DropdownItem\n                        key={index}\n                        onClick={() => changePageSize(size)}\n                      >\n                        {size}\n                      </DropdownItem>\n                    );\n                  })}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </div>\n          </Collapse>\n        </div>\n        <Separator className=\"mb-5\" />\n      </Colxx>\n    </Row>\n  );\n};\n\nexport default injectIntl(ListPageHeading);\n","import React from 'react';\nimport { Nav, NavItem, NavLink } from 'reactstrap';\nimport { Colxx } from '../../common/CustomBootstrap';\n\nconst Pagination = ({\n  totalPage = 0,\n  currentPage = 1,\n  numberLimit = 5,\n  lastIsActive = true,\n  firstIsActive = true,\n  onChangePage,\n}) => {\n  let startPoint = 1;\n  let endPoint = numberLimit;\n\n  if (numberLimit > totalPage) {\n    startPoint = 1;\n    endPoint = totalPage;\n  } else if (currentPage <= parseInt(numberLimit / 2, 10)) {\n    startPoint = 1;\n    endPoint = numberLimit;\n  } else if (currentPage + parseInt(numberLimit / 2, 10) <= totalPage) {\n    startPoint = currentPage - parseInt(numberLimit / 2, 10);\n    endPoint = currentPage + parseInt(numberLimit / 2, 10);\n  } else {\n    startPoint = totalPage - (numberLimit - 1);\n    endPoint = totalPage;\n  }\n  startPoint = startPoint === 0 ? 1 : startPoint;\n  const points = [];\n  for (let i = startPoint; i <= endPoint; i += 1) {\n    points.push(i);\n  }\n\n  const firstPageButtonClassName = currentPage <= 1 ? 'disabled' : '';\n  const lastPageButtonClassName = currentPage >= totalPage ? 'disabled' : '';\n  const prevPageButtonClassName = currentPage <= 1 ? 'disabled' : '';\n  const nextPageButtonClassName = currentPage >= totalPage ? 'disabled' : '';\n  return totalPage > 1 ? (\n    <Colxx xxs=\"12\" className=\"mt-3 mb-3\">\n      <Nav className=\"pagination justify-content-center\">\n        {firstIsActive && (\n          <NavItem className={`page-item ${firstPageButtonClassName}`}>\n            <NavLink\n              className=\"page-link first c-pointer\"\n              onClick={() => onChangePage(1)}\n            >\n              <i className=\"simple-icon-control-start\" />\n            </NavLink>\n          </NavItem>\n        )}\n\n        <NavItem className={`page-item ${prevPageButtonClassName}`}>\n          <NavLink\n            className=\"page-link prev c-pointer\"\n            onClick={() => onChangePage(currentPage - 1)}\n          >\n            <i className=\"simple-icon-arrow-left\" />\n          </NavLink>\n        </NavItem>\n        {points.map((i) => {\n          return (\n            <NavItem\n              key={i}\n              className={`page-item ${currentPage === i && 'active'}`}\n            >\n              <NavLink\n                className=\"page-link c-pointer\"\n                onClick={() => onChangePage(i)}\n              >\n                {i}\n              </NavLink>\n            </NavItem>\n          );\n        })}\n        <NavItem className={`page-item ${nextPageButtonClassName}`}>\n          <NavLink\n            className=\"page-link next c-pointer\"\n            onClick={() => onChangePage(currentPage + 1)}\n          >\n            <i className=\"simple-icon-arrow-right\" />\n          </NavLink>\n        </NavItem>\n        {lastIsActive && (\n          <NavItem className={`page-item ${lastPageButtonClassName}`}>\n            <NavLink\n              className=\"page-link last c-pointer\"\n              onClick={() => onChangePage(totalPage)}\n            >\n              <i className=\"simple-icon-control-end\" />\n            </NavLink>\n          </NavItem>\n        )}\n      </Nav>\n    </Colxx>\n  ) : (\n    <Colxx xxs=\"12\" className=\"mt-2\" />\n  );\n};\n\nexport default Pagination;\n","import React from 'react';\nimport { ContextMenu, MenuItem } from 'react-contextmenu';\n\nconst ContextMenuContainer = ({ onContextMenu, onContextMenuClick }) => {\n  return (\n    <ContextMenu id=\"menu_id\" onShow={(e) => onContextMenu(e, e.detail.data)}>\n      <MenuItem onClick={onContextMenuClick} data={{ action: 'copy' }}>\n        <i className=\"simple-icon-docs\" /> <span>Copy</span>\n      </MenuItem>\n      <MenuItem onClick={onContextMenuClick} data={{ action: 'move' }}>\n        <i className=\"simple-icon-drawer\" /> <span>Move to archive</span>\n      </MenuItem>\n      <MenuItem onClick={onContextMenuClick} data={{ action: 'delete' }}>\n        <i className=\"simple-icon-trash\" /> <span>Delete</span>\n      </MenuItem>\n    </ContextMenu>\n  );\n};\n\nexport default ContextMenuContainer;\n","import React from 'react';\nimport { Card, CustomInput, Badge } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport { Colxx } from '../../common/CustomBootstrap';\n\nconst DataListView = ({ product, isSelect, collect, onCheckItem }) => {\n  return (\n    <Colxx xxs=\"12\" className=\"mb-3\">\n      <ContextMenuTrigger id=\"menu_id\" data={product.id} collect={collect}>\n        <Card\n          onClick={(event) => onCheckItem(event, product.title)}\n          className={classnames('d-flex flex-row', {\n            active: isSelect,\n          })}\n        >\n          <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\n            <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\n              <a target=\"_blank\" href={product.url} className=\"w-40 w-sm-100\">\n                <p className=\"list-item-heading mb-1 truncate\">\n                  {product.title}\n                </p>\n              </a>\n              <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\n                {product.category}\n              </p>\n              <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\n                {product.date}\n              </p>\n              <div className=\"w-15 w-sm-100\">\n                <Badge color={product.statusColor} pill>\n                  {product.status}\n                </Badge>\n              </div>\n            </div>\n            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n              <CustomInput\n                className=\"item-check mb-0\"\n                type=\"checkbox\"\n                id={`check_${product.id}`}\n                checked={isSelect}\n                onChange={() => {}}\n                label=\"\"\n              />\n            </div>\n          </div>\n        </Card>\n      </ContextMenuTrigger>\n    </Colxx>\n  );\n};\n\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\nexport default React.memo(DataListView);\n","import React from 'react';\nimport {\n  Row,\n  Card,\n  CardBody,\n  CardSubtitle,\n  CardImg,\n  CardText,\n  CustomInput,\n  Badge,\n} from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport { Colxx } from '../../common/CustomBootstrap';\n\nconst ImageListView = ({ product, isSelect, collect, onCheckItem }) => {\n  return (\n    <Colxx sm=\"6\" lg=\"4\" xl=\"3\" className=\"mb-3\" key={product.id}>\n      <ContextMenuTrigger id=\"menu_id\" data={product.id} collect={collect}>\n        <Card\n          onClick={(event) => onCheckItem(event, product.title)}\n          className={classnames({\n            active: isSelect,\n          })}\n        >\n          <div className=\"position-relative\">\n            <a href={product.url} target=\"_blank\" className=\"w-40 w-sm-100\">\n              <CardImg top alt={product.title} src={product.thumbnail} />\n            </a>\n            <Badge\n              color={product.statusColor}\n              pill\n              className=\"position-absolute badge-top-left\"\n            >\n              {product.status}\n            </Badge>\n          </div>\n          <CardBody>\n            <Row>\n              <Colxx xxs=\"2\">\n                <CustomInput\n                  className=\"item-check mb-0\"\n                  type=\"checkbox\"\n                  id={`check_${product.id}`}\n                  checked={isSelect}\n                  onChange={() => {}}\n                  label=\"\"\n                />\n              </Colxx>\n              <Colxx xxs=\"10\" className=\"mb-3\">\n                <CardSubtitle>{product.title}</CardSubtitle>\n                <CardText className=\"text-muted text-small mb-0 font-weight-light\">\n                  {product.date}\n                </CardText>\n              </Colxx>\n            </Row>\n          </CardBody>\n        </Card>\n      </ContextMenuTrigger>\n    </Colxx>\n  );\n};\n\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\nexport default React.memo(ImageListView);\n","import React from 'react';\nimport { Card, CustomInput, Badge } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport { Colxx } from '../../common/CustomBootstrap';\n\nconst ThumbListView = ({ product, isSelect, collect, onCheckItem }) => {\n  return (\n    <Colxx xxs=\"12\" key={product.id} className=\"mb-3\">\n      <ContextMenuTrigger id=\"menu_id\" data={product.id} collect={collect}>\n        <Card\n          onClick={(event) => onCheckItem(event, product.title)}\n          className={classnames('d-flex flex-row', {\n            active: isSelect,\n          })}\n        >\n          <a href={product.url} target=\"_blank\" className=\"d-flex\">\n            <img\n              alt={product.title}\n              src={product.thumbnail}\n              className=\"list-thumbnail responsive border-0 card-img-left\"\n            />\n          </a>\n          <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\n            <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\n              <NavLink to={`?p=${product.id}`} className=\"w-40 w-sm-100\">\n                <p className=\"list-item-heading mb-1 truncate\">\n                  {product.title}\n                </p>\n              </NavLink>\n              <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\n                {product.category}\n              </p>\n              <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\n                {product.date}\n              </p>\n              <div className=\"w-15 w-sm-100\">\n                <Badge color={product.statusColor} pill>\n                  {product.status}\n                </Badge>\n              </div>\n            </div>\n            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n              <CustomInput\n                className=\"item-check mb-0\"\n                type=\"checkbox\"\n                id={`check_${product.id}`}\n                checked={isSelect}\n                onChange={() => {}}\n                label=\"\"\n              />\n            </div>\n          </div>\n        </Card>\n      </ContextMenuTrigger>\n    </Colxx>\n  );\n};\n\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\nexport default React.memo(ThumbListView);\n","import React from 'react';\nimport { Row } from 'reactstrap';\nimport Pagination from './Pagination';\nimport ContextMenuContainer from './ContextMenuContainer';\nimport DataListView from './DataListView';\nimport ImageListView from './ImageListView';\nimport ThumbListView from './ThumbListView';\n\nfunction collect(props) {\n  return { data: props.data };\n}\n\nconst ListPageListing = ({\n  items,\n  displayMode,\n  selectedItems,\n  onCheckItem,\n  currentPage,\n  totalPage,\n  onContextMenuClick,\n  onContextMenu,\n  onChangePage,\n}) => {\n  return (\n    <Row>\n      {items.map((product) => {\n        if (displayMode === 'imagelist') {\n          return (\n            <ImageListView\n              key={product.id}\n              product={product}\n              isSelect={selectedItems.includes(product.title)}\n              collect={collect}\n              onCheckItem={onCheckItem}\n            />\n          );\n        }\n        if (displayMode === 'thumblist') {\n          return (\n            <ThumbListView\n              key={product.id}\n              product={product}\n              isSelect={selectedItems.includes(product.title)}\n              collect={collect}\n              onCheckItem={onCheckItem}\n            />\n          );\n        }\n        return (\n          <DataListView\n            key={product.id}\n            product={product}\n            isSelect={selectedItems.includes(product.title)}\n            onCheckItem={onCheckItem}\n            collect={collect}\n          />\n        );\n      })}\n      <Pagination\n        currentPage={currentPage}\n        totalPage={totalPage}\n        onChangePage={(i) => onChangePage(i)}\n      />\n      <ContextMenuContainer\n        onContextMenuClick={onContextMenuClick}\n        onContextMenu={onContextMenu}\n      />\n    </Row>\n  );\n};\n\nexport default React.memo(ListPageListing);\n","/* eslint-disable no-unused-expressions */\nimport mousetrap from 'mousetrap';\nimport { useEffect, useRef } from 'react';\n\n/**\n * Use mousetrap hook\n *\n * @param  {(string | string[])} handlerKey - A key, key combo or array of combos according to Mousetrap documentation.\n * @param  { function } handlerCallback - A function that is triggered on key combo catch.\n */\nexport default (handlerKey, handlerCallback) => {\n  const actionRef = useRef(null);\n  actionRef.current = handlerCallback;\n\n  useEffect(() => {\n    mousetrap.bind(handlerKey, (evt, combo) => {\n      typeof actionRef.current === 'function' && actionRef.current(evt, combo);\n      evt.preventDefault();\n    });\n    return () => {\n      mousetrap.unbind(handlerKey);\n    };\n  }, [handlerKey]);\n};\n","import React, { useState, useEffect } from 'react';\n\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nimport ListPageHeading from './ListPageHeading';\nimport ListPageListing from './ListPageListing';\nimport useMousetrap from '../../../hooks/use-mousetrap';\n\nconst getIndex = (value, arr, prop) => {\n  for (let i = 0; i < arr.length; i += 1) {\n    if (arr[i][prop] === value) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nconst orderOptions = [\n  { column: 'name_asc', label: 'Name (ASC)' },\n  { column: 'name_desc', label: 'Name (DESC)' }\n];\nconst pageSizes = [4, 8, 12, 20];\n\nconst categories = [\n  { label: 'Cakes', value: 'Cakes', key: 0 },\n  { label: 'Cupcakes', value: 'Cupcakes', key: 1 },\n  { label: 'Desserts', value: 'Desserts', key: 2 },\n];\n\nconst ImageViewer = ({ match, toggleModal, token, fileLibraryURL, returnValues }) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [displayMode, setDisplayMode] = useState('imagelist');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedPageSize, setSelectedPageSize] = useState(8);\n  const [selectedOrderOption, setSelectedOrderOption] = useState({\n    column: 'name_asc',\n    label: 'Name (ASC)',\n  });\n\n  const [modalOpen, setModalOpen] = useState(false);\n  const [totalItemCount, setTotalItemCount] = useState(0);\n  const [totalPage, setTotalPage] = useState(1);\n  const [search, setSearch] = useState('');\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [items, setItems] = useState([]);\n  const [lastChecked, setLastChecked] = useState(null);\n\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [selectedPageSize, selectedOrderOption]);\n\n  useEffect(() => {\n    async function fetchData() {\n      axios\n        .get(\n          `${fileLibraryURL}?pageSize=${selectedPageSize}&currentPage=${currentPage}&orderBy=${selectedOrderOption.column}&search=${search}`\n        , {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        })\n        .then((res) => {\n          return res.data;\n        })\n        .then((data) => {\n          setTotalPage(data.totalPage);\n          setItems(\n            data.data\n            // .map((x) => {\n            //   return { ...x, img: x.img.replace('img/', 'img/products/') };\n            // })\n          );\n          setSelectedItems([]);\n          setTotalItemCount(data.totalItem);\n          setIsLoaded(true);\n        });\n    }\n    fetchData();\n  }, [selectedPageSize, currentPage, selectedOrderOption, search]);\n\n  const onCheckItem = (event, id) => {\n    if (\n      event.target.tagName === 'A' ||\n      (event.target.parentElement && event.target.parentElement.tagName === 'A')\n    ) {\n      return true;\n    }\n    if (lastChecked === null) {\n      setLastChecked(id);\n    }\n\n    let selectedList = [...selectedItems];\n    if (selectedList.includes(id)) {\n      selectedList = selectedList.filter((x) => x !== id);\n    } else {\n      selectedList.push(id);\n    }\n    setSelectedItems(selectedList);\n\n    if (event.shiftKey) {\n      let newItems = [...items];\n      const start = getIndex(id, newItems, 'id');\n      const end = getIndex(lastChecked, newItems, 'id');\n      newItems = newItems.slice(Math.min(start, end), Math.max(start, end) + 1);\n      selectedItems.push(\n        ...newItems.map((item) => {\n          return item.id;\n        })\n      );\n      selectedList = Array.from(new Set(selectedItems));\n      setSelectedItems(selectedList);\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  const handleChangeSelectAll = (isToggle) => {\n    if (selectedItems.length >= items.length) {\n      if (isToggle) {\n        setSelectedItems([]);\n      }\n    } else {\n      setSelectedItems(items.map((x) => x.id));\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  const onContextMenuClick = (e, data) => {\n    // params : (e,data,target)\n    console.log('onContextMenuClick - selected items', selectedItems);\n    console.log('onContextMenuClick - action : ', data.action);\n  };\n\n  const onContextMenu = (e, data) => {\n    const clickedProductId = data.data;\n    if (!selectedItems.includes(clickedProductId)) {\n      setSelectedItems([clickedProductId]);\n    }\n\n    return true;\n  };\n\n  useMousetrap(['ctrl+a', 'command+a'], () => {\n    handleChangeSelectAll(false);\n  });\n\n  useMousetrap(['ctrl+d', 'command+d'], () => {\n    setSelectedItems([]);\n    return false;\n  });\n\n  const startIndex = (currentPage - 1) * selectedPageSize;\n  const endIndex = currentPage * selectedPageSize;\n\n  return !isLoaded ? (\n    <div className=\"loading\" />\n  ) : (\n    <>\n      <div className=\"disable-text-selection\">\n        <ListPageHeading\n          heading=\"menu.image-list\"\n          displayMode={displayMode}\n          changeDisplayMode={setDisplayMode}\n          handleChangeSelectAll={handleChangeSelectAll}\n          changeOrderBy={(column) => {\n            setSelectedOrderOption(\n              orderOptions.find((x) => x.column === column)\n            );\n          }}\n          changePageSize={setSelectedPageSize}\n          selectedPageSize={selectedPageSize}\n          totalItemCount={totalItemCount}\n          selectedOrderOption={selectedOrderOption}\n          match={match}\n          startIndex={startIndex}\n          endIndex={endIndex}\n          selectedItemsLength={selectedItems ? selectedItems.length : 0}\n          itemsLength={items ? items.length : 0}\n          onSearchKey={(e) => {\n            if (e.key === 'Enter') {\n              setSearch(e.target.value.toLowerCase());\n            }\n          }}\n          orderOptions={orderOptions}\n          pageSizes={pageSizes}\n          // toggleModal={ () => setModalOpen(!modalOpen) }\n          toggleModal={ () => {\n            returnValues(selectedItems);\n            return toggleModal(false);\n          }}\n        />\n        <ListPageListing\n          items={items}\n          displayMode={displayMode}\n          selectedItems={selectedItems}\n          onCheckItem={onCheckItem}\n          currentPage={currentPage}\n          totalPage={totalPage}\n          onContextMenuClick={onContextMenuClick}\n          onContextMenu={onContextMenu}\n          onChangePage={setCurrentPage}\n        />\n      </div>\n    </>\n  );\n};\n\n\nconst mapStateToProps = ({ authUser }) => {\n  const { token } = authUser;\n  return { token };\n};\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(ImageViewer);\n","import React from 'react';\nimport axios from 'axios';\nimport { Button, Modal, ModalBody } from 'reactstrap';\nimport DropzoneComponent from 'react-dropzone-component';\nimport { fetch } from '../../helpers/Utils';\nimport { connect } from 'react-redux';\nimport { NotificationManager } from '../common/react-notifications';\nimport ImageViewer from './FileLibrary/ImageViewer';\nconst ReactDOMServer = require('react-dom/server');\nconst mime = require('mime-types');\n\n\nconst dropzoneConfig = {\n  thumbnailHeight: 160,\n  previewTemplate: ReactDOMServer.renderToStaticMarkup(\n    <div className=\"dz-preview dz-file-preview mb-3\">\n      <div className=\"d-flex flex-row \">\n        <div className=\"p-0 w-30 position-relative\">\n          <div className=\"dz-error-mark\">\n            <span>\n              <i />{\" \"}\n            </span>\n          </div>\n          <div className=\"dz-success-mark\">\n            <span>\n              <i />\n            </span>\n          </div>\n          <div className=\"preview-container\">\n            {/*  eslint-disable-next-line jsx-a11y/alt-text */}\n            <img data-dz-thumbnail className=\"img-thumbnail border-0\" />\n            <i className=\"simple-icon-doc preview-icon\" />\n          </div>\n        </div>\n        <div className=\"pl-3 pt-2 pr-2 pb-1 w-70 dz-details position-relative\">\n          <div>\n            {\" \"}\n            <span data-dz-name />{\" \"}\n          </div>\n          <div className=\"text-primary text-extra-small\" data-dz-size />\n          <div className=\"dz-progress\">\n            <span className=\"dz-upload\" data-dz-uploadprogress />\n          </div>\n          <div className=\"dz-error-message\">\n            <span data-dz-errormessage />\n          </div>\n        </div>\n      </div>\n      <a href=\"#/\" className=\"remove\" data-dz-remove>\n        {\" \"}\n        <i className=\"glyph-icon simple-icon-trash\" />{\" \"}\n      </a>\n    </div>\n  )\n};\n\n\nclass FileLibrary extends React.Component {\n\n    fileLibraryURL = `${process.env.REACT_APP_APPLICATION_PROTOCOL}://${process.env.REACT_APP_APPLICATION_HOST}:${process.env.REACT_APP_LIBRARY_SERVICE_PORT}`;\n\n    attributes = {\n      multiple: true,\n      dictDefaultMessage: 'Select a file'\n    };\n\n    state = {\n        selectedItems: [],\n        isOpen: false,\n        fetchingUploads: false\n    };\n    \n    toggle = async () => {\n      const { isOpen } = this.state;\n      this.setState({\n        isOpen: !isOpen,\n        fetchingUploads: !isOpen\n      }, async () => {\n        if(this.state.isOpen) {\n          return await this.fetchUploads();\n        }\n      });\n    }\n\n    clear() {\n        this.dropzone.removeAllFiles(true);\n    }\n\n    handleSelectedItems = async (selectedItems) => {\n      const { form, field } = this.props;\n\n      form.setFieldValue(field.name, selectedItems);\n\n\n      if(this.dropzone) {\n\n        selectedItems.forEach( (selectedItem) => {\n\n          const mockFile = {\n            name: selectedItem,\n            // size: contentLengthRequest.headers[\"content-length\"],\n            upload: {\n              filename: selectedItem\n            }\n          };\n          this.dropzone.emit(\"addedfile\", mockFile);\n\n\n        });\n      }\n    }\n\n    renderLibraryContent = () => {\n      const { fetchingUploads } = this.state;\n      if(fetchingUploads) {\n        return (\n          <div>Loading...</div>\n        );\n      }\n      return (\n        <ImageViewer\n          fileLibraryURL={this.fileLibraryURL}\n          toggleModal={ (state) => this.setState({ isOpen: state }) }\n          returnValues={ (selectedItems) => this.handleSelectedItems(selectedItems) }\n        />\n      );\n    }\n\n    fetchUploads = async () => {\n      try {\n        const request = await fetch(this.fileLibraryURL, {\n          headers: {\n            Authorization: `Bearer ${this.props.token}`\n          }\n        });\n        const response = await request.json();\n        if(!request.ok) {\n          throw new Error(response.message || `An error occurred while fetching uploads.`);\n        }\n        return this.setState({\n          fetchingUploads: false,\n          uploads: response.uploads\n        });\n      } catch(e) {\n        NotificationManager.error(`Failed to fetch uploads.`, `Error`, 3000, null, 1, null);\n      }\n    }\n\n    render() {\n        let { name, field, form, initialImages, hidden } = this.props;\n        const { isOpen } = this.state;\n        const externalCloseBtn = <button className=\"close right-modal-external-close-button\" onClick={ async () => await this.toggle() }>&times;</button>;\n        return !hidden ? (\n            <div>\n              <DropzoneComponent\n                className=\"mb-3\"\n                config={{\n                    postUrl: this.fileLibraryURL\n                }}\n                djsConfig={{\n                    ...dropzoneConfig,\n                    headers: {\n                      Authorization: `Bearer ${this.props.token}`\n                    },\n                    paramName: name,\n                    renameFile: function(file) {\n                        const extension = mime.extension(file.type);\n                        return file.name.slice(0, 4) + Date.now() + \".\" + extension;\n                    },\n                    uploadMultiple: this.attributes.multiple || false,\n                    maxFilesize: this.attributes.maxFileSize || undefined,\n                    maxFiles: this.attributes.maxFiles || undefined,\n                    dictDefaultMessage: this.attributes.dictDefaultMessage || undefined,\n                    acceptedFiles: this.attributes.allowedExtensions\n                }}\n                eventHandlers = {{\n                    success: (file, response) => {\n                      const { form, field } = this.props;\n                      const newFiles = [\n                        ...this.state.selectedItems,\n                        ...response.files.map( file => file.url )\n                      ];\n                      form.setFieldValue(field.name, newFiles);\n                      return this.setState({\n                        selectedItems: newFiles\n                      });\n                    },\n                    init: async (dropzone) => {\n                        this.dropzone = dropzone;\n                        if(initialImages !== \"\") {\n                          const contentLengthRequest = await axios({\n                            url: initialImages,\n                            type: \"GET\"\n                          });\n                          if(contentLengthRequest.status === 200) {\n                            const mockFile = {\n                              name: initialImages,\n                              size: contentLengthRequest.headers[\"content-length\"],\n                              upload: {\n                                filename: initialImages\n                              }\n                            };\n                            dropzone.emit(\"addedfile\", mockFile);\n                            dropzone.options.thumbnail.call(dropzone, mockFile, initialImages);\n                          }\n                        }\n                        this.dropzone.on(\"removedfile\", async (file) => {\n                            const removalRequest = await axios({\n                                method: 'DELETE',\n                                url: this.fileLibraryURL,\n                                data: {\n                                    name: file.upload.filename\n                                }\n                            });\n                            if(removalRequest.status !== 201) {\n                                return console.error(removalRequest.data.message);\n                            }\n                        });\n                        this.dropzone.on(\"removedfile\", async (file) => {\n                            const removalRequest = await axios({\n                                method: 'DELETE',\n                                url: this.fileLibraryURL,\n                                data: {\n                                    name: file.upload.filename\n                                }\n                            });\n                            if(removalRequest.status !== 201) {\n                                return console.error(removalRequest.data.message);\n                            }\n                        });\n                    }\n                }}\n              />\n              <hr />\n              <div className=\"text-right\">\n                <Button color=\"primary\" onClick={ () => this.toggle() }>Browse Files</Button>\n              </div>\n              <Modal isOpen={isOpen} fade={false} toggle={ () => this.toggle() } modalClassName=\"modal-right\" external={externalCloseBtn}>\n                  <ModalBody>\n                    { this.renderLibraryContent() }\n                  </ModalBody>\n              </Modal>\n            </div>\n        ) : null;\n    }  \n\n}\n\n\nconst mapStateToProps = ({ authUser }) => {\n  const { token } = authUser;\n  return { token };\n};\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(FileLibrary);\n\n\n// export default FileLibrary;","import React, { Component } from \"react\";\nimport { Card, CardBody, CardTitle, FormGroup, Label } from \"reactstrap\";\nimport { Wizard, Steps, Step } from 'react-albus';\nimport { injectIntl } from 'react-intl';\nimport { BottomNavigation } from \"./BottomNavigation\";\nimport { TopNavigation } from \"./TopNavigation\";\nimport { NotificationManager } from \"../../common/react-notifications\";\nimport { Formik, Form, Field } from \"formik\";\nimport MultiSelect from \"../MultiSelect\";\nimport CustomAceEditor from \"../CustomAceEditor\";\nimport SearchableMultiSelect from \"../SearchableMultiSelect\";\nimport SingleSelect from \"../SingleSelect\";\nimport CustomDatePicker from \"../CustomDatePicker\";\nimport { withRouter } from \"react-router-dom\";\nimport { ProductList, ProductCardList } from '../index';\nimport classNames from 'classnames';\nimport { fetch } from \"../../../helpers/Utils\";\nimport FileLibrary from \"../FileLibrary\";\n\nclass Validation extends Component {\n\n    currentStepData = {};\n\n    constructor(props) {\n        super(props);\n        const { component } = this.props;\n        this.onClickNext = this.onClickNext.bind(this);\n        this.onClickPrev = this.onClickPrev.bind(this);\n        component.steps.forEach( step => this[`form${step.id}`] = React.createRef() );\n        const fields = component.steps.map( step => step.elements.map( element => ({ form: this[`form${step.id}`], valid: false, name: element.name, value: \"\" }) ) ).flat();\n        this.state = {\n            bottomNavHidden: false,\n            topNavDisabled: false,\n            loading: true,\n            processing: false,\n            currentStepData: {},\n            redirect: null,\n            fields\n        };\n    }\n\n    async componentDidMount() {\n        return await this.initialization();\n    }\n\n    async initialization() {\n        const { user, baseURL, clientID, token, customData, component: { initialAction } } = this.props;\n        if(initialAction) {\n            return await fetch(`${baseURL}/validateWizardStep`, {\n                method: \"POST\",\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                },\n                body: JSON.stringify({\n                    'data': customData || null,\n                    'action': initialAction,\n                    'client_id': clientID,\n                    'user_id': user.id\n                })\n            })\n            .then( response => response.json() )\n            .then( response => {\n                if(response.outcome !== \"OK\") {\n                    throw new Error(response.message);\n                }\n                if(response.data) {\n                    this.setState({\n                        loading: false,\n                        currentStepData: {\n                            ...this.state.currentStepData,\n                            ...response.data\n                        }\n                    });\n                    return this.forceUpdate();\n                }\n            })\n            .catch( error => {\n                this.props.callback(true);\n                return NotificationManager.error(error.message, \"Oops! We got a problem.\", 3000, null, null, '');\n            });\n        }\n        return this.setState({\n            loading: false\n        });\n    }\n\n    validate(elementName, value, validationRules) {        \n        let error;\n        validationRules.forEach( rule => {\n            let splittedRule = rule.split(\":\");\n            if(splittedRule[0] === \"required\") {\n                if(Array.isArray(value)) {\n                    if (value.length === 0) {\n                        error = `Please enter ${elementName}`;\n                    }\n                } else {\n                    if (!value) {\n                        error = `Please enter ${elementName}`;\n                    }\n                }\n            }\n            if(splittedRule[0] === \"maxLength\") {\n                if (value.length > splittedRule[1]) {\n                    error = `${elementName} cannot be longer than ${splittedRule[1]} characters.`;\n                }\n            }\n        });\n        return error;\n    }\n\n    hideNavigation() {\n        this.setState({ bottomNavHidden: true, topNavDisabled: true });\n    }\n\n    asyncLoading () {\n        this.setState({ loading: true });\n        setTimeout(() => {\n            this.setState({ loading: false });\n        }, 3000);\n    }\n\n    onClickNext(goToNext, steps, step) {\n        const { user, baseURL, token, clientID, callback } = this.props;\n        const { fields, redirect } = this.state;\n        let form = this[`form${step.id}`].current;\n        let currentStepFormFields = fields.filter( field => field.form === this[`form${step.id}`] );\n        form.submitForm().then( async () => {\n            currentStepFormFields.forEach( currentField => {\n                let name = currentField.name;\n                form.validateField(name)\n                    .then( errorMessage => {\n                        if(errorMessage !== undefined) {\n                            return form.setFieldTouched(name, true, true);\n                        }\n                    })\n                    .catch( error => console.trace(error) );                \n                currentField.value = form.state.values[name];\n                currentField.valid = form.state.errors[name] ? false : true;\n                this.setState({\n                    fields: [ ...new Set([ ...fields, currentField ]) ]\n                });\n            });\n            let currentStepFormFieldsStatus = currentStepFormFields.map( field => field.valid );\n            if (!currentStepFormFieldsStatus.includes(false)) {\n                const data = currentStepFormFields.map( field => ([ field.name, field.value ]) );\n                if (steps.length - 1 <= steps.indexOf(step)) {\n                    if(redirect || step.redirect) {\n                        let url = redirect || step.redirect;\n                        let modifiedData = Object.fromEntries(data);\n                        Object.keys(modifiedData).forEach( key => {\n                            if(modifiedData.hasOwnProperty(key)) {\n                                url = url.replace(new RegExp(key, 'g'), modifiedData[key]);\n                            }\n                        });\n                        return this.props.history.push(`/app${url}`);\n                    }\n                }\n                if(!step.action) {\n                    if(steps.indexOf(step) === (steps.length - 1)) {\n                        if(callback) {\n                            return callback();\n                        }\n                    }\n                }\n                try {\n                    this.setState({\n                        processing: true\n                    });\n                    const request = await fetch(`${baseURL}/validateWizardStep`, {\n                        method: \"POST\",\n                        headers: {\n                            'Accept': 'application/json',\n                            'Content-Type': 'application/json',\n                            'Authorization': `Bearer ${token}`\n                        },\n                        body: JSON.stringify({\n                            'data': Object.fromEntries(data),\n                            'action': step.action,\n                            'client_id': clientID,\n                            'user_id': user.id\n                        })\n                    });\n                    const response = await request.json();\n                    if (!request.ok) {\n                        this.setState({\n                            processing: false\n                        });\n                        throw response;\n                    }\n                    if(response.outcome !== \"OK\") {\n                        this.setState({\n                            processing: false\n                        });\n                        return NotificationManager.warning(response.message, \"Oops! We got a problem.\", 3000, null, null, '');\n                    }\n                    if(response.redirectIsExternal) {\n                        return window.location = response.redirect;\n                    }\n                    this.setState({\n                        currentStepData: response.data || {},\n                        redirect: response.redirect || null,\n                        processing: false\n                    });\n                    step.isDone = true;\n                    goToNext();\n                } catch(error) {\n                    return NotificationManager.error(error.message, \"Oops! We got a problem.\", 3000, null, null, '');\n                }\n            }\n            if(steps.indexOf(step) === (steps.length - 1)) {\n                if(callback) {\n                    return callback();\n                }\n            }\n        });\n    }\n\n    async onClickPrev(goToPrev, steps, step) {\n        await goToPrev();\n        step = steps[steps.indexOf(step) - 1];\n        const { fields } = this.state;\n        let form = this[`form${step.id}`].current;\n        let currentStepFormFields = fields.filter( field => field.form === this[`form${step.id}`] );\n        let updatedFields = currentStepFormFields.map( currentField => {\n            let name = currentField.name;\n            // currentField.value = form.state.values[name];\n            currentField.valid = form.state.errors[name] ? false : true;\n            return currentField;\n        });\n        return this.setState({\n            fields: [ ...new Set([ ...fields, ...updatedFields ]) ]\n        });\n    }\n\n    getSteps(steps, currentStepData) {\n        const { baseURL, token, clientID, user } = this.props;\n        const { processing } = this.state;\n        return (\n            <Steps>\n                {\n                    steps.map( (step, index) => {\n                        return (\n                            <Step key={index} id={step.id} redirect={step.redirect} action={step.action} name={step.title} desc={step.description}>\n                                <div className=\"wizard-basic-step\">\n                                    <Formik\n                                        ref={this[`form${step.id}`]}\n                                        initialValues={currentStepData}\n                                        onSubmit={ () => null }>\n                                        {({ errors, touched }) => (\n                                            <Form className=\"av-tooltip tooltip-label-right\">\n                                                { processing ? \n                                                <div className=\"loading-backdrop\">\n                                                    <div className=\"loading position-static\"></div>\n                                                </div>\n                                                : null }\n                                                { step.elements.map( (element, index) => {\n                                                    const { type, component, isHidden } = element;\n\n                                                    if(type === \"textContent\") {\n                                                        return (\n                                                            <h2 key={index} className=\"py-2 text-center\">{currentStepData[element.name] || element.value}</h2>\n                                                        );\n                                                    }\n\n                                                    if(type === \"component\") {\n                                                        const { id, functions, type: componentType } = component;\n                                                        if(componentType === \"productList\") {\n                                                            return (\n                                                                <FormGroup key={index}>\n                                                                    <Field\n                                                                        className=\"form-control\"\n                                                                        id={id}\n                                                                        baseURL={baseURL}\n                                                                        token={token}\n                                                                        clientID={clientID}\n                                                                        user={user}\n                                                                        name={element.name}\n                                                                        hidden={isHidden}\n                                                                        // placeholder={element.label}\n                                                                        component={ProductList}\n                                                                        dynamicComponent={component}\n                                                                        functions={functions}\n                                                                        data={currentStepData[element.name]}\n                                                                        onChange={ (value) => this.validate(element.label, value, element.validationRules) } \n                                                                        validate={ (value) => this.validate(element.label, value, element.validationRules) }\n                                                                    />\n                                                                    {errors[element.name] && touched[element.name] && (\n                                                                        <div className=\"invalid-feedback d-block\">\n                                                                            {errors[element.name]}\n                                                                        </div>\n                                                                    )}\n                                                                </FormGroup>\n                                                            );\n                                                        }\n\n                                                        if(componentType === \"productCardList\") {\n                                                            return (\n                                                                <FormGroup key={index}>\n                                                                    <Field\n                                                                        className=\"form-control\"\n                                                                        id={id}\n                                                                        baseURL={baseURL}\n                                                                        token={token}\n                                                                        clientID={clientID}\n                                                                        user={user}\n                                                                        name={element.name}\n                                                                        hidden={isHidden}\n                                                                        // placeholder={element.label}\n                                                                        component={ProductCardList}\n                                                                        inWizard={true}\n                                                                        hideShadow={true}\n                                                                        dynamicComponent={component}\n                                                                        functions={functions}\n                                                                        data={currentStepData[element.name]}\n                                                                        onChange={ (value) => this.validate(element.label, value, element.validationRules) } \n                                                                        validate={ (value) => this.validate(element.label, value, element.validationRules) }\n                                                                    />\n                                                                    {errors[element.name] && touched[element.name] && (\n                                                                        <div className=\"invalid-feedback d-block\">\n                                                                            {errors[element.name]}\n                                                                        </div>\n                                                                    )}\n                                                                </FormGroup>\n                                                            );\n                                                        }\n\n\n                                                    }\n\n                                                    \n\n                                                    if(type === \"searchableDDL\") {\n                                                        let optionLabel = element.ddl.label;\n                                                        let optionValue = element.ddl.value;\n                                                        let options = element.data.map( (dataItem, index) => ({ key: index, label: dataItem[optionLabel], value: dataItem[optionValue] }) );\n                                                        return (\n                                                            <FormGroup className=\"has-float-label\" key={index}>\n                                                                { !isHidden ? <Label for={element.name}>{element.label}</Label> : null }\n                                                                <Field\n                                                                    className=\"form-control\"\n                                                                    name={element.name}\n                                                                    id={element.name}\n                                                                    element={element}\n                                                                    hidden={isHidden}\n                                                                    // placeholder={element.label}\n                                                                    component={SearchableMultiSelect}\n                                                                    baseURL={baseURL}\n                                                                    token={token}\n                                                                    clientID={clientID}\n                                                                    options={options}\n                                                                    onChange={ (value) => this.validate(element.label, value, element.validationRules) } \n                                                                    validate={ (value) => this.validate(element.label, value, element.validationRules)}\n                                                                />\n                                                                {errors[element.name] && touched[element.name] && (\n                                                                    <div className=\"invalid-feedback d-block\">\n                                                                        {errors[element.name]}\n                                                                    </div>\n                                                                )}\n                                                            </FormGroup>\n                                                        );\n                                                    }\n\n                                                    if(type === \"staticDDL\") {\n                                                        let optionLabel = element.ddl.label;\n                                                        let optionValue = element.ddl.value;\n                                                        let options = element.data.map( (dataItem, index) => ({ key: index, label: dataItem[optionLabel], value: dataItem[optionValue] }) );\n                                                        return (\n                                                            <FormGroup className=\"has-float-label\" key={index}>\n                                                                { !isHidden ? <Label for={element.name}>{element.label}</Label> : null }\n                                                                <Field\n                                                                    className=\"form-control\"\n                                                                    name={element.name}\n                                                                    id={element.name}\n                                                                    hidden={isHidden}\n                                                                    // placeholder={element.label}\n                                                                    component={MultiSelect}\n                                                                    options={options}\n                                                                    onChange={ (value) => this.validate(element.label, value, element.validationRules) } \n                                                                    validate={ (value) => this.validate(element.label, value, element.validationRules)}\n                                                                />\n                                                                {errors[element.name] && touched[element.name] && (\n                                                                    <div className=\"invalid-feedback d-block\">\n                                                                        {errors[element.name]}\n                                                                    </div>\n                                                                )}\n                                                            </FormGroup>\n                                                        );\n                                                    }\n\n                                                    if(type === \"predefinedDDL\") {\n                                                        let optionLabel = element.ddl.label;\n                                                        let optionValue = element.ddl.value;\n                                                        let options = element.data.map( (dataItem, index) => ({ key: index, label: dataItem[optionLabel], value: dataItem[optionValue] }) );\n                                                        return (\n                                                            <FormGroup className=\"has-float-label\" key={index}>\n                                                                { !isHidden ? <Label for={element.name}>{element.label}</Label> : null }\n                                                                <Field\n                                                                    className=\"form-control\"\n                                                                    name={element.name}\n                                                                    id={element.name}\n                                                                    hidden={isHidden}\n                                                                    // placeholder={element.label}\n                                                                    component={SingleSelect}\n                                                                    options={options}\n                                                                    onChange={ (value) => this.validate(element.label, value, element.validationRules) } \n                                                                    validate={ (value) => this.validate(element.label, value, element.validationRules)}\n                                                                />\n                                                                {errors[element.name] && touched[element.name] && (\n                                                                    <div className=\"invalid-feedback d-block\">\n                                                                        {errors[element.name]}\n                                                                    </div>\n                                                                )}\n                                                            </FormGroup>\n                                                        );\n                                                    }\n\n                                                    if(type === \"ddl\") {\n                                                        let options = [\n                                                            ...(currentStepData.hasOwnProperty(element.name) ? currentStepData[element.name] : [])\n                                                        ];\n                                                        return (\n                                                            <FormGroup className=\"has-float-label\" key={index}>\n                                                                { !isHidden ? <Label for={element.name}>{element.label}</Label> : null }\n                                                                <Field\n                                                                    className=\"form-control\"\n                                                                    name={element.name}\n                                                                    id={element.name}\n                                                                    hidden={isHidden}\n                                                                    // placeholder={element.label}\n                                                                    component={MultiSelect}\n                                                                    options={options}\n                                                                    onChange={ (value) => this.validate(element.label, value, element.validationRules) } \n                                                                    validate={ (value) => this.validate(element.label, value, element.validationRules)}\n                                                                />\n                                                                {errors[element.name] && touched[element.name] && (\n                                                                    <div className=\"invalid-feedback d-block\">\n                                                                        {errors[element.name]}\n                                                                    </div>\n                                                                )}\n                                                            </FormGroup>\n                                                        );\n                                                    }\n\n                                                    if(type === \"json\") {\n                                                        return (\n                                                            <FormGroup className=\"has-float-label\" key={index}>\n                                                                {/* { !isHidden && !hiddenLabel ? <Label for={element.name}>{element.label}</Label> : null } */}\n                                                                <Field\n                                                                    className={ classNames('form-control', { 'd-none': isHidden }) }\n                                                                    name={element.name}\n                                                                    id={element.name}\n                                                                    component={CustomAceEditor}\n                                                                    placeholder={element.label}\n                                                                    onChange={ (value) => this.validate(element.label, JSON.stringify(value), element.validationRules)}\n                                                                    validate={ (value) => this.validate(element.label, JSON.stringify(value), element.validationRules)}\n                                                                />\n                                                                {errors[element.name] && touched[element.name] && (\n                                                                    <div className=\"invalid-feedback d-block\">\n                                                                        {errors[element.name]}\n                                                                    </div>\n                                                                )}\n                                                            </FormGroup>\n                                                        );\n                                                    }\n                                                    \n                                                    if(type === \"media\") {\n                                                        return (\n                                                            <FormGroup className=\"has-float-label\" key={index}>\n                                                                { !isHidden ? <Label for={element.name}>{element.label}</Label> : null }\n                                                                <Field\n                                                                    className={ classNames('form-control', { 'd-none': isHidden }) }\n                                                                    name={element.name}\n                                                                    id={element.name}\n                                                                    component={FileLibrary}\n                                                                    // attributes={imageEditorAttributes}\n                                                                    validate={ (value) => this.validate(element.label, value, element.validationRules)}\n                                                                />\n                                                                {errors[element.name] && touched[element.name] && (\n                                                                    <div className=\"invalid-feedback d-block\">\n                                                                        {errors[element.name]}\n                                                                    </div>\n                                                                )}\n                                                            </FormGroup>\n                                                        );\n                                                    }\n\n                                                    if(type === \"textarea\") {\n                                                        return (\n                                                            <FormGroup className=\"has-float-label\" key={index}>\n                                                                { !isHidden ? <Label for={element.name}>{element.label}</Label> : null }\n                                                                <Field\n                                                                    className={ classNames('form-control', { 'd-none': isHidden }) }\n                                                                    name={element.name}\n                                                                    id={element.name}\n                                                                    component=\"textarea\"\n                                                                    rows={3}\n                                                                    // placeholder={element.label}\n                                                                    validate={ (value) => this.validate(element.label, value, element.validationRules)}\n                                                                />\n                                                                {errors[element.name] && touched[element.name] && (\n                                                                    <div className=\"invalid-feedback d-block\">\n                                                                        {errors[element.name]}\n                                                                    </div>\n                                                                )}\n                                                            </FormGroup>\n                                                        );\n                                                    }\n\n                                                    if(type === \"password\") {\n                                                        return (\n                                                            <FormGroup className=\"has-float-label\" key={index}>\n                                                                { !isHidden ? <Label for={element.name}>{element.label}</Label> : null }\n                                                                <Field\n                                                                    className=\"form-control\"\n                                                                    name={element.name}\n                                                                    id={element.name}\n                                                                    type={isHidden ? 'hidden' : 'password'}\n                                                                    // placeholder={element.label}\n                                                                    validate={ (value) => this.validate(element.label, value, element.validationRules)}\n                                                                />\n                                                                {errors[element.name] && touched[element.name] && (\n                                                                    <div className=\"invalid-feedback d-block\">\n                                                                        {errors[element.name]}\n                                                                    </div>\n                                                                )}\n                                                            </FormGroup>\n                                                        );\n                                                    }\n\n                                                    if(type === \"date\") {\n                                                        return (\n                                                            <FormGroup className=\"has-float-label\" key={index}>\n                                                                { !isHidden ? <Label for={element.name}>{element.label}</Label> : null }\n                                                                <Field\n                                                                    className=\"form-control\"\n                                                                    name={element.name}\n                                                                    id={element.name}\n                                                                    hidden={isHidden}\n                                                                    component={CustomDatePicker}\n                                                                    // placeholder={element.label}\n                                                                    onChange={ (value) => this.validate(element.label, value, element.validationRules) }\n                                                                    validate={ (value) => this.validate(element.label, value, element.validationRules)}\n                                                                />\n                                                                {errors[element.name] && touched[element.name] && (\n                                                                    <div className=\"invalid-feedback d-block\">\n                                                                        {errors[element.name]}\n                                                                    </div>\n                                                                )}\n                                                            </FormGroup>\n                                                        );\n                                                    }\n\n\n                                                    return (\n                                                        <FormGroup className=\"has-float-label\" key={index}>\n                                                                { !isHidden ? <Label for={element.name}>{element.label}</Label> : null }\n                                                            <Field\n                                                                className=\"form-control\"\n                                                                name={element.name}\n                                                                id={element.name}\n                                                                type={isHidden ? 'hidden' : 'text'}\n                                                                // placeholder={element.label}\n                                                                validate={ (value) => this.validate(element.label, value, element.validationRules)}\n                                                            />\n                                                            {errors[element.name] && touched[element.name] && (\n                                                                <div className=\"invalid-feedback d-block\">\n                                                                    {errors[element.name]}\n                                                                </div>\n                                                            )}\n                                                        </FormGroup>\n                                                    );\n\n\n                                                }) }\n                                            </Form>\n                                        )}\n                                    </Formik>\n                                </div>\n                            </Step>\n                        );\n                    } )\n                }\n            </Steps>\n        );\n    }\n\n    showTitle() {\n        const { componentTitle } = this.props.component;\n        if(componentTitle) {\n            return (\n                <CardTitle className=\"mb-0\">{componentTitle}</CardTitle>\n            );\n        }\n    }\n\n    render() {\n        const { customData, component: { hideSteps, hideBottomNavigation, steps } } = this.props;\n        let { loading, processing, currentStepData: activeData } = this.state;\n        if(loading) {\n            return (\n                <div className=\"loading\"></div>\n            );\n        }\n        let currentStepData;\n        if(customData) {\n            currentStepData = {\n                ...activeData,\n                ...customData\n            };\n        } else {\n            currentStepData = {\n                ...activeData\n            };\n        }\n        return (\n            <Card className=\"my-5\">\n                <CardBody className=\"wizard wizard-default\">\n                    { this.showTitle() }\n                    <Wizard>\n                        { !hideSteps ? <TopNavigation className=\"justify-content-center\" disableNav={true} /> : null }\n                        { this.getSteps(steps, currentStepData) }\n                        { !hideBottomNavigation ? <BottomNavigation processing={processing} onClickNext={this.onClickNext} onClickPrev={this.onClickPrev} className={\"justify-content-center \" + (this.state.bottomNavHidden && \"invisible\")} prevLabel=\"Back\" nextLabel=\"Next\" /> : null }\n                    </Wizard>\n                </CardBody>\n            </Card>\n        );\n    }\n}\n\nexport default withRouter(\n    injectIntl(Validation)\n);","import React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nconst InjectMassage = props => <FormattedMessage {...props} />;\n\nexport default injectIntl(InjectMassage, {\n    withRef: false\n});\n"],"sourceRoot":""}