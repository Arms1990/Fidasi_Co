{"version":3,"sources":["views/app/notifications.js"],"names":["window","io","path","process","NotificationItem","token","loginUser","user","baseURL","webSocketURL","isLast","clientID","clientSecret","id","image","img","message","title","payload","notificationPayload","data_creation","action","type","seen","created_at","handleNotificationClick","event","a","preventDefault","fetch","method","headers","then","response","ok","json","Error","url","resourceURI","open","FileSaver","saveAs","components","map","component","index","componentType","slug","identifier","key","kind","shadow","dialog","bootbox","closeButton","backdrop","centerVertical","onEscape","scrollable","size","init","targetContainer","find","addClass","ReactDOM","render","catch","error","NotificationManager","date","moment","utc","toDate","local","fromNow","href","onClick","className","classnames","Notifications","Component","state","loadingNotifications","notifications","nextPageURL","dropdownOpened","getNotifications","props","logoutUser","history","setState","console","renderNotifications","length","unseenNotifications","filter","notification","this","seenNotifications","newNotificationsTitle","earlierNotificationsTitle","modifiedNotifications","push","componentWillUnmount","removeEventListener","loadMoreNotifications","componentDidMount","addEventListener","JSON","parse","socket","extraHeaders","transportOptions","polling","on","err","getVerticalScrollPercentage","elm","p","parentNode","scrollTop","scrollHeight","clientHeight","document","body","sortedNotifications","sort","b","isAfter","classList","add","withRouter","connect","authUser","menu","containerClassnames"],"mappings":"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","file":"static/js/notifications-page.68b9e8ff.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Card, CardBody, CardTitle } from \"reactstrap\";\n\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { NotificationManager } from \"../../components/common/react-notifications\";\nimport moment from 'moment';\nimport Echo from 'laravel-echo';\nimport io from 'socket.io-client';\nimport classnames from 'classnames';\nimport { DataTable, DDL, ProductCardList, Table, ProductList, AreaChart, LineChart, PieChart, BarChart, DoughnutChart, Calendar, Card as ComponentCard } from \"../../components/misc\";\nimport Validation from '../../components/misc/wizard/Validation';\nimport FileSaver from 'file-saver';\nimport bootbox from 'bootbox';\nimport { fetch } from \"../../helpers/Utils\";\n\nwindow.io = io({\n\tpath: `${process.env.REACT_APP_APPLICATION_PROTOCOL}://${process.env.REACT_APP_APPLICATION_HOST}:${process.env.REACT_APP_NOTIFICATION_SERVICE_PORT}`\n});\n\n\n\nconst NotificationItem = ({ token, loginUser: user, baseURL, webSocketURL, isLast, clientID, clientSecret, id, image: img, message: title, payload: notificationPayload, data_creation, action, type, seen, created_at }) => {\n\n\t\n\tconst handleNotificationClick = async (event, id) => {\n\t\tevent.preventDefault();\n\t\t\n\t\treturn await fetch(`${webSocketURL}/notification/${id}`, {\n\t\t  method: 'POST',\n\t\t  headers: {\n\t\t\t'Accept': 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\t'Authorization': `Bearer ${token}`\n\t\t  }\n\t\t})\n\t\t.then( response => {\n\t\t  if(!response.ok) {\n\t\t\treturn response.json()\n\t\t\t.then( (json) => {\n\t\t\t  throw new Error(json.message)\n\t\t\t});\n\t\t  }\n\t\t  return response.json();\n\t\t})\n\t\t.then( response => {\n\t\t  const { url, type, resourceURI } = response;\n\t\t  if(type) {\n\t\t\tif(type === \"externalLink\") {\n\t\t\t\twindow.open(url, '_blank');\n\t\t\t}\n\t\t\t\n\t\t\tif(type === \"file\") {\n\t\t\t  return FileSaver.saveAs(resourceURI);\n\t\t\t}\n\t\n\t\t\tif(type === \"modal\") {\n\t\t\t  let components = response.components.map( (component, index) => {\n\t\t\t\tconst { type: componentType, slug } = component;\n\t\n\t\t\t\tif(componentType === \"datatable\") {\n\t\t\t\t  return (\n\t\t\t\t\t<DataTable slug={slug} token={token} user={user} clientSecret={clientSecret} baseURL={baseURL} clientID={clientID} identifier={component.id} key={index} component={component} />\n\t\t\t\t  );\n\t\t\t\t}\n\t\n\t\t\t\tif(componentType === \"ddl\") {\n\t\t\t\t  return (\n\t\t\t\t\t<DDL slug={slug} token={token} user={user} clientSecret={clientSecret} baseURL={baseURL} clientID={clientID} identifier={component.id} key={index} component={component} />\n\t\t\t\t  );\n\t\t\t\t}\n\t\n\t\t\t\tif(componentType === \"card\") {\n\t\t\t\t  return (\n\t\t\t\t\t<ComponentCard slug={slug} token={token} user={user} clientSecret={clientSecret} baseURL={baseURL} clientID={clientID} identifier={component.id} key={index} component={component} />\n\t\t\t\t  );\n\t\t\t\t}\n\t\n\t\t\t\tif(componentType === \"wizard\") {\n\t\t\t\t  return (\n\t\t\t\t\t<Validation slug={slug} token={token} user={user} clientSecret={clientSecret} baseURL={baseURL} clientID={clientID} identifier={component.id} key={index} component={component} />\n\t\t\t\t  );\n\t\t\t\t}\n\t\n\t\t\t\tif(componentType === \"productCardList\") {\n\t\t\t\t  return (\n\t\t\t\t\t<ProductCardList slug={slug} token={token} user={user} clientSecret={clientSecret} baseURL={baseURL} clientID={clientID} identifier={component.id} key={index} component={component} />\n\t\t\t\t  );\n\t\t\t\t}\n\t\n\t\t\t\tif(componentType === \"productList\") {\n\t\t\t\t  return (\n\t\t\t\t\t<ProductList slug={slug} token={token} user={user} clientSecret={clientSecret} baseURL={baseURL} clientID={clientID} identifier={component.id} key={index} component={component} />\n\t\t\t\t  );\n\t\t\t\t}\n\t\n\t\t\t  \n\t\n\t\t\t\tif(componentType === \"chart\") {\n\t\t\t\t  const { kind } = component;\n\t\n\t\n\t\t\t\t  if(kind === \"pie\") {\n\t\t\t\t\treturn (\n\t\t\t\t\t  <div key={index}>\n\t\t\t\t\t\t<PieChart shadow component={component} />\n\t\t\t\t\t  </div>\n\t\t\t\t\t);\n\t\t\t\t  }\n\t\n\t\t\t\t  if(kind === \"bar\") {\n\t\t\t\t\treturn (\n\t\t\t\t\t  <div key={index}>\n\t\t\t\t\t\t<BarChart shadow component={component} />\n\t\t\t\t\t  </div>\n\t\t\t\t\t);\n\t\t\t\t  }\n\t\n\t\t\t\t  if(kind === \"area\") {\n\t\t\t\t\treturn (\n\t\t\t\t\t  <div key={index}>\n\t\t\t\t\t\t<AreaChart shadow component={component} />\n\t\t\t\t\t  </div>\n\t\t\t\t\t);\n\t\t\t\t  }\n\t\n\t\t\t\t  if(kind === \"line\") {\n\t\t\t\t\treturn (\n\t\t\t\t\t  <div key={index}>\n\t\t\t\t\t\t<LineChart shadow component={component} />\n\t\t\t\t\t  </div>\n\t\t\t\t\t);\n\t\t\t\t  }\n\t\n\t\t\t\t  if(kind === \"doughnut\") {\n\t\t\t\t\treturn (\n\t\t\t\t\t  <div key={index}>\n\t\t\t\t\t\t<DoughnutChart shadow component={component} />\n\t\t\t\t\t  </div>\n\t\t\t\t\t);\n\t\t\t\t  }\n\t\n\t\t\t\t  return (\n\t\t\t\t\t<div key={index}>\n\t\t\t\t\t  <AreaChart shadow component={component} />\n\t\t\t\t\t</div>\n\t\t\t\t  );\n\t\t\t\t}\n\t\n\t\t\t\tif(componentType === \"calendar\") {\n\t\t\t\t  return (\n\t\t\t\t\t<Calendar slug={slug} token={token} user={user} clientSecret={clientSecret} baseURL={baseURL} clientID={clientID} identifier={component.id} key={index} component={component} />\n\t\t\t\t  );\n\t\t\t\t}\n\t\n\t\n\t\t\t\tif(componentType === \"table\") {\n\t\t\t\t  return (\n\t\t\t\t\t<Table slug={slug} token={token} user={user} clientSecret={clientSecret} baseURL={baseURL} clientID={clientID} identifier={component.id} key={index} component={component} />\n\t\t\t\t  );\n\t\t\t\t}\n\t\n\t\t\t\treturn null;\n\t\t\t  });\n\t\t\t  let dialog = bootbox.dialog({\n\t\t\t\tmessage: `<div class=\"loading\" />`,\n\t\t\t\tcloseButton: false,\n\t\t\t\tbackdrop: true,\n\t\t\t\tcenterVertical: true,\n\t\t\t\tonEscape: true,\n\t\t\t\tscrollable: true,\n\t\t\t\tsize: 'extra-large'\n\t\t\t  });\n\t\t\t  dialog.init(function() {\n\t\t\t\tlet targetContainer = dialog.find('.modal-content').addClass('modal-dialog-centered modal-dialog-scrollable').find('.modal-body').addClass('w-100').find('.bootbox-body');\n\t\t\t\treturn ReactDOM.render(components, targetContainer[0]);\n\t\t\t  });\n\t\t\t}\n\t\t\n\t\n\t\n\t\t\t\n\t\t  }\n\t\t\n\t\t})\n\t\t.catch( error => {\n\t\t  return NotificationManager.error(error.message, \"Notification Error\", 3000, null, null, '');\n\t\t});\n\t  \n\t\n\t\n\t\n\t  }\n\n  const date = moment(moment.utc(data_creation).toDate()).local().fromNow();\n\n  return (\n\t<a\n\thref=\"/\"\n\tonClick={ (event) => handleNotificationClick(event, id) }\n\tclassName={classnames(\"scrollbar-notification-item\", \"d-flex\", \"flex-row\", \"py-3\", { \"bg-light\": seen === \"N\" }, { \"mb-2\": !isLast }, { \"border-bottom\": seen === \"S\" && !isLast }) }>\n\t{/* <NavLink to=\"/app/pages/product/details\">\n\t\t<img\n\t\tsrc={item.thumb}\n\t\talt={item.title}\n\t\tclassName=\"img-thumbnail border-0 rounded-circle list-thumbnail align-self-center xsmall\"\n\t\t/>\n\t</NavLink> */}\n\n\t<div className=\"pl-3 pr-2\">\n\t\t{/* <div to=\"/app/pages/product/details\"> */}\n\t\t<p className=\"font-weight-medium mb-0\">{title}</p>\n\t\t<p className=\"text-muted mb-0 text-small\">\n\t\t\t{date}\n\t\t</p>\n\t\t{/* </NavLink> */}\n\t</div>\n\t</a>\n  );\n};\n\nclass Notifications extends Component {\n\n  state = {\n\tloadingNotifications: false,\n\tnotifications: [],\n\tnextPageURL: null,\n    dropdownOpened: false\n  }\n\n  getNotifications = async () => {\n    const { token, baseURL, webSocketURL, logoutUser, history, clientID } = this.props;\n    return await fetch(`${webSocketURL}/notifications?client_id=${clientID}`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    })\n    .then( response => {\n\t\tif(!response.ok) {\n\t\t\treturn logoutUser(history);\n\t\t}\n\t\treturn response.json();\n\t})\n    .then( response => {\n      return this.setState({\n\t\tnextPageURL: response.nextPageURL,\n\t\tnotifications: response.notifications,\n\t\tloadingNotifications: false\n      });\n    })\n    .catch( error => {\n      return console.error(error)\n    });\n  }\n\n  componentWillUnmount() {\n\twindow.removeEventListener('scroll', () => this.loadMoreNotifications(), false);\n  }\n\n  async componentDidMount() {\n\tawait this.getNotifications();\n\twindow.addEventListener('scroll', () => this.loadMoreNotifications(), false);\n    const { loginUser, token, webSocketURL } = this.props;\n\tconst user = typeof(loginUser) === \"string\" ? JSON.parse(loginUser) : loginUser;\n\tif (typeof io !== 'undefined') {\n\t\tconst socket = io(webSocketURL, {\n\t\t  extraHeaders: {\n\t\t\t'x-auth-token': token\n\t\t  },\n\t\t  transportOptions: {\n\t\t\tpolling: {\n\t\t\t  extraHeaders: {\n\t\t\t\t'x-auth-token': token\n\t\t\t  }\n\t\t\t}\n\t\t  }\n\t\t});\n\t\tsocket.on('error', function(err) {\n\t\t  throw new Error(err);\n\t\t});\n\t\tsocket.on(`private.notifications.User.${user.id}`, (notification) => {\n\t\t  const { notifications } = this.state;\n\t\t  return this.setState({\n\t\t\tnotifications: [ ...notifications, notification ]\n\t\t  });\n\t\t});\n\t}\n  }\n\n  renderNotifications = (notifications) => {\n    if(notifications.length === 0) {\n      return (\n        <div className=\"scrollbar-notification-item w-100 d-flex flex-row justify-content-center align-items-center mb-3 py-0 px-4\">\n          <p className=\"font-weight-medium font-italic mb-0\">No notification</p>\n        </div>\n      );\n\t}\n\t\n\tlet unseenNotifications = notifications.filter( notification => notification.seen === \"N\" );\n\tunseenNotifications = unseenNotifications.map( (notification, index) => {\n\t\treturn (\n\t\t\t<NotificationItem key={index} isLast={(unseenNotifications.length - 1) === index} {...this.props} {...notification} />\n\t\t);\n\t});\n\tlet seenNotifications = notifications.filter( notification => notification.seen === \"S\" );\n\tseenNotifications = seenNotifications.map( (notification, index) => {\n\t\treturn (\n\t\t\t<NotificationItem key={index} isLast={(seenNotifications.length - 1) === index} {...this.props} {...notification} />\n\t\t);\n\t});\n\t\n\n\t\n\n\tconst newNotificationsTitle = (\n\t\t<div key=\"new_notification_header\" className=\"w-100 d-flex flex-row justify-content-start pb-2 px-2 mb-2 border-bottom\">\n\t\t\t<h6>New</h6>\n\t\t</div>\n\t);\n\n\tconst earlierNotificationsTitle = (\n\t\t<div key=\"earlier_notification_header\" className=\"w-100 d-flex flex-row justify-content-start pb-2 pt-3 px-2 mb-2 border-bottom\">\n\t\t\t<h6>Earlier</h6>\n\t\t</div>\n\t);\n\n\tlet modifiedNotifications = [];\n\tif(unseenNotifications.length > 0) {\n\t\tmodifiedNotifications.push(newNotificationsTitle);\n\t}\n\tmodifiedNotifications = [\n\t\t...modifiedNotifications,\n\t\t...unseenNotifications\n\t];\n\tif(seenNotifications.length > 0) {\n\t\tmodifiedNotifications.push(earlierNotificationsTitle);\n\t}\n\tmodifiedNotifications = [\n\t\t...modifiedNotifications,\n\t\t...seenNotifications\n\t];\n    return modifiedNotifications;\n  }\n  \n  getVerticalScrollPercentage(elm) {\n\tvar p = elm.parentNode\n\treturn (elm.scrollTop || p.scrollTop) / (p.scrollHeight - p.clientHeight ) * 100\n  }\n\n  async loadMoreNotifications() {\n\tconst { token, clientID } = this.props;\n\tconst { nextPageURL, notifications, loadingNotifications } = this.state;\n\tconst scrollAmount = this.getVerticalScrollPercentage(document.body);\n\tif(scrollAmount > 70) {\n\t\tif(!loadingNotifications && (nextPageURL !== null)) {\n\t\t\tthis.setState({\n\t\t\t\tloadingNotifications: true\n\t\t\t});\n\t\t\treturn await fetch(`${nextPageURL}&client_id=${clientID}`, {\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\t'Accept': 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t'Authorization': `Bearer ${token}`\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.then( response => response.json() )\n\t\t\t\t.then( response => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tnextPageURL: response.nextPageURL,\n\t\t\t\t\t\tnotifications: [\n\t\t\t\t\t\t\t...notifications,\n\t\t\t\t\t\t\t...response.notifications\n\t\t\t\t\t\t],\n\t\t\t\t\t\tloadingNotifications: false\n\t\t\t\t\t});\n\t\t\t\t\t// return notificationsContainer.scrollTop = notificationsContainer.scrollTop - 100;\n\t\t\t\t})\n\t\t\t\t.catch( error => {\n\t\t\t\t\treturn console.error(error)\n\t\t\t\t});\n\t\t}\n\t}\n  }\n\n  render() {\n    const { notifications, loadingNotifications } = this.state;\n\tconst sortedNotifications = notifications.sort( (a, b) => moment(b.created_at).isAfter(moment(a.created_at)) );\n\n\tdocument.title = `Notifications | Back Office`;\n\tdocument.body.classList.add('rounded');\n\treturn (\n\t  <Fragment>\n\t\t<Card>\n\t\t\t<CardBody>\n\t\t\t\t<CardTitle>Notifications</CardTitle>\n\t\t\t\t<div>{ this.renderNotifications(sortedNotifications) }</div>\n\t\t\t\t{ loadingNotifications ? <div className=\"text-center mt-4 py-1\">\n\t\t\t\t\t<div className=\"loading position-static\" />\n\t\t\t\t</div> : null }\n\t\t\t</CardBody>\n\t\t</Card>\n\t  </Fragment>\n\t);\n  }\n}\n\n\nconst mapStateToProps = ({ authUser, menu }) => {\n  const { containerClassnames } = menu;\n  const { token, baseURL, webSocketURL, clientID, clientSecret, user: loginUser } = authUser;\n  return { token, baseURL, webSocketURL, clientID, clientSecret, loginUser, containerClassnames };\n};\n\nexport default withRouter(\n  connect(\n\tmapStateToProps,\n\t{}\n  )(Notifications)\n);\n"],"sourceRoot":""}